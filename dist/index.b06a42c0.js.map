{"mappings":"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","sources":["node_modules/socket.io/client-dist/socket.io.min.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/socket.io/node_modules/@socket.io/component-emitter/index.mjs","node_modules/socket.io/node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/util.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transport.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/webtransport.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/index.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/index.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io/build/esm/on.js","node_modules/socket.io/build/esm/socket.js","node_modules/socket.io/build/esm/contrib/backo2.js","node_modules/socket.io/build/esm/manager.js","node_modules/socket.io/build/esm/index.js","node_modules/socket.io/build/esm/url.js"],"sourcesContent":[null,"const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, encodedPacket => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        }\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else if (state === 2 /* READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        }\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this.writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this.writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this.writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { defaultBinaryType } from \"./transports/websocket-constructor.js\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            this.resetPingTimeout();\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","length","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","createPacketEncoderStream","TransformStream","transform","packet","controller","arrayBuffer","then","encoded","TextEncoder","encode","encodePacketToBinary","header","payloadLength","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","_len","attr","_key","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","prev","TransportError","_Error","_inherits","_super","_createSuper","reason","description","context","_this","_classCallCheck","_createClass","_wrapNativeSuper","Error","Transport","_Emitter","_super2","_this2","writable","_assertThisInitialized","query","socket","value","_get","_getPrototypeOf","readyState","doOpen","doClose","onClose","packets","write","onPacket","details","onPause","schema","undefined","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","seed","num","Math","floor","yeast","now","Date","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","xd","forceBase64","withCredentials","cookieJar","createCookieJar","get","poll","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePayload","doWrite","timestampRequests","timestampParam","sid","b64","createUri","_extends","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","_a","_this9","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","pow","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","writer","getWriter","read","done","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","_typeof","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","resetPingTimeout","onHandshake","JSON","sendPacket","code","filterUpgrades","getWritablePackets","payloadSize","c","utf8Length","ceil","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","Socket$1","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","RESERVED_EVENTS","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","reconstructor","isBinaryEvent","decodeString","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_opts","_autoConnect","subs","onpacket","subEvents","_readyState","_len2","_key2","retries","fromQueue","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","timer","_len3","_key3","_len4","_key4","withErr","reject","arg1","arg2","tryCount","pending","_len5","responseArgs","_key5","_drainQueue","force","_packet","_sendConnectPacket","_pid","pid","offset","_lastOffset","onconnect","onevent","onack","ondisconnect","destroy","message","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","s","f","sent","_len6","_key6","emitBuffered","subDestroy","listener","_anyOutgoingListeners","_step2","_iterator2","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","maybeReconnectOnOpen","errorSub","onping","ondata","ondecoded","add","active","_i","_nsps","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"version":3,"file":"index.b06a42c0.js.map","sourceRoot":"/__parcel_source_root/"}