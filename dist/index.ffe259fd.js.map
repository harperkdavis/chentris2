{"mappings":"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","sources":["node_modules/socket.io/node_modules/engine.io-parser/build/esm/commons.js","node_modules/socket.io/node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","node_modules/socket.io/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/socket.io/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/socket.io/node_modules/engine.io-parser/build/esm/index.js","node_modules/socket.io/node_modules/@socket.io/component-emitter/index.mjs","node_modules/socket.io/node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/util.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/yeast.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transport.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/parseqs.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/has-cors.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/index.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/contrib/parseuri.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/index.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io/build/esm/on.js","node_modules/socket.io/build/esm/socket.js","node_modules/socket.io/build/esm/contrib/backo2.js","node_modules/socket.io/build/esm/manager.js","node_modules/socket.io/build/esm/index.js","node_modules/socket.io/build/esm/url.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { XHR as XMLHttpRequest } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { encode } from \"../contrib/parseqs.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = closeEvent => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent\n        });\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: Polling\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\"\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", reason => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        const timeout = this.flags.timeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * ```\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     * ```\n     *\n     * @returns self\n     * @public\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(event);\n     * });\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     *\n     * <pre><code>\n     *\n     * const handler = (event, ...args) => {\n     *   console.log(event);\n     * }\n     *\n     * socket.onAnyOutgoing(handler);\n     *\n     * // then later\n     * socket.offAnyOutgoing(handler);\n     *\n     * </pre></code>\n     *\n     * @public\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\");\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["t","e","exports","module","define","amd","globalThis","self","io","this","Symbol","iterator","constructor","prototype","TypeError","n","length","r","enumerable","configurable","writable","Object","defineProperty","key","i","assign","bind","arguments","hasOwnProperty","call","apply","o","create","value","a","s","setPrototypeOf","getPrototypeOf","__proto__","c","Reflect","construct","sham","Proxy","Boolean","valueOf","u","push","Function","h","Map","toString","indexOf","has","get","set","f","ReferenceError","l","p","d","y","getOwnPropertyDescriptor","v","Array","g","isArray","slice","name","from","test","done","next","return","PACKET_TYPES","open","close","ping","pong","message","upgrade","noop","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","encodePacket","supportsBinary","callback","obj","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","split","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","arraybuffer","bytes","SEPARATOR","String","fromCharCode","Emitter","on","addEventListener","event","fn","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","emitReserved","listeners","hasListeners","globalThisShim","window","pick","_len","attr","_key","reduce","acc","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","clearTimeoutFn","prev","TransportError","reason","description","context","_this","_classCallCheck","_super","Error","Transport","_Emitter","_inherits","_super2","_createSuper","_this2","_assertThisInitialized","query","readyState","socket","_createClass","_get","_getPrototypeOf","doOpen","doClose","onClose","packets","write","packet","onPacket","details","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","str","encodeURIComponent","decode","qs","qry","pairs","pair","decodeURIComponent","XMLHttpRequest","err","hasCORS","XHR","xdomain","concat","join","empty","hasXHR2","responseType","Polling","_Transport","polling","location","isSSL","protocol","port","xd","hostname","xs","secure","forceBase64","poll","onPause","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","onOpen","_this4","_this5","count","doWrite","schema","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","path","_extends","Request","uri","_this6","req","request","method","xhrStatus","onError","_this7","onData","pollXhr","_this8","async","_this9","xscheme","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","unloadHandler","attachEvent","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","_loop","lastPacket","transports","websocket","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","regx","substr","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","ceil","byteLength","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j","Socket$1","PacketType","withNativeFile","File","isBinary","hasBinary","toJSON","_typeof","_deconstructPacket","buffers","placeholder","_placeholder","newData","_reconstructPacket","CONNECT","DISCONNECT","EVENT","ACK","CONNECT_ERROR","BINARY_EVENT","BINARY_ACK","Encoder","replacer","encodeAsString","encodeAsBinary","attachments","nsp","stringify","deconstruction","packetData","pack","deconstructPacket","unshift","Decoder","reviver","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","isPayloadValid","finishedReconstruction","reconPack","binData","reconstructPacket","Tt","freeze","Ot","At","Et","RESERVED_EVENTS","connect","connect_error","disconnect","disconnecting","newListener","connected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_reconnecting","_readyState","_len2","_key2","ack","pop","_registerAckCallback","isTransportWritable","engine","discardPacket","volatile","notifyOutgoingListeners","timer","_len3","_key3","_packet","onconnect","onevent","onack","ondisconnect","destroy","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","sent","_len4","_key4","emitBuffered","subDestroy","_destroy","listener","_anyOutgoingListeners","_step2","_iterator2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","onping","ondata","ondecoded","add","_i","_nsps","active","_close","delay","onreconnect","attempt","cache","parsed","loc","href","sameNamespace","forceNew","multiplex","Pt"],"version":3,"file":"index.ffe259fd.js.map"}