{"mappings":"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","sources":["public/sketch.js"],"sourcesContent":["const socket = {\n    io: null,\n    connected: false,\n    registered: false,\n};\n\nconst input = { keys: {}, mouse: {} };\n\nconst game = {\n    loading: true,\n    loadMessage: 'Starting...',\n\n    isTyping: false,\n    typedString: '',\n    typeLengthLimit: 0,\n\n    error: '',\n    errorAnim: -1,\n\n    inGame: false,\n    gameData: {},\n    localData: {},\n    playerData: {},\n\n    mainMenuAnim: 0,\n\n    menu: menus.main,\n    menuButtonAnims: [],\n    menuAnim: 0,\n\n    matchAnim: 0,\n    boardOrigin: [0, 0],\n    boardTranslation: [0, 0],\n    boardRotation: 0,\n    boardScale: 0,\n\n    boardNotifications: [],\n\n    awaitingKeypress: false,\n    keypressToChange: '',\n};\n\nconst state = {\n    creatingNewAccount: false,\n    loadingData: false,\n    joiningMatch: false,\n    inSettings: false,\n};\n\nconst images = {\n    nathan: null,\n    small: null,\n};\n\nlet SQUARE_SIZE = 0;\n\nconst controls = {\n    left: 37,\n    right: 39,\n    down: 40,\n    drop: ' '.charCodeAt(0),\n    rotateRight: 38,\n    rotateLeft: 'Z'.charCodeAt(0),\n    rotate180: 'X'.charCodeAt(0),\n    hold: 'C'.charCodeAt(0),\n};\n\nlet settings = null;\n\nconst defaultSettings = {\n    'moveSpeed': 2,\n    'controls.left': 37,\n    'controls.right': 39,\n    'controls.down': 40,\n    'controls.drop': ' '.charCodeAt(0),\n    'controls.rotateRight': 38,\n    'controls.rotateLeft': 'Z'.charCodeAt(0),\n    'controls.rotate180': 'A'.charCodeAt(0),\n    'controls.hold': 'C'.charCodeAt(0),\n};\n\nconst ON_OR_OFF = [{ key: 'on', value: true }, {key: 'off', value: false}];\n\nfunction resetState() {\n    for (let val in state) {\n        state[val] = false;\n    }\n\n    game.inGame = false;\n    game.loading = false;\n    game.loadMessage = '';\n\n    game.isTyping = false;\n    game.typedString = '';\n    game.typeLengthLimit = 0;\n\n    game.error = '';\n    game.errorAnim = -1;\n\n    game.inGame = false;\n    game.gameData = {};\n    game.localData = {};\n    game.playerData = {};\n\n    game.mainMenuAnim = 0;\n\n    game.menu = menus.main;\n    game.menuButtonAnims = [];\n    game.menuAnim = 0;\n\n    game.matchAnim = 0;\n\n    game.boardOrigin = [width / 2, - height / 2];\n    game.boardTranslation = [0, 0];\n    game.boardRotation = 0;\n    game.boardScale = 1;\n\n    game.boardNotifications = [];\n\n    game.awaitingKeypress = false;\n    game.keypressToChange = '';\n}\n\nfunction preload() {\n    images.nathan = loadImage('./assets/nathan.png');\n    images.small = loadImage('./assets/nathan32.png');\n}\n\nfunction setup() {\n    createCanvas();\n    windowResized();\n\n    loadRankIcons();\n\n    reset();\n    connect();\n}\n\nfunction reset() {\n    background(250);\n    \n    game.loading = true;\n    game.loadMessage = 'Starting...';\n\n    socket.io = null;\n    socket.connected = false;\n    socket.registered = false;\n\n    loadSettings();\n\n    resetState();\n}\n\nfunction resetSettings() {\n    settings = null;\n    localStorage.removeItem('chentris_2_settings');\n    loadSettings();\n}\n\nfunction getSetting(key) {\n    if (settings[key]) {\n        return settings[key];\n    } else {\n        settings[key] = defaultSettings[key];\n        saveSettings();\n        return defaultSettings[key];\n    }\n}\n\nfunction setSetting(key, value) {\n    settings[key] = value;\n    saveSettings();\n}\n\nfunction loadSettings() {\n    if (localStorage.getItem('chentris_2_settings')) {\n        settings = JSON.parse(localStorage.getItem('chentris_2_settings'));\n    } else {\n        saveSettings();\n        loadSettings();\n    }\n}\n\nfunction saveSettings() {\n    localStorage.setItem('chentris_2_settings', JSON.stringify(settings || defaultSettings));\n}\n\nfunction getId() {\n    return localStorage.getItem('chentris_2_id');\n}\n\nfunction setId(id) {\n    return localStorage.setItem('chentris_2_id', id || 'null');\n}\n\nfunction loadData() {\n    resetState();\n\n    game.loading = true;\n    game.loadMessage = 'Loading player...';\n\n    state.loadingData = true;\n\n    socket.io.emit('player_data');\n}\n\nfunction connect() {\n    socket.io = io({ path: '/chentris2/socket.io', query: { id: getId(), forceNew: true} });\n    socket.connected = true;\n\n    game.loading = true;\n    game.loadMessage = 'Connecting...';\n\n    socket.io.on('connect', () => {\n        game.loading = true;\n        game.loadMessage = 'Registering...';\n    });\n\n    socket.io.on('register', (data) => {\n        if (data.registered) {\n            socket.registered = true;\n            \n            loadData();\n        } else {\n            if (data.error === 'INVALID_ID') {\n                game.error = 'The id is invalid. If the issue persists, clear your local storage.';\n                game.errorAnim = 99999;\n            } else if (data.error === 'NULL_ID' || data.error === 'INVALID_USERNAME') {\n                game.loading = false;\n                game.loadMessage = '';\n\n                game.isTyping = true;\n                game.typedString = '';\n                game.typeLengthLimit = 16;\n\n                state.creatingNewAccount = true;\n                \n                if (data.error === 'INVALID_USERNAME') {\n                    game.error = 'Your username is invalid.';\n                    game.errorAnim = 5;\n                }\n            }\n        }\n    });\n\n    socket.io.on('set_id', (data) => {\n        setId(data.id);\n    });\n\n    socket.io.on('player_data', (data) => {\n        game.loading = false;\n        game.loadMessage = '';\n\n        game.playerData = data.user;\n\n        if (!data.inGame) {\n            game.mainMenuAnim = 1;\n            \n            switchMenu('main');\n\n            if (window.location.hash.length >= 1) {\n                \n                if (window.location.hash.length === 10) {\n                    joinMatch(window.location.hash.substring(1));\n                } else {\n                    game.error = 'Invalid match link.';\n                    game.errorAnim = 5;\n                }\n\n            }\n        } else {\n            // setup game\n        }\n    });\n\n    socket.io.on('error', (data) => {\n        game.errorAnim = 5;\n        game.error = `Fatal packet error type <${data.type}>: ${data.error}. Reloading in 5 seconds.`;\n        setTimeout(() => {\n            reset();\n            connect();\n        }, 5000);\n    });\n\n    socket.io.on('match_found', data => {\n        game.loading = false;\n        game.loadMessage = '';\n        \n        window.location.hash = '';\n        if (data.error) {\n            game.error = data.message;\n            game.errorAnim = 5;\n            return;\n        }\n\n        game.inGame = true;\n\n        const board = deepCopyBoard(data.match.boards[game.playerData._id]);\n\n        game.gameData = {\n            match: data.match,\n            moves: [],\n        }\n        \n        game.matchAnim = 1;\n        game.boardOrigin = [width / 2, -height / 2]\n        game.boardTranslation = [0, 0];\n        game.boardRotation = 0;\n        game.boardScale = 1;\n\n        game.boardNotifications = [];\n\n        game.localData = {\n            board,\n            state: defaultSubmoveState(),\n            stateAcc: 0,\n            speed: 80,\n            timers: {\n                fall: 0,\n                dropping: false,\n                shortDrop: 0,\n                longDrop: 0,\n            },\n            deadAnim: 0,\n            boardAnims: {},\n            boardSizes: {},\n            ready: false,\n            attackOption: 0,\n        };\n    });\n\n    socket.io.on('board_reset', () => {\n\n        const board = deepCopyBoard(game.gameData.match.boards[game.playerData._id]);\n\n        game.boardOrigin = [width / 2, -height / 2]\n        game.boardTranslation = [0, 0];\n        game.boardRotation = 0;\n        game.boardScale = 1;\n\n        game.gameData = {\n            match: game.gameData.match,\n            moves: [],\n        };\n\n        game.localData = {\n            board,\n            state: defaultSubmoveState(),\n            stateAcc: 0,\n            speed: 80,\n            timers: {\n                fall: 0,\n                dropping: false,\n                shortDrop: 0,\n                longDrop: 0,\n            },\n            deadAnim: 0,\n            boardAnims: {},\n            boardSizes: {},\n            ready: false,\n            attackOption: 0,\n        };\n\n        game.localData.board.move = 0;\n    });\n\n    socket.io.on('match_state', data => {\n        if (!game.inGame) {\n            return;\n        }\n\n        const board = data.match.boards[game.playerData._id];\n        const moveNumber = game.localData.board.move;\n\n        game.gameData = {\n            match: data.match,\n            moves: game.gameData.moves.filter(move => move.num >= board.move),\n        };\n\n        game.localData.board = board;\n        \n        for (let move of game.gameData.moves) {\n            game.localData.board = makeMove(move.move, game.localData.board, Math.seedrandom, game.gameData.match.rules);\n        }\n\n        game.localData.board.move = moveNumber;\n        \n        if (game.gameData.match.newNotification) {\n            game.boardNotifications.push({ text: game.gameData.match.notification, time: 0 });\n        }\n\n    });\n}\n\nfunction joinMatch(code) {\n    socket.io.emit('join_match', { code });\n    game.loading = true;\n    game.loadMessage = 'Joining...';\n}\n\nfunction windowResized() {\n    resizeCanvas(windowWidth, windowHeight);\n    SQUARE_SIZE = (height - 200) / 20;\n}\n\nfunction keyTyped() {\n    if (game.isTyping) {\n        if (game.typedString.length < game.typeLengthLimit && key !== 'Enter') {\n            game.typedString += key;\n        }\n    }\n}\n\nfunction keyPressed() {\n\n    if (game.awaitingKeypress) {\n        if (keyCode !== ESCAPE) {\n            setSetting(game.keypressToChange, keyCode);\n        }\n        game.awaitingKeypress = false;\n        game.keypressToChange = '';\n    }\n\n    if (keyCode === BACKSPACE && game.isTyping) {\n        if (game.typedString.length > 0) {\n            game.typedString = game.typedString.substring(0, game.typedString.length - 1);\n        }\n    }\n    input.keys[keyCode] = 0;\n}\n\nfunction keyReleased() {\n    input.keys[keyCode] = -1;\n}\n\nfunction mousePressed() {\n    input.mouse[mouseButton] = 0;\n}\n\nfunction mouseReleased() {\n    input.mouse[mouseButton] = -1;\n}\n\nfunction updateInput() {\n    for (let key in input.keys) {\n        if (input.keys[key] >= 0) {\n            input.keys[key] += 1;\n        }\n    }\n    for (let button in input.mouse) {\n        if (input.mouse[button] >= 0) {\n            input.mouse[button] += 1;\n        }\n    }\n}\n\nfunction clamp(a, mi, ma) {\n    return min(max(a, mi), ma)\n}\n\nfunction update() {\n    const deltaTime = frameRate() > 0 ? ( 1 / frameRate() ) : 0;\n\n    if (game.errorAnim > 0) {\n        game.errorAnim -= deltaTime;\n    }\n    \n    if (state.creatingNewAccount) {\n        if (input.keys['\\r'.charCodeAt(0)] === 0) {\n            const username = game.typedString.trim().substring(0, 32);\n\n            if (username.length > 0) {\n                socket.io.emit('create_account', { username });\n                game.loading = true;\n                game.loadMessage = 'Registering...';\n                game.creatingNewAccount = false;\n            }\n            \n        }\n    }\n\n    if (socket.registered) {\n\n        game.mainMenuAnim = lerp(game.mainMenuAnim, 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.menuAnim = lerp(game.menuAnim, 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.matchAnim = lerp(game.matchAnim, 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n\n        if (!game.inGame) {\n\n            if (state.joiningMatch) {\n                const match = /[^0-9]/g;\n                game.typedString = game.typedString.replace(match, '');\n\n                const stopJoiningMatch = () => {\n                    state.joiningMatch = false;\n                    game.isTyping = false;\n                    game.typedString = '';\n                    game.typeLengthLimit = 0;\n                };\n\n                buttonState(width / 2 + 160, height / 2 - 50, 40, 20, () => {}, stopJoiningMatch);\n\n                if (input.keys[ESCAPE] === 0) {\n                    stopJoiningMatch();\n                }\n\n                if (game.typedString.length === 9) {\n                    joinMatch(game.typedString);\n\n                    game.isTyping = false;\n                    game.typedString = '';\n                    game.typeLengthLimit = -1;\n                    state.joiningMatch = false;\n                }\n            } else if (state.inSettings) {\n                const leaveOptions = () => {\n                    state.inSettings = false;\n                }\n                buttonState(width / 2 + 460, height / 2 - 300, 40, 20, () => {}, leaveOptions);\n                \n                if (input.keys[ESCAPE] === 0) {\n                    leaveOptions();\n                }\n\n                function awaitKeypress(name) {\n                    game.awaitingKeypress = true;\n                    game.keypressToChange = name;\n                }\n\n                buttonState(width / 2 + 140, height / 2 - 250, 100, 20, () => {}, () => awaitKeypress('controls.left'));\n                buttonState(width / 2 + 140, height / 2 - 220, 100, 20, () => {}, () => awaitKeypress('controls.right'));\n                buttonState(width / 2 + 140, height / 2 - 190, 100, 20, () => {}, () => awaitKeypress('controls.down'));\n                buttonState(width / 2 + 140, height / 2 - 160, 100, 20, () => {}, () => awaitKeypress('controls.drop'));\n                buttonState(width / 2 + 140, height / 2 - 130, 100, 20, () => {}, () => awaitKeypress('controls.rotateLeft'));\n                buttonState(width / 2 + 140, height / 2 - 100, 100, 20, () => {}, () => awaitKeypress('controls.rotateRight'));\n                buttonState(width / 2 + 140, height / 2 - 70, 100, 20, () => {}, () => awaitKeypress('controls.rotate180'));\n                buttonState(width / 2 + 140, height / 2 - 40, 100, 20, () => {}, () => awaitKeypress('controls.hold'));\n\n                buttonState(width / 2 + 340, height / 2 + 260, 150, 30, () => {}, () => resetSettings());\n\n            } else {\n\n                for (let i = 0; i < game.menu.length; i++) {\n                    const mouseOver = (mouseX < 300 && mouseY > 100 + i * 50 && mouseY < 140 + i * 50);\n    \n                    game.menuButtonAnims[i] = lerp(game.menuButtonAnims[i], mouseOver ? 1 : 0, clamp(0.5 * 60 * deltaTime, 0, 1));\n    \n                    if (input.mouse[LEFT] === 0 && mouseOver) {\n                        game.menu[i].onClick();\n                    }\n                }\n\n            }\n\n        }\n    }\n\n    if (game.inGame) {\n\n        if (input.keys['\\r'.charCodeAt(0)] === 0) {\n            if (!game.gameData.match.playing) {\n                game.localData.ready = !game.localData.ready;\n                socket.io.emit('ready', { ready: game.localData.ready });\n            }\n        }\n\n        buttonState(20, 95, 180, 30, () => {}, () => navigator.clipboard.writeText(`https://play.hked.live/chentris2#${game.gameData.match.joinCode}`), !game.gameData.match.options.allowJoining);\n        buttonState(20, 130, 180, 30, () => {}, () => { socket.io.emit('leave_match'); reset(); connect(); }, false);\n\n        if (!game.inGame) {\n            return;\n        }\n\n        function changeOption(name, newValue) {\n            const newOptions = {...game.gameData.match.options};\n            newOptions[name] = newValue;\n            socket.io.emit('match_options', {options: newOptions});\n        }\n        \n        function changeRule(name, newValue) {\n            const newRules = {...game.gameData.match.rules};\n            newRules[name] = newValue;\n            socket.io.emit('match_options', {rules: newRules});\n        }\n\n        selectState(150, 200, 40, 20, ON_OR_OFF, () => game.gameData.match.options.allowJoining, (v) => changeOption('allowJoining', v), false);\n        selectState(150, 225, 40, 20, ON_OR_OFF, () => game.gameData.match.options.public, (v) => changeOption('public', v), false);\n        selectState(150, 250, 40, 20, ON_OR_OFF, () => game.gameData.match.options.ranked, (v) => changeOption('ranked', v), false);\n\n        const comp = game.gameData.match.rules.competitive;\n        selectState(150, 325, 40, 20, ON_OR_OFF, () => comp, (v) => changeRule('competitive', v), false);\n        selectState(150, 350, 40, 20, [{ key: 'slow', value: 80 }, { key: 'medium', value: 160 }, { key: 'fast', value: 320 }, { key: 'very fast', value: 640 }], () => game.gameData.match.rules.initialSpeed, (v) => changeRule('initialSpeed', v), comp);\n        selectState(150, 375, 40, 20, ON_OR_OFF, () => game.gameData.match.rules.resendGarbage, (v) => changeRule('resendGarbage', v), comp);\n        selectState(150, 400, 40, 20, ON_OR_OFF, () => game.gameData.match.rules.forgivingCombos, (v) => changeRule('forgivingCombos', v), comp);\n        selectState(150, 425, 40, 20, [{ key: 'one', value: 1 }, { key: 'two', value: 2 }, { key: 'three', value: 3 }], () => game.gameData.match.rules.garbageTurns, (v) => changeRule('garbageTurns', v), comp);\n        selectState(150, 450, 40, 20, ON_OR_OFF, () => game.gameData.match.rules.garbageDefense, (v) => changeRule('garbageDefense', v), comp);\n\n        if (!game.inGame) {\n            return;\n        }\n\n        for (let notif of game.boardNotifications) {\n            notif.time += deltaTime;\n        }\n        game.boardNotifications = game.boardNotifications.filter(notif => notif.time <= 1);\n\n        let origin = {x: 0, y: 0};\n\n        if (!game.gameData.match.playing || game.gameData.match.players.filter(id => !game.gameData.match.boards[id].lost).length <= 1) {\n            origin = {x: width / 2, y: height / 2};\n        } else {\n            origin = {x: SQUARE_SIZE * 13, y: height / 2};\n        }\n\n        game.boardOrigin[0] = lerp(game.boardOrigin[0], origin.x, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.boardOrigin[1] = lerp(game.boardOrigin[1], origin.y, clamp(0.1 * 60 * deltaTime, 0, 1));\n\n        game.boardTranslation[0] = lerp(game.boardTranslation[0], 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.boardTranslation[1] = lerp(game.boardTranslation[1], 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        \n        game.boardRotation = lerp(game.boardRotation, 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.boardScale = lerp(game.boardScale, 1, clamp(0.1 * 60 * deltaTime, 0, 1));\n\n        game.localData.timers.fall += deltaTime;\n        \n        game.localData.stateAcc += deltaTime;\n\n        if (game.localData.board.lost) {\n            game.localData.deadAnim += deltaTime;\n        } else {\n            game.localData.deadAnim = lerp(game.localData.deadAnim, 0, clamp(0.5 * 60 * deltaTime, 0, 1));\n        }\n\n        if (game.localData.stateAcc > 1 / 20) {\n            game.localData.stateAcc = 0;\n            socket.io.emit('submove_state', { state: game.localData.state, timers: game.localData.timers, attackOption: game.localData.attackOption });\n        }\n\n        if (game.localData.timers.dropping) {\n            game.localData.timers.shortDrop += deltaTime * (input.keys[settings['controls.down']] >= 0 ? 4 : 1);\n            game.localData.timers.longDrop += deltaTime;\n        }\n\n        let move = null;\n\n        if (input.keys[settings['controls.hold']] === 0) {\n            move = { type: 'hold' };\n            if (game.localData.board.canHold) {\n                game.localData.state = defaultSubmoveState();\n            }\n        }\n\n        const fallPerMinute = 60 / game.localData.speed;\n        if (input.keys[settings['controls.down']] % settings['moveSpeed'] === 0 || game.localData.timers.fall >= fallPerMinute) {\n            game.localData.state = makeSubmove('down', game.localData.board, game.localData.state);\n\n            let first = true;\n            while (game.localData.timers.fall >= fallPerMinute) {\n                if (!first) {\n                    game.localData.state = makeSubmove('down', game.localData.board, game.localData.state);\n                }\n                first = false;\n                game.localData.timers.fall -= fallPerMinute;\n            }\n        }\n\n        if (input.keys[settings['controls.left']] % settings['moveSpeed'] === 0 && (input.keys[settings['controls.left']] === 0 || input.keys[settings['controls.left']] > settings['moveSpeed'] * 2)) {\n            game.localData.state = makeSubmove('left', game.localData.board, game.localData.state);\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardTranslation[0] -= 2;\n                game.boardRotation -= 0.002;\n            }\n        }\n        \n        if (input.keys[settings['controls.right']] % settings['moveSpeed'] === 0 && (input.keys[settings['controls.right']] === 0 || input.keys[settings['controls.right']] > settings['moveSpeed'] * 2)) {\n            game.localData.state = makeSubmove('right', game.localData.board, game.localData.state);\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardTranslation[0] += 2;\n                game.boardRotation += 0.002;\n            }\n            \n        }\n\n        if (input.keys[settings['controls.rotateRight']] === 0) {\n            game.localData.state = makeSubmove('rotateRight', game.localData.board, game.localData.state);\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardRotation += 0.001;\n            }\n        }\n\n        if (input.keys[settings['controls.rotateLeft']] === 0) {\n            game.localData.state = makeSubmove('rotateLeft', game.localData.board, game.localData.state);\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardRotation -= 0.001;\n            }\n        }\n\n        for (let i = 0; i < 5; i += 1) {\n            if (input.keys[((i + 1).toString()).charCodeAt(0)] === 0) {\n                game.localData.attackOption = i;\n            }\n        }\n\n        if (input.keys[settings['controls.rotate180']] === 0) {\n            game.localData.state = makeSubmove('rotate180', game.localData.board, game.localData.state);\n            \n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardRotation -= 0.002;\n            }\n        }\n\n        game.localData.timers.dropping = game.localData.state.pieceY === makeSubmove('drop', game.localData.board, game.localData.state).pieceY;\n\n        if (\n            input.keys[settings['controls.drop']] === 0\n            || game.localData.timers.shortDrop >= max(0.5, 120 / game.localData.speed)\n            || game.localData.timers.longDrop >= max(2, 640 / game.localData.speed)\n        ) {\n            if (input.keys[settings['controls.drop']] === 0) {\n                game.localData.state = makeSubmove('drop', game.localData.board, game.localData.state);\n                game.boardTranslation[1] += 10;\n            }\n            move = { type: 'move', submoves: game.localData.state.submoves }\n            game.localData.timers = {\n                fall: 0,\n                dropping: false,\n                shortDrop: 0,\n                longDrop: 0,\n            };\n            game.localData.state = defaultSubmoveState();\n\n        }\n\n        if (move) {\n            game.localData.board = makeMove(move, game.localData.board, Math.seedrandom, game.gameData.match.rules);\n            socket.io.emit('move', { move, time: Date.now() });\n\n            if (game.localData.board.clears > 0) {\n                const clears = game.localData.board.clears;\n                const squareClears = clears ** 2;\n\n                game.boardRotation += clears * 0.1;\n                game.boardScale += squareClears * 0.02;\n            }\n\n            game.gameData.moves.push({ move, num: game.localData.board.move });\n            game.localData.board.move += 1;\n        }\n        \n        if (game.gameData.match.playing) {\n            let i = 0;\n            const count = game.gameData.match.players.filter(id => !game.gameData.match.boards[id].lost).length;\n            const size = count <= 2 ? SQUARE_SIZE : (height - 150) / ceil(sqrt(count)) / 24;\n\n            let spectating = game.gameData.match.boards[game.playerData._id].lost;\n            for (let id of game.gameData.match.players.filter(id => id !== game.playerData._id)) {\n                const idealPos = getIdealPos(i, count - 1, width - 200 - SQUARE_SIZE * 17, height - 200);\n                idealPos[0] += SQUARE_SIZE * 17 + 100;\n                idealPos[1] += 100;\n\n                const isSpectator = spectating && !game.gameData.match.boards[id].lost;\n                if (isSpectator) {\n                    idealPos[0] = game.boardOrigin[0];\n                    idealPos[1] = game.boardOrigin[1];\n                }\n\n                if (!game.localData.boardAnims[id]) {\n                    game.localData.boardAnims[id] = [];\n                    game.localData.boardAnims[id][0] = idealPos[0];\n                    game.localData.boardAnims[id][1] = idealPos[1];\n                    game.localData.boardAnims[id][2] = 0;\n                    game.localData.boardSizes[id] = 0;\n                }\n\n                game.localData.boardAnims[id][0] = lerp(game.localData.boardAnims[id][0], idealPos[0], clamp(0.1 * 60 * deltaTime, 0, 1));\n                game.localData.boardAnims[id][1] = lerp(game.localData.boardAnims[id][1], idealPos[1], clamp(0.1 * 60 * deltaTime, 0, 1));\n\n                game.localData.boardSizes[id] = lerp(game.localData.boardSizes[id], isSpectator ? SQUARE_SIZE : size, clamp(0.05 * 60 * deltaTime, 0, 1));\n\n                if (!game.gameData.match.boards[id].lost) {\n                    if (!isSpectator) {\n                        i += 1;\n                    }\n                } else {\n                    const anim = game.localData.boardAnims[id][2] * 50;\n                    const deadAnimY = (anim ** 2) - 20 * anim;\n                    const deadAnimX = -(anim * log(anim + 1));\n                    game.localData.boardAnims[id][0] = idealPos[0] + deadAnimX;\n                    game.localData.boardAnims[id][1] = idealPos[1] + deadAnimY;\n\n                    game.localData.boardAnims[id][2] += deltaTime;\n                }\n\n                if (isSpectator) {\n                    spectating = false;\n                }\n            }\n            \n        }\n    }\n}\n\nfunction buttonState(x, y, w, h, onHover, onClick, disabled = false) {\n    if (disabled) {\n        return;\n    }\n    if (mouseX > x && mouseY > y && mouseX < x + w && mouseY < y + h) {\n        onHover();\n        if (input.mouse[LEFT] === 0) {\n            onClick();\n        }\n    }\n}\n\nfunction drawButton(x, y, w, h, tx, onHover, onClick, disabled = false) {\n    \n    if (mouseX > x && mouseY > y && mouseX < x + w && mouseY < y + h) {\n        onHover();\n        if (input.mouse[LEFT] === 0) {\n            onClick();\n        }\n    }\n\n    if (disabled) {\n        fill(200);\n    }\n    \n    stroke(0);\n    rect(x, y, w, h);\n\n    textSize(16);\n    textAlign(CENTER, CENTER);\n    textStyle(NORMAL);\n\n    fill(0);\n    noStroke();\n    text(tx, x + w / 2, y + h / 2);\n}\n\nfunction selectState(x, y, w, h, options, getValue, setValue, disabled = false) {\n    if (!options) {\n        return;\n    }\n    const value = getValue();\n    const nextValue = options[mod(options.findIndex(option => option.value === value) + 1, options.length)].value;\n    buttonState(x, y, w, h, () => {}, () => setValue(nextValue), disabled);\n}\n\nfunction drawSelect(x, y, w, h, options, getValue, disabled = false) {\n    const value = getValue();\n    const tx = options.find(option => option.value === value).key;\n    \n    fill(250);\n    drawButton(x, y, w, h, tx, () => fill(240), () => fill(230), disabled);\n}\n\nfunction drawError() {\n    if (game.errorAnim > 0) {\n        fill(250, 150, 150);\n        stroke(0);\n        rect(width / 2 - 300, 200, 600, 50);\n\n        noStroke();\n        fill(0);\n        textAlign(CENTER, CENTER);\n        textSize(16);\n        text(game.error, width / 2, 225);\n    }\n}\n\nfunction drawLoading() {\n    fill(250);\n    strokeWeight(1);\n    stroke(0);\n\n    rect(width / 2 - 100, height / 2 - 60, 200, 120);\n    noStroke();\n    fill(0);\n    textAlign(CENTER, CENTER);\n    textStyle(NORMAL);\n    textSize(16);\n    text(\"Loading...\", width / 2, height / 2 - 40);\n\n    tint(255);\n    push();\n\n    translate(width / 2, height / 2);\n    rotate(millis() * 0.01);\n    image(images.small, -16, -16);\n\n    stroke(0);\n    noFill();\n    rect(-16, -16, 32, 32);\n    pop();\n\n    textSize(10);\n    text(game.loadMessage, width / 2, height / 2 + 40);\n}\n\nfunction drawCreateAccount() {\n    fill(250);\n    strokeWeight(1);\n    stroke(0);\n\n    rect(width / 2 - 250, height / 2 - 125, 500, 200);\n\n    fill(0);\n    noStroke();\n\n    textAlign(CENTER, CENTER);\n    textStyle(BOLD);\n    textSize(16);\n    text('Chentris 2', width / 2, height / 2 - 90);\n\n    textStyle(NORMAL);\n    text('Welcome! Before continuing, please create a username.', width / 2, height / 2 - 50);\n    text('Press enter to continue.', width / 2, height / 2 + 40);\n\n    textSize(32);\n    textWrap(CHAR);\n    text(game.typedString + '_', width / 2 - 250, height / 2, 500);\n}\n\nfunction drawPiece(x, y, rot, size, piece, trans = 255, strokeless = false) {\n    const layout = getRotatedPiece(piece, rot);\n    const color = PIECES[piece].color;\n    (strokeless ? noStroke() : stroke(0));\n    fill(color[0], color[1], color[2], trans);\n    for (let i = 0; i < layout.length; i++) {\n        for (let j = 0; j < layout[i].length; j++) {\n            if (layout[i][j] === 1) {\n                rect(x + j * size, y + i * size, size, size);\n            }\n            \n        }\n    }\n}\n\nfunction getIdealPos(index, size, wi, hi) {\n    if (size <= 0) {\n        return [0.5 * wi, 0.5 * hi];\n    }\n    const minSqrt = ceil(sqrt(size));\n    const y = floor(index / minSqrt);\n    const x = index % minSqrt;\n\n    return [((x + 0.5) / minSqrt) * wi, ((y + 0.5) / minSqrt) * hi];\n}\n\nfunction drawBoard(board, state, timers, squareSize, detail) {\n\n    if (detail >= 0) {\n        fill(250);\n        stroke(0);\n        rect(-5 * squareSize, -10 * squareSize, 10 * squareSize, 20 * squareSize);\n\n        stroke(200);\n        for (let i = 0; i < 19; i++) {\n            line(-5 * squareSize + 1, (-9 + i) * squareSize, 5 * squareSize - 1, (-9 + i) * squareSize);\n        }\n\n        for (let i = 0; i < 9; i++) {\n            line((-4 + i) * squareSize, -10 * squareSize + 1, (-4 + i) * squareSize, 10 * squareSize - 1);\n        }\n    }\n\n    if (detail >= 2) {\n        fill(250);\n        stroke(0);\n        rect(5 * squareSize, -10 * squareSize, 0.5 * squareSize, 20 * squareSize);\n        rect(-5.5 * squareSize, -10 * squareSize, 0.5 * squareSize, 20 * squareSize);\n\n        let sum = 0;\n        for (let i = 0; i < board.garbageQueue.length; i++) {\n            const garbage = board.garbageQueue[i];\n            const amount = garbage.amount\n            sum += amount;\n            if (garbage.turns === 1) {\n                fill(250, 100 + 150 * sin(millis() * 0.04), 100)\n            } else {\n                fill(200);\n            }\n            rect(5 * squareSize, (10 - sum) * squareSize, 0.5 * squareSize, amount * squareSize);\n        }\n        const currentLevel = Math.floor(getJuiceLevel(board.juice));\n        const nextLevel = currentLevel + 1;\n        const progress = map(board.juice, getLevelJuice(currentLevel), getLevelJuice(nextLevel), 0, 1);\n        stroke(0);\n        fill(50 + random(0, 50), 100 + random(0, 50), 200 + random(0, 50));\n        rect(-5.5 * squareSize, (10 - progress * 20) * squareSize, 0.5 * squareSize, progress * 20 * squareSize);\n        for (let i = 0; i < currentLevel; i += 1) {\n            fill(50 + random(0, 50), 100 + random(0, 50), 200 + random(0, 50));\n            rect(-6 * squareSize, (9.5 - i * 0.5) * squareSize, 0.5 * squareSize, 0.5 * squareSize);\n        }\n\n        for (let i = 0; i < 5; i++) {\n            drawPiece(6.5 * squareSize, (-10 + 4 * i) * squareSize, 0, squareSize, board.bag[i + 1]);\n        }\n\n        if (board.hold !== -1) {\n            drawPiece((-6 - PIECES[board.hold].layout.length) * squareSize, -10 * squareSize, 0, squareSize, board.hold, board.canHold ? 255 : 100);\n        }\n    }\n\n    if (detail >= 1) {\n        textAlign(TOP, CENTER);\n        fill(0);\n        noStroke();\n        textSize(16);\n        textStyle(NORMAL);\n\n        drawPiece(\n            (state.pieceX - 5) * squareSize, \n            (state.pieceY - 30) * squareSize, \n            state.pieceRotation,\n            squareSize,\n            board.bag[0],\n            timers.dropping ? ((sin(millis() * 0.02) + 1) * 100 + 50) : 255\n        );\n    }\n\n    if (detail >= 3) {\n\n        const dropSubmove = makeSubmove('drop', board, state);\n\n        drawPiece(\n            (dropSubmove.pieceX - 5) * squareSize, \n            (dropSubmove.pieceY - 30) * squareSize, \n            state.pieceRotation,\n            squareSize,\n            board.bag[0],\n            100,\n            true\n        );\n\n    }\n\n    if (detail >= 1) {\n\n        for (let i = 0; i < 40; i++) {\n            for (let j = 0; j < 10; j++) {\n\n                const index = i * 10 + j;\n                const tile = board.tiles[index];\n                if (tile >= 0) {\n                    const color = PIECES[tile].color;\n                    stroke(0);\n                    fill(color[0], color[1], color[2]);\n                    rect((-5 + j) * squareSize, (-30 + i) * squareSize, squareSize, squareSize);\n                }\n                \n            }\n        }\n\n    }\n\n    if (detail >= 4) {\n\n        const combos = getCombos(board.combo);\n        const count = combos.length;\n        if (count > 0) {\n            \n            noStroke();\n\n            textAlign(RIGHT, CENTER);\n            textStyle(NORMAL);\n            textSize(16);\n            let i = 0;\n            let sumLines = 0;\n            let juice = 0;\n            for (let combo of combos) {\n                sumLines += combo.lines.count;\n\n                if (sumLines <= 1) {\n                    fill(30, 50, 150);\n                } else if (sumLines <= 2) {\n                    fill(140, 60, 10);\n                } else if (sumLines <= 3) {\n                    fill(80, 30, 140);\n                } else if (sumLines <= 4) {\n                    fill(30, 150, 130);\n                } else if (sumLines <= 5) {\n                    fill(140, 130, 10)\n                } else if (sumLines <= 6) {\n                    fill(30, 140, 20);\n                } else if (sumLines <= 7) {\n                    fill(140, 30, 50);\n                } else {\n                    let r = random(0, 1) < 0.5;\n                    let g = random(0, 1) < 0.5;\n                    let b = random(0, 1) < 0.5 && (!r && !g);\n\n                    fill(r ? 250 : 50, g ? 250 : 50, b ? 250 : 50);\n                }\n\n                text(combo.name, -7 * squareSize, (-3.5 + i) * squareSize);\n                rect(-6.75 * squareSize, (-3.9 + i) * squareSize, 0.8 * squareSize, 0.8 * squareSize, 5);\n\n                let lines = parseInt(combo.original.substring(0, 1));\n                if (lines) {\n\n                    fill(250);\n                    if (lines >= 1) {\n                        rect(-6.65 * squareSize, (-3.8 + i) * squareSize, 0.25 * squareSize, 0.25 * squareSize, 2);\n                    }\n                    if (lines >= 2) {\n                        rect(-6.3 * squareSize, (-3.8 + i) * squareSize, 0.25 * squareSize, 0.25 * squareSize, 2);\n                    }\n                    if (lines >= 3) {\n                        rect(-6.65 * squareSize, (-3.45 + i) * squareSize, 0.25 * squareSize, 0.25 * squareSize, 2);\n                    }\n                    if (lines >= 4) {\n                        rect(-6.3 * squareSize, (-3.45 + i) * squareSize, 0.25 * squareSize, 0.25 * squareSize, 2);\n                    }\n\n                }\n                \n                i += 1;\n            }\n\n            textStyle(BOLD);\n            textSize(12 + 4 * count);\n            if (sumLines <= 1) {\n                fill(30, 50, 150);\n            } else if (sumLines <= 2) {\n                fill(140, 60, 10);\n            } else if (sumLines <= 3) {\n                fill(80, 30, 140);\n            } else if (sumLines <= 4) {\n                fill(30, 150, 130);\n            } else if (sumLines <= 5) {\n                fill(140, 130, 10)\n            } else if (sumLines <= 6) {\n                fill(30, 140, 20);\n            } else if (sumLines <= 7) {\n                fill(140, 30, 50);\n            } else {\n                let r = random(0, 1) < 0.5;\n                let g = random(0, 1) < 0.5;\n                let b = random(0, 1) < 0.5 && (!r && !g);\n\n                fill(r ? 250 : 50, g ? 250 : 50, b ? 250 : 50);\n            }\n            textAlign(RIGHT, BOTTOM);\n            text(`x${count}`, -6 * squareSize, -5 * squareSize);\n\n            textSize(16);\n            textAlign(RIGHT, TOP);\n            text(`${sumLines} ${sumLines === 1 ? 'line' : 'lines'}`, -6 * squareSize, -5 * squareSize);\n\n        }\n        textSize(16);\n        textStyle(BOLD);\n        textAlign(RIGHT, BOTTOM);\n        noStroke();\n        fill(0);\n        text(`${board.lines} line${board.lines === 1 ? '' : 's'}`, -6.5 * squareSize, 8 * squareSize);\n        text(`${board.juice} juice`, -6.5 * squareSize, 9 * squareSize);\n        text(`Level ${Math.floor(getJuiceLevel(board.juice))} (x${1 + Math.floor(getJuiceLevel(board.juice)) * 0.2})`, -6.5 * squareSize, 10 * squareSize);\n\n        textSize(300);\n        textStyle(BOLD);\n        textAlign(CENTER, CENTER);\n        noStroke();\n        fill(0, 100);\n        if (board.finishingMoves >= 0) {\n            text(board.finishingMoves, 0, 0);\n        }\n        \n    }\n\n}\n\nfunction getKeyName(k) {\n    if (k === 37) {\n        return 'left';\n    }\n    if (k === 39) {\n        return 'right';\n    }\n    if (k === 40) {\n        return 'down';\n    }\n    if (k === 38) {\n        return 'up';\n    }\n    if (k === ' '.charCodeAt(0)) {\n        return 'space';\n    }\n    return String.fromCharCode(k);\n}\n\nfunction drawState() {\n    if (state.creatingNewAccount) {\n        drawCreateAccount();\n        return;\n    }\n\n    if (!socket.registered) {\n        image(images.nathan, 0, 0, width, height);\n\n        textSize(64);\n        fill(255);\n        text('Something went wrong!', 100, 100);\n        \n        return;\n    }\n\n    if (!game.inGame) {\n        stroke(0);\n        \n        fill(100, 100, 250);\n        beginShape();\n        vertex(-100, 10);\n        vertex(420 + 3000 * game.mainMenuAnim, 10);\n        vertex(400 + 3000 * game.mainMenuAnim, 85);\n        vertex(-100, 85);\n        endShape();\n\n        fill(250, 100, 120);\n        beginShape();\n        vertex(-100, 10);\n        vertex(400 + 1000 * game.mainMenuAnim, 10);\n        vertex(380 + 1000 * game.mainMenuAnim, 85);\n        vertex(-100, 85);\n        endShape();\n\n        fill(250);\n        beginShape();\n        vertex(-100, 10);\n        vertex(380 + 500 * game.mainMenuAnim, 10);\n        vertex(360 + 500 * game.mainMenuAnim, 85);\n        vertex(-100, 85);\n        endShape();\n\n        fill(0);\n        noStroke();\n        textSize(64);\n        textStyle(BOLD);\n        textAlign(LEFT, TOP);\n        text(\"Chentris 2\", 20 - 400 * game.mainMenuAnim, 20);\n\n        push();\n\n        translate(0, -600 * game.mainMenuAnim);\n\n        fill(250);\n        stroke(0);\n\n        textSize(32);\n\n        beginShape();\n        vertex(width - 10, 15);\n        vertex(width - 50 - textWidth(game.playerData.username), 15);\n        vertex(width - 40 - textWidth(game.playerData.username), 70);\n        vertex(width - 10, 70);\n        endShape(CLOSE);\n\n        noStroke();\n        fill(0);\n\n        textAlign(RIGHT, TOP);\n        text(game.playerData.username, width - 20, 20);\n\n        textStyle(NORMAL);\n        textSize(16);\n        fill(200);\n        text(`(#${game.playerData._id.substring(32)})`, width - 20, 50);\n\n        stroke(0);\n        fill(250);\n        rect(width - 100, 80, 90, 95);\n        rect(width - 200, 80, 90, 95);\n\n        noStroke();\n        fill(0);\n        textStyle(BOLD);\n        textAlign(CENTER, TOP);\n\n        textSize(10);\n        text('Normal', width - 155, 88);\n        text('Competitive', width - 55, 88);\n        \n        textSize(16);\n        text(game.playerData.normalElo, width - 155, 100);\n        text(game.playerData.compElo, width - 55, 100);\n\n        const normalRank = getRank(game.playerData.normalElo);\n        const compRank = getRank(game.playerData.compElo);\n\n        image(normalRank.icon, width - 170, 120);\n        image(compRank.icon, width - 70, 120);\n\n        textSize(12);\n        textStyle(NORMAL);\n        text(normalRank.name, width - 154, 156);\n        text(compRank.name, width - 54, 156);\n\n        stroke(0);\n        fill(250);\n        rect(width - 200, 185, 190, 60);\n        rect(width - 200, 255, 190, 30);\n\n        fill(0);\n        noStroke();\n        textStyle(BOLD);\n        textAlign(LEFT, TOP);\n        textSize(16);\n        const level = floor(getLevel(game.playerData.xp)) ;\n        text(`Level ${level}`, width - 190, 190);\n        \n        const baseLevelXp = getXp(level);\n        const nextLevelXp = getXp(level + 1);\n        const deltaXp = nextLevelXp - baseLevelXp;\n        const progress = game.playerData.xp - baseLevelXp;\n\n        textSize(12);\n        textStyle(NORMAL);\n        text(`${progress.toLocaleString()} / ${deltaXp.toLocaleString()}`, width - 190, 205);\n\n        textAlign(LEFT, TOP);\n        text(baseLevelXp.toLocaleString(), width - 190, 230);\n\n        textAlign(RIGHT, TOP);\n        text(nextLevelXp.toLocaleString(), width - 20, 230);\n        \n        stroke(200);\n        fill(250);\n        rect(width - 190, 217, 170, 10);\n        stroke(0);\n        fill(50 + sqrt(progress / deltaXp) * 250, 50, 50 + sqrt(1 - progress / deltaXp) * 250);\n        rect(width - 190, 217, 170 * (progress / deltaXp), 10);\n\n        stroke(0);\n        fill(50 + random(0, 50), 100 + random(0, 50), 200 + random(0, 50));\n        rect(width - 30, 265, 10, 10);\n\n        textAlign(RIGHT, CENTER);\n        textSize(16);\n        noStroke();\n        fill(0);\n        text(game.playerData.juice.toLocaleString(), width - 35, 271);\n\n        pop();\n\n        push();\n\n        translate(300 * game.mainMenuAnim, 0);\n        textAlign(RIGHT, TOP);\n        textSize(16);\n        let prevElo = 0;\n        for (let i = 0; i < RANKS.length; i++) {\n            let rank = RANKS[i];\n            image(rank.icon, width - 40, height - 40 - 40 * i);\n            textStyle(BOLD);\n            text(rank.name, width - 45, height - 40 - 40 * i);\n            textStyle(NORMAL);\n            if (rank.elo < 1000000000) {\n                text(prevElo + ' - ' + (rank.elo - 1), width - 45, height - 20 - 40 * i);\n            } else {\n                text(prevElo + '+', width - 45, height - 20 - 40 * i);\n            }\n            prevElo = rank.elo;\n        }\n\n        pop();\n        textAlign(LEFT, CENTER);\n        textSize(24);\n        textStyle(BOLD);\n\n        for (let i = 0; i < game.menu.length; i++) {\n            const menu = game.menu[i];\n            const anim = (1000 * pow(2, i)) * game.menuAnim;\n            const backAnim = (2000 * pow(2, i)) * game.menuAnim;\n\n            stroke(0);\n            fill(230);\n\n            beginShape();\n            vertex(-100, 100 + i * 50);\n            vertex(310 - backAnim - i * 10 + game.menuButtonAnims[i] * 20, 100 + i * 50);\n            vertex(300 - backAnim - i * 10 + game.menuButtonAnims[i] * 20, 140 + i * 50);\n            vertex(-100, 140 + i * 50);\n            endShape();\n\n            fill(255);\n\n            beginShape();\n            vertex(-100, 100 + i * 50);\n            vertex(300 - anim - i * 10 + game.menuButtonAnims[i] * 10, 100 + i * 50);\n            vertex(290 - anim - i * 10 + game.menuButtonAnims[i] * 10, 140 + i * 50);\n            vertex(-100, 140 + i * 50);\n            endShape();\n\n            noStroke();\n            fill(0);\n\n            text(menu.name, 20 - anim, 122 + i * 50);\n        }\n\n        if (state.joiningMatch) {\n            stroke(0);\n            fill(250);\n            rect(width / 2 - 200, height / 2 - 50, 400, 100);\n            fill(0);\n            noStroke();\n            textSize(16);\n            textStyle(BOLD);\n            textAlign(CENTER, TOP);\n            text('Enter Join Code', width / 2, height / 2 - 40);\n\n            textSize(32);\n            for (let i = 0; i < 9; i++) {\n                const x = (i - 4) * (380 / 9);\n                rect(width / 2 - x - 10, height / 2 + 40, 20, 2);\n\n                const char = game.typedString.charAt(i);\n                \n                if (char) {\n                    text(char, width / 2 + x, height / 2);\n                }\n            }\n\n            fill(250, 120, 100);\n            drawButton(width / 2 + 160, height / 2 - 50, 40, 20, 'x', () => fill(230, 100, 80), () => fill(220, 90, 70));\n        }\n\n        if (state.inSettings) {\n            stroke(0);\n            fill(250);\n            rect(width / 2 - 500, height / 2 - 300, 1000, 600);\n\n            line(width / 2, height / 2 - 300, width / 2, height / 2 + 300);\n\n            fill(250, 120, 100);\n            drawButton(width / 2 + 460, height / 2 - 300, 40, 20, 'x', () => fill(230, 100, 80), () => fill(220, 90, 70));\n\n            textSize(24);\n            textStyle(BOLD);\n            textAlign(LEFT, TOP);\n            text('Settings', width / 2 - 490, height / 2 - 290);\n            text('Controls', width / 2 + 10, height / 2 - 290);\n\n            textStyle(NORMAL);\n            textAlign(LEFT, TOP);\n            textSize(16);\n            text('Move Left', width / 2 + 10, height / 2 - 250);\n            text('Move Right', width / 2 + 10, height / 2 - 220);\n            text('Soft Drop', width / 2 + 10, height / 2 - 190);\n            text('Hard Drop', width / 2 + 10, height / 2 - 160);\n            text('Rotate Left', width / 2 + 10, height / 2 - 130);\n            text('Rotate Right', width / 2 + 10, height / 2 - 100);\n            text('Rotate 180', width / 2 + 10, height / 2 - 70);\n            text('Hold', width / 2 + 10, height / 2 - 40);\n\n            fill(250);\n            drawButton(width / 2 + 140, height / 2 - 250, 100, 20, getKeyName(settings['controls.left']), () => fill(230), () => fill(210));\n            fill(250);\n            drawButton(width / 2 + 140, height / 2 - 220, 100, 20, getKeyName(settings['controls.right']), () => fill(230), () => fill(210));\n            fill(250);\n            drawButton(width / 2 + 140, height / 2 - 190, 100, 20, getKeyName(settings['controls.down']), () => fill(230), () => fill(210));\n            fill(250);\n            drawButton(width / 2 + 140, height / 2 - 160, 100, 20, getKeyName(settings['controls.drop']), () => fill(230), () => fill(210));\n            fill(250);\n            drawButton(width / 2 + 140, height / 2 - 130, 100, 20, getKeyName(settings['controls.rotateLeft']), () => fill(230), () => fill(210));\n            fill(250);\n            drawButton(width / 2 + 140, height / 2 - 100, 100, 20, getKeyName(settings['controls.rotateRight']), () => fill(230), () => fill(210));\n            fill(250);\n            drawButton(width / 2 + 140, height / 2 - 70, 100, 20, getKeyName(settings['controls.rotate180']), () => fill(230), () => fill(210));\n            fill(250);\n            drawButton(width / 2 + 140, height / 2 - 40, 100, 20, getKeyName(settings['controls.hold']), () => fill(230), () => fill(210));\n\n            fill(250);\n            drawButton(width / 2 + 340, height / 2 + 260, 150, 30, 'Reset Settings', () => fill(230), () => fill(210));\n\n            if (game.awaitingKeypress) {\n                fill(0);\n                textSize(16);\n                noStroke();\n                textAlign(LEFT, TOP);\n                textStyle(BOLD);\n                text('Press any key to set keybind. Press ESC to cancel.', width / 2 + 10, height / 2); // text for when you are setting a control\n            }\n        }\n\n        return;\n    }\n    \n    // In game\n    if (game.gameData.match.over && game.gameData.match.matchOverDelay >= 20) {\n        fill(0);\n        noStroke();\n        textStyle(BOLD);\n        textAlign(LEFT, TOP);\n        textSize(32);\n        text('Match Results', 20, 20);\n        textSize(24);\n        const winner = game.gameData.match.data[game.gameData.match.results.winner];\n        text('Winner: ' + (winner ? winner.username : 'Nobody'), 20, 60);\n        text(`Returning to lobby in ${floor((400 - game.gameData.match.matchOverDelay) / 20)}...`, 20, height - 50);\n\n        const rewards = game.gameData.match.results.rewards[game.playerData._id];\n        const anim = clamp(game.gameData.match.matchOverDelay - 20, 0, 80) / 80;\n\n        const animXp = floor(game.playerData.xp + anim * rewards.xp);\n        const animElo = floor((game.gameData.match.rules.competitive ? game.playerData.compElo : game.playerData.normalElo) + anim * rewards.elo);\n        const animJuice = floor(game.playerData.juice + anim * rewards.juice);\n\n        text(`XP: +${floor(anim * rewards.xp)}`, 20, height - 200);\n        text(`JUICE: +${floor(anim * rewards.juice)}`, 20, height - 170);\n        text(`ELO: ${rewards.elo > 0 ? '+' : ''}${round(anim * rewards.elo)}`, 20, height - 140);\n\n        fill(0);\n        textAlign(LEFT, BOTTOM);\n        textSize(24);\n        const level = floor(getLevel(animXp)) ;\n        text(`Level ${level}`, 40, 200);\n        \n        const baseLevelXp = getXp(level);\n        const nextLevelXp = getXp(level + 1);\n        const deltaXp = nextLevelXp - baseLevelXp;\n        const progress = animXp - baseLevelXp;\n\n        fill(0);\n        textSize(20);\n        textStyle(NORMAL);\n        text(`${progress.toLocaleString()} / ${deltaXp.toLocaleString()}`, 40, 220);\n\n        textAlign(LEFT, TOP);\n        text(baseLevelXp.toLocaleString(), 40, 245);\n\n        textAlign(RIGHT, TOP);\n        text(nextLevelXp.toLocaleString(), width - 40, 245);\n        \n        stroke(200);\n        fill(250);\n        rect(40, 220, width - 80, 20);\n        stroke(0);\n        fill(50 + sqrt(progress / deltaXp) * 250, 50, 50 + sqrt(1 - progress / deltaXp) * 250);\n        rect(40, 220, (width - 80) * (progress / deltaXp), 20);\n\n        fill(50 + random(0, 50), 100 + random(0, 50), 200 + random(0, 50));\n        rect(300, 310, 20, 20);\n\n        noStroke();\n\n        fill(0);\n        textAlign(RIGHT, CENTER);\n        textSize(24);\n        text(animJuice.toLocaleString(), 290, 320);\n\n        const rank = getRank(animElo);\n        text(animElo, 590, 320);\n\n        image(rank.icon, 600, 300, 40, 40);\n        textSize(16);\n        text(rank.name, 590, 340);\n\n        return;\n    }\n    \n    push();\n\n    let deadAnimX = 0;\n    let deadAnimY = 0;\n\n    if (game.localData.board.lost) {\n\n        const anim = game.localData.deadAnim * 50;\n        deadAnimY = (anim ** 2) - 20 * anim;\n        deadAnimX = - ( anim * log(anim + 1) );\n    }\n    \n\n    translate(game.boardOrigin[0] + deadAnimX, game.boardOrigin[1] + deadAnimY);\n    rotate(game.boardRotation + deadAnimX * 0.002);\n    scale(game.boardScale);\n    translate(game.boardTranslation[0], game.boardTranslation[1]);\n    \n    drawBoard(game.localData.board, game.localData.state, game.localData.timers, SQUARE_SIZE, 4);\n\n    \n    if (!game.gameData.match.playing) {\n        textStyle(BOLD);\n        textSize(32);\n        textAlign(CENTER, CENTER);\n        fill(0, 100);\n        noStroke();\n        text('Practice', 0, 0);\n\n    } else {\n        textSize(20);\n        textAlign(CENTER, TOP);\n        textStyle(BOLD);\n        fill(0);\n        noStroke();\n        text(`${game.gameData.match.kills[game.playerData._id]} KO${game.gameData.match.kills[game.playerData._id] === 1 ? '' : 's'}`, 0, 11 * SQUARE_SIZE);\n    }\n\n    \n\n    pop();\n\n    textStyle(BOLD);\n    textAlign(CENTER, CENTER);\n    noStroke();\n\n    for (let notif of game.boardNotifications) {\n        textSize(16 + sqrt(notif.time) * 100);\n        fill(0, 300 * (1 - notif.time));\n        text(notif.text, game.boardOrigin[0], game.boardOrigin[1]);\n    }\n\n    if (!game.gameData.match.playing) {\n        push();\n\n        translate(-game.matchAnim * 400, 0);\n\n        fill(250);\n        stroke(0);\n        rect(10, 30, 200, 250);\n        rect(10, 310, 200, 200);\n\n        fill(0);\n        noStroke();\n        textSize(16);\n        \n        textStyle(BOLD);\n\n        textAlign(CENTER, BOTTOM);\n        text('Match', 110, 25);\n        text('Rules', 110, 304);\n\n        textAlign(LEFT, TOP);\n        text('Code', 20, 40);\n\n        textSize(32);\n        for (let i = 0; i < 9; i++) {\n            text(game.gameData.match.joinCode[i], 20 + i * 20, 60);\n        }\n\n        stroke(0);\n        fill(120, 100, 250);\n        drawButton(20, 95, 180, 30, 'Copy Link', () => fill(100, 80, 230), () => {}, !game.gameData.match.options.allowJoining);\n\n        fill(250, 120, 100);\n        drawButton(20, 130, 180, 30, 'Leave Match', () => fill(230, 100, 80), () => {});\n\n        textAlign(LEFT, TOP);\n        fill(0);\n        text('Allow joining', 20, 200);\n        text('Public', 20, 225);\n        text('Ranked', 20, 250);\n\n        function getOption(name) {\n            return game.gameData.match.options[name];\n        }\n\n        function getRule(name) {\n            return game.gameData.match.rules[name];\n        }\n\n        drawSelect(150, 200, 50, 20, ON_OR_OFF, () => getOption('allowJoining'), false);\n        drawSelect(150, 225, 50, 20, ON_OR_OFF, () => getOption('public'), false);\n        drawSelect(150, 250, 50, 20, ON_OR_OFF, () => getOption('ranked'), false);\n\n        textAlign(LEFT, TOP);\n        text('Competitive', 20, 325);\n        text('Initial Speed', 20, 350);\n        text('Resend Garbage', 20, 375);\n        text('Forgiving Combos', 20, 400);\n        text('Garbage Turns', 20, 425);\n        text('Garbage Defense', 20, 450);\n\n        drawSelect(150, 325, 50, 20, ON_OR_OFF, () => getRule('competitive'), false);\n        drawSelect(150, 350, 50, 20, [{ key: 'slow', value: 80 }, { key: 'medium', value: 160 }, { key: 'fast', value: 320 }, { key: 'very fast', value: 640 }], () => getRule('initialSpeed'), getRule('competitive'));\n        drawSelect(150, 375, 50, 20, ON_OR_OFF, () => getRule('resendGarbage'), getRule('competitive'));\n        drawSelect(150, 400, 50, 20, ON_OR_OFF, () => getRule('forgivingCombos'), getRule('competitive'));\n        drawSelect(150, 425, 50, 20, [{ key: 'one', value: 1 }, { key: 'two', value: 2 }, { key: 'three', value: 3 }], () => getRule('garbageTurns'), getRule('competitive'));\n        drawSelect(150, 450, 50, 20, ON_OR_OFF, () => getRule('garbageDefense'), getRule('competitive'));\n\n        pop();\n\n        for (let i = 0; i < game.gameData.match.players.length; i++) {\n            const id = game.gameData.match.players[i];\n            const userData = game.gameData.match.data[id];\n\n            if (!userData) {\n                continue;\n            }\n\n            const y = i * 45;\n            \n            fill(250);\n            stroke(0);\n            rect(width - 210, 10 + y, 200, 40);\n            rect(width - 45, 15 + y, 30, 30);\n\n            fill(0);\n            noStroke();\n            textAlign(RIGHT, TOP);\n            textStyle(BOLD);\n            textSize(16);\n            text(userData.username, width - 50, 15 + y);\n            \n            const elo = game.gameData.match.rules.competitive ? userData.compElo : userData.normalElo;\n            const rank = getRank(elo);\n\n            textStyle(NORMAL);\n            text(elo, width - 70, 33 + y);\n\n            textStyle(BOLD);\n            textSize(12);\n            textAlign(CENTER, CENTER);\n            text(getLevel(userData.xp), width - 30, 30 + y);\n\n            image(rank.icon, width - 65, 32 + y, 14, 14);\n        \n            stroke(0);\n            noFill();\n            rect(width - 65, 32 + y, 14, 14);\n\n            if (userData._id === game.playerData._id) {\n                fill(250);\n                triangle(width - 250, 20 + y, width - 250, 40 + y, width - 230, 30 + y);\n            } \n\n            if (userData._id === game.gameData.match.leader) {\n                fill(220, 160, 100);\n\n                beginShape();\n                vertex(width - 200, 20 + y);\n                vertex(width - 195, 30 + y);\n                vertex(width - 190, 20 + y);\n                vertex(width - 185, 30 + y);\n                vertex(width - 180, 20 + y);\n                vertex(width - 180, 40 + y);\n                vertex(width - 200, 40 + y);\n                endShape(CLOSE);\n            }\n            \n            \n            if (game.gameData.match.ready[id]) {\n                fill(100, 250, 120);\n            } else {\n                fill(250, 120, 100);\n            }\n            \n            rect(width - 220, 10 + y, 10, 40);\n        }\n\n        \n        if (game.localData.ready) {\n            fill(100, 250, 120);\n        } else {\n            fill(250, 120, 100);\n        }\n\n        textSize(12);\n        textAlign(RIGHT, CENTER);\n        textStyle(BOLD);\n        noStroke();\n        text(`You are ${game.localData.ready ? 'READY' : 'NOT READY'}.`, width - 220, height / 2);\n\n    } else {\n\n        fill(0);\n        textAlign(LEFT, TOP);\n        textSize(16);\n        textStyle(BOLD);\n        \n        const count = game.gameData.match.players.length;\n        const players = game.gameData.match.players.filter(id => id !== game.playerData._id);\n        const alivePlayers = game.gameData.match.players.filter(id => !game.gameData.match.boards[id].lost);\n        \n        for (let id of players) {\n            const pos = game.localData.boardAnims[id];\n\n            if (pos[2] > 5) {\n                continue;\n            }\n\n            push();\n            translate(pos[0], pos[1]);\n            rotate(- ( pos[2] * 50 * log(pos[2] * 50 + 1) ) * 0.002);\n            \n            drawBoard(game.gameData.match.boards[id], game.gameData.match.states[id].state || defaultSubmoveState(), \n                game.gameData.match.states[id].timers || { fall: 0, dropping: false, shortDrop: 0, longDrop: 0}, \n            game.localData.boardSizes[id], count >= 25 ? 0 : ( count >= 17 ? 1 : ( count >= 10 ? 2 : ( count >= 5 ? 3 : (count <= 2 ? 4 : 3)))));\n\n            noStroke();\n            fill(0);\n            textSize(16);\n            textAlign(CENTER, BOTTOM);\n            textStyle(BOLD);\n            text(`${game.gameData.match.data[id].username} (${game.gameData.match.kills[id]} KO${game.gameData.match.kills[id] === 1 ? '' : 's'})`, 0, -11 * game.localData.boardSizes[id]);\n\n            pop();\n        }\n        \n        if (alivePlayers.length > 2) {\n            for (let i = 0; i < 5; i += 1) {\n                stroke(0);\n                fill(game.localData.attackOption === i ? 0 : 250);\n                rect(width / 2 - 250 + i * 100, height - 35, 95, 20);\n                rect(width / 2 - 250 + i * 100, height - 40, 30, 30);\n\n                noStroke();\n                fill(game.localData.attackOption === i ? 250 : 0);\n                textAlign(CENTER, CENTER);\n                textStyle(BOLD);\n                text(i + 1, width / 2 - 235 + i * 100, height - 25);\n\n                textStyle(NORMAL);\n                textAlign(LEFT, CENTER);\n                if (i === 0) {\n                    text('random', width / 2 - 216 + i * 100, height - 24);\n                } else if (i === 1) {\n                    text('kills', width / 2 - 216 + i * 100, height - 24);\n                } else if (i === 2) {\n                    text('revenge', width / 2 - 216 + i * 100, height - 24);\n                } else if (i === 3) {\n                    text('winners', width / 2 - 216 + i * 100, height - 24);\n                } else if (i === 4) {\n                    text('losers', width / 2 - 216 + i * 100, height - 24);\n                }\n                \n            }\n        }\n\n        if (game.localData.board.lost) {\n            textSize(32);\n            textStyle(BOLD);\n            textAlign(CENTER, CENTER);\n            fill(0);\n            noStroke();\n            if (game.gameData.match.results.winner === game.playerData._id) {\n                text('You win!', game.boardOrigin[0], game.boardOrigin[1]);\n            } else {\n                text('You are eliminated!', game.boardOrigin[0], game.boardOrigin[1]);\n            }\n        }\n\n    }\n\n}\n\nfunction draw() {\n    update();\n    updateInput();\n    if (game.loading) {\n        drawLoading();\n        drawError();\n        return;\n    }\n    background(250);\n    drawState();\n    drawError();\n}"],"names":["socket","io","connected","registered","input","keys","mouse","game","loading","loadMessage","isTyping","typedString","typeLengthLimit","error","errorAnim","inGame","gameData","localData","playerData","mainMenuAnim","menu","menus","main","menuButtonAnims","menuAnim","matchAnim","boardOrigin","boardTranslation","boardRotation","boardScale","boardNotifications","awaitingKeypress","keypressToChange","state","creatingNewAccount","loadingData","joiningMatch","inSettings","images","nathan","small","SQUARE_SIZE","controls","left","right","down","drop","charCodeAt","rotateRight","rotateLeft","rotate180","hold","settings","defaultSettings","moveSpeed","ON_OR_OFF","key","value","resetState","val","width","height","preload","loadImage","setup","createCanvas","windowResized","loadRankIcons","reset","connect","background","loadSettings","resetSettings","localStorage","removeItem","getSetting","key1","saveSettings","setSetting","getItem","JSON","parse","setItem","stringify","getId","setId","id","loadData","emit","path","query","forceNew","on","data","user","switchMenu","window","location","hash","length","joinMatch","substring","type","setTimeout","message","board","deepCopyBoard","match","boards","_id","moves","defaultSubmoveState","stateAcc","speed","timers","fall","dropping","shortDrop","longDrop","deadAnim","boardAnims","boardSizes","ready","attackOption","move","moveNumber","filter","num","makeMove","Math","seedrandom","rules","newNotification","push","text","notification","time","code","resizeCanvas","windowWidth","windowHeight","keyTyped","keyPressed","keyCode","ESCAPE","BACKSPACE","keyReleased","mousePressed","mouseButton","mouseReleased","updateInput","button","clamp","a","mi","ma","min","max","update","deltaTime","frameRate","username","trim","lerp","replace","stopJoiningMatch","buttonState","leaveOptions","awaitKeypress","name","i","mouseOver","mouseX","mouseY","LEFT","onClick","playing","navigator","clipboard","writeText","joinCode","options","allowJoining","changeOption","newValue","newOptions","changeRule","newRules","selectState","v","public","ranked","comp","competitive","initialSpeed","resendGarbage","forgivingCombos","garbageTurns","garbageDefense","notif","origin","x","y","players","lost","canHold","fallPerMinute","makeSubmove","first","lastMoveSuccessful","i1","toString","pieceY","submoves","Date","now","clears","squareClears","i2","count","size","ceil","sqrt","spectating","idealPos","getIdealPos","isSpectator","anim","deadAnimY","deadAnimX","log","w","h","onHover","disabled","drawButton","tx","fill","stroke","rect","textSize","textAlign","CENTER","textStyle","NORMAL","noStroke","getValue","setValue","nextValue","mod","findIndex","option","drawSelect","find","drawError","drawLoading","strokeWeight","tint","translate","rotate","millis","image","noFill","pop","drawCreateAccount","BOLD","textWrap","CHAR","drawPiece","rot","piece","trans","strokeless","layout","getRotatedPiece","color","PIECES","j","index","wi","hi","minSqrt","floor","drawBoard","squareSize","detail","line","sum","garbageQueue","garbage","amount","turns","sin","currentLevel","getJuiceLevel","juice","nextLevel","progress","map","getLevelJuice","random","i3","i4","bag","TOP","pieceX","pieceRotation","dropSubmove","i5","tile","tiles","combos","getCombos","combo","RIGHT","i6","sumLines","lines","r","g","b","parseInt","original","r1","g1","b1","BOTTOM","finishingMoves","getKeyName","k","String","fromCharCode","drawState","beginShape","vertex","endShape","textWidth","CLOSE","normalElo","compElo","normalRank","getRank","compRank","icon","level","getLevel","xp","baseLevelXp","getXp","nextLevelXp","deltaXp","toLocaleString","prevElo","RANKS","rank","elo","pow","backAnim","char","charAt","over","matchOverDelay","winner","results","rewards","anim1","animXp","animElo","animJuice","round","level1","baseLevelXp1","nextLevelXp1","deltaXp1","progress1","rank1","anim2","scale","kills","alivePlayers","id1","pos","states","getOption","getRule","userData","rank2","triangle","leader","draw"],"version":3,"file":"index.4958a78b.js.map"}