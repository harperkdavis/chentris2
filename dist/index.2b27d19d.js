const PIECES=[{layout:[[0,0,0,0],[1,1,1,1],[0,0,0,0],[0,0,0,0]],color:[130,250,230]},{layout:[[1,0,0],[1,1,1],[0,0,0]],color:[130,150,250]},{layout:[[0,0,1],[1,1,1],[0,0,0]],color:[240,160,110]},{layout:[[1,1],[1,1]],color:[240,230,110]},{layout:[[0,1,0],[1,1,1],[0,0,0]],color:[180,130,240]},{layout:[[1,1,0],[0,1,1],[0,0,0]],color:[240,130,150]},{layout:[[0,1,1],[1,1,0],[0,0,0]],color:[130,240,120]},{layout:[[1]],color:[200,200,200]}],COMBOS={"00":{name:"none",lines:{type:"add",count:0},juice:{type:"add",count:0}},"1l":{name:"single",lines:{type:"add",count:1},juice:{type:"add",count:100}},"2l":{name:"double",lines:{type:"add",count:2},juice:{type:"add",count:400}},"3l":{name:"triple",lines:{type:"add",count:3},juice:{type:"add",count:900}},"4l":{name:"chentris",lines:{type:"add",count:4},juice:{type:"add",count:1600}},"1t":{name:"t-spin single",lines:{type:"add",count:2},juice:{type:"add",count:400}},"2t":{name:"t-spin double",lines:{type:"add",count:4},juice:{type:"add",count:1e3}},"3t":{name:"t-spin triple",lines:{type:"add",count:6},juice:{type:"add",count:3200}},fc:{name:"full clear",lines:{type:"add",count:4},juice:{type:"multiply",count:2}},"1l1l":{name:"snake eyes",lines:{type:"add",count:1},juice:{type:"add",count:200}},"1l2l":{name:"the old one two",lines:{type:"add",count:2},juice:{type:"add",count:500}},"1l3l":{name:"the old one three",lines:{type:"add",count:3},juice:{type:"add",count:1e3}},"1l4l":{name:"big five",lines:{type:"add",count:4},juice:{type:"add",count:1800}},"1l1t":{name:"snake spins",lines:{type:"add",count:2},juice:{type:"add",count:500}},"1l2t":{name:"the old one two spin",lines:{type:"add",count:4},juice:{type:"add",count:1100}},"1l3t":{name:"the old one three spin",lines:{type:"add",count:6},juice:{type:"add",count:3400}},"1lfc":{name:"one line full clear",lines:{type:"add",count:4},juice:{type:"multiply",count:2}},"2l1l":{name:"stepdown",lines:{type:"add",count:1},juice:{type:"add",count:300}},"2l2l":{name:"halftris",lines:{type:"add",count:2},juice:{type:"add",count:600}},"2l3l":{name:"up a notch",lines:{type:"add",count:3},juice:{type:"add",count:1100}},"2l4l":{name:"big six",lines:{type:"add",count:4},juice:{type:"add",count:2e3}},"2l1t":{name:"spindown",lines:{type:"add",count:2},juice:{type:"add",count:600}},"2l2t":{name:"spindle",lines:{type:"add",count:4},juice:{type:"add",count:1200}},"2l3t":{name:"up a spin",lines:{type:"add",count:6},juice:{type:"add",count:3600}},"2lfc":{name:"double trouble",lines:{type:"add",count:5},juice:{type:"multiply",count:2}},"3l1l":{name:"downtris",lines:{type:"add",count:1},juice:{type:"add",count:500}},"3l2l":{name:"leapdown",lines:{type:"add",count:2},juice:{type:"add",count:800}},"3l3l":{name:"trippy",lines:{type:"add",count:3},juice:{type:"add",count:1300}},"3l4l":{name:"lucky guy",lines:{type:"add",count:5},juice:{type:"add",count:2400}},"3l1t":{name:"spinleap",lines:{type:"add",count:2},juice:{type:"add",count:800}},"3l2t":{name:"trippy spin",lines:{type:"add",count:4},juice:{type:"add",count:1400}},"3l3t":{name:"linespin equality",lines:{type:"add",count:7},juice:{type:"add",count:4e3}},"3lfc":{name:"trippy clear",lines:{type:"add",count:6},juice:{type:"multiply",count:2}},"4l1l":{name:"small five",lines:{type:"add",count:1},juice:{type:"add",count:900}},"4l2l":{name:"small six",lines:{type:"add",count:2},juice:{type:"add",count:1200}},"4l3l":{name:"guy lucky",lines:{type:"add",count:4},juice:{type:"add",count:1700}},"4l4l":{name:"b2b",lines:{type:"add",count:6},juice:{type:"add",count:3200}},"4l1t":{name:"chenspin",lines:{type:"add",count:3},juice:{type:"add",count:1200}},"4l2t":{name:"halfdown",lines:{type:"add",count:5},juice:{type:"add",count:1800}},"4l3t":{name:"spinlucky",lines:{type:"add",count:8},juice:{type:"add",count:4800}},"4lfc":{name:"perfect clear",lines:{type:"add",count:8},juice:{type:"multiply",count:2}},"1t1l":{name:"singulari-t",lines:{type:"add",count:1},juice:{type:"add",count:300}},"1t2l":{name:"reverse spindle",lines:{type:"add",count:2},juice:{type:"add",count:600}},"1t3l":{name:"trip from t",lines:{type:"add",count:3},juice:{type:"add",count:1100}},"1t4l":{name:"post-t chentris",lines:{type:"add",count:5},juice:{type:"add",count:2e3}},"1t1t":{name:"double it",lines:{type:"add",count:3},juice:{type:"add",count:600}},"1t2t":{name:"red-t blue-t",lines:{type:"add",count:5},juice:{type:"add",count:1200}},"1t3t":{name:"chen-t",lines:{type:"add",count:7},juice:{type:"add",count:3600}},"1tfc":{name:"t-clear",lines:{type:"add",count:6},juice:{type:"multiply",count:2}},"2t1l":{name:"keep it on the t-l",lines:{type:"add",count:1},juice:{type:"add",count:500}},"2t2l":{name:"2 spin 2 line",lines:{type:"add",count:2},juice:{type:"add",count:800}},"2t3l":{name:"spinny trip",lines:{type:"add",count:3},juice:{type:"add",count:1300}},"2t4l":{name:"2 spin 4 me",lines:{type:"add",count:5},juice:{type:"add",count:2400}},"2t1t":{name:"stepdown-t",lines:{type:"add",count:3},juice:{type:"add",count:800}},"2t2t":{name:"adds to 40",lines:{type:"add",count:5},juice:{type:"add",count:1400}},"2t3t":{name:"nathan special",lines:{type:"add",count:7},juice:{type:"add",count:4e3}},"2tfc":{name:"double t-clear",lines:{type:"add",count:6},juice:{type:"multiply",count:2}},"3t1l":{name:"leapspin",lines:{type:"add",count:1},juice:{type:"add",count:300}},"3t2l":{name:"stepspin",lines:{type:"add",count:2},juice:{type:"add",count:600}},"3t3l":{name:"trippy spinline",lines:{type:"add",count:3},juice:{type:"add",count:1100}},"3t4l":{name:"luckyspin",lines:{type:"add",count:6},juice:{type:"add",count:2e3}},"3t1t":{name:"t-chen",lines:{type:"add",count:4},juice:{type:"add",count:600}},"3t2t":{name:"reverse nathan special",lines:{type:"add",count:6},juice:{type:"add",count:1200}},"3t3t":{name:"trip trip goose",lines:{type:"add",count:8},juice:{type:"add",count:3600}},"3tfc":{name:"nasty triple t-clear",lines:{type:"add",count:8},juice:{type:"multiply",count:2}},"1l1l1l":{name:"three eyed snake",lines:{type:"add",count:1},juice:{type:"add",count:500}},"1l1l2l":{name:"fibonacci-3",lines:{type:"add",count:2},juice:{type:"add",count:800}},"1l1l3l":{name:"1 + 1 = 3",lines:{type:"add",count:3},juice:{type:"add",count:1300}},"1l1l4l":{name:"eeh ?!",lines:{type:"add",count:5},juice:{type:"add",count:2400}},"1l1l1l1l":{name:"still single?",lines:{type:"add",count:2},juice:{type:"add",count:900}},"1l1l1l1l1l":{name:"leave the house",lines:{type:"add",count:3},juice:{type:"add",count:1700}},"1l1l2l3l":{name:"fibonacci-4",lines:{type:"add",count:5},juice:{type:"add",count:2500}},"1l2l1l":{name:"up then down",lines:{type:"add",count:1},juice:{type:"add",count:500}},"1l2l2l":{name:"bad at counting",lines:{type:"add",count:2},juice:{type:"add",count:800}},"1l2l3l":{name:"counting up",lines:{type:"add",count:3},juice:{type:"add",count:1300}},"1l2l4l":{name:"powers of two",lines:{type:"add",count:5},juice:{type:"add",count:2400}},"1l2l3l4l":{name:"counting higher",lines:{type:"add",count:6},juice:{type:"add",count:3200}},"1l3l1l":{name:"small spark",lines:{type:"add",count:1},juice:{type:"add",count:500}},"1l3l2l":{name:"really bad at counting",lines:{type:"add",count:2},juice:{type:"add",count:800}},"1l3l3l":{name:"two triple post single",lines:{type:"add",count:3},juice:{type:"add",count:1300}},"1l3l4l":{name:"building chentris",lines:{type:"add",count:5},juice:{type:"add",count:2400}},"1l4l1l":{name:"big spark",lines:{type:"add",count:1},juice:{type:"add",count:900}},"1l4l2l":{name:"single meaning",lines:{type:"add",count:2},juice:{type:"add",count:1200}},"1l4l3l":{name:"composite",lines:{type:"add",count:4},juice:{type:"add",count:1700}},"1l4l4l":{name:"single into b2b",lines:{type:"add",count:6},juice:{type:"add",count:3200}}},T_CHECK=[[1,0,1],[0,0,0],[1,0,1]],WALL_KICK={0:{3:[[0,0],[1,0],[1,1],[0,-2],[1,-2]],1:[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],2:[[0,0],[1,0],[2,0],[1,1],[2,1],[-1,0],[-2,0],[-1,1],[-2,1],[0,-1],[3,0],[-3,0]]},1:{0:[[0,0],[1,0],[1,-1],[0,2],[1,2]],2:[[0,0],[1,0],[1,-1],[0,2],[1,2]],3:[[0,0],[0,1],[0,2],[-1,1],[-1,2],[0,-1],[0,-2],[-1,-1],[-1,-2],[1,0],[0,3],[0,-3]]},2:{1:[[0,0],[-1,0],[-1,1],[0,-2],[-1,-2]],3:[[0,0],[1,0],[1,1],[0,-2],[1,-2]],0:[[0,0],[-1,0],[-2,0],[-1,-1],[-2,-1],[1,0],[2,0],[1,-1],[2,-1],[0,1],[-3,0],[3,0]]},3:{2:[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],0:[[0,0],[-1,0],[-1,-1],[0,2],[-1,2]],1:[[0,0],[0,1],[0,2],[1,1],[1,2],[0,-1],[0,-2],[1,-1],[1,-2],[-1,0],[0,3],[0,-3]]}},WALL_KICK_I={0:{3:[[0,0],[2,0],[-1,0],[-1,2],[2,-1]],1:[[0,0],[-2,0],[1,0],[1,2],[-2,-1]],2:[[0,0],[-1,0],[-2,0],[1,0],[2,0],[0,1]]},1:{0:[[0,0],[2,0],[-1,0],[2,1],[-1,-2]],2:[[0,0],[-1,0],[2,0],[-1,2],[2,-1]],3:[[0,0],[0,1],[0,2],[0,-1],[0,-2],[-1,0]]},2:{1:[[0,0],[-2,0],[1,0],[-2,1],[1,-1]],3:[[0,0],[2,0],[-1,0],[2,1],[-1,-1]],0:[[0,0],[1,0],[2,0],[-1,0],[-2,0],[0,-1]]},3:{2:[[0,0],[1,0],[-2,0],[1,2],[-2,-1]],0:[[0,0],[-2,0],[1,0],[-2,1],[1,-2]],1:[[0,0],[0,1],[0,2],[0,-1],[0,-2],[1,0]]}};let Piece,MoveType,Direction;!function(e){e[e.Empty=-1]="Empty",e[e.I=0]="I",e[e.J=1]="J",e[e.L=2]="L",e[e.O=3]="O",e[e.T=4]="T",e[e.Z=5]="Z",e[e.S=6]="S",e[e.Garbage=7]="Garbage"}(Piece||(Piece={})),function(e){e.Move="move",e.Hold="hold",e.AddGarbage="addGarbage"}(MoveType||(MoveType={})),function(e){e.Left="left",e.Right="right",e.Down="down",e.Drop="drop",e.RotateRight="rotateRight",e.RotateLeft="rotateLeft",e.Rotate180="rotate180"}(Direction||(Direction={}));const COMPETITIVE_DEFAULTS={competitive:!0,initialSpeed:80,resendGarbage:!0,forgivingCombos:!1,garbageTurns:1,garbageDefense:!1},NORMAL_DEFAULTS={competitive:!1,initialSpeed:80,resendGarbage:!0,forgivingCombos:!0,garbageTurns:2,garbageDefense:!0};function createNewBag(e,t,n){let i=[Piece.I,Piece.J,Piece.L,Piece.O,Piece.T,Piece.Z,Piece.S];const o=[],c=n(`${e}-bag-${t}`);for(let e=0;e<7;e++){const e=Math.floor(c()*i.length);o.push(i[e]),i.splice(e,1)}return o}function createNewBoard(e,t,n,i){const o=`${e}-${t}-${n}`;return{srng:o,tiles:new Array(400).fill(Piece.Empty),bag:createNewBag(o,0,i),hold:Piece.Empty,canHold:!0,lost:!1,bagPool:0,garbagePool:0,move:0,combo:"",lastDamager:e,garbageQueue:[],clears:0,juice:0,lines:0,finishingMoves:-1}}function deepCopyBoard(e){return{srng:e.srng,tiles:[...e.tiles],bag:[...e.bag],hold:e.hold,canHold:e.canHold,lost:e.lost,bagPool:e.bagPool,garbagePool:e.garbagePool,move:e.move,combo:e.combo,lastDamager:e.lastDamager,garbageQueue:[...e.garbageQueue],clears:e.clears,juice:e.juice,lines:e.lines,finishingMoves:e.finishingMoves}}function highestTile(e){for(let t=0;t<400;t++)if(e.tiles[t]!==Piece.Empty)return Math.floor(t/10);return 40}function highestGarbageTile(e){for(let t=0;t<400;t++)if(e.tiles[t]===Piece.Garbage)return Math.floor(t/10);return 40}function rotateArray(e,t){const n=mod(t,4);return n<=0?e.map((e=>[...e])):1===n?e.map(((t,n)=>t.map(((t,i)=>e[e.length-i-1][n])))):2===n?e.map(((t,n)=>t.map(((t,i)=>e[e.length-n-1][e.length-i-1])))):e.map(((t,n)=>t.map(((t,i)=>e[i][e.length-n-1]))))}function getRotatedPiece(e,t){return rotateArray(PIECES[e].layout,t)}function pieceFits(e,t,n,i,o){const c=getRotatedPiece(e,o);for(let e=0;e<c.length;e++)for(let o=0;o<c[e].length;o++)if(1===c[e][o]){const c=n+o,a=i+e,l=10*a+c;if(c<0||c>=10||a<0||a>=40)return!1;if(l>t.tiles.length||l<0||t.tiles[l]!==Piece.Empty)return!1}return!0}function defaultSubmoveState(){return{pieceX:3,pieceY:16,pieceRotation:0,submoves:[],lastMoveSuccessful:!0,dropLines:0}}function makeSubmove(e,t,n){if(n.submoves.includes(Direction.Drop))return n;const i={pieceX:n.pieceX,pieceY:n.pieceY,pieceRotation:n.pieceRotation,submoves:[...n.submoves],lastMoveSuccessful:!1,dropLines:0};if(e===Direction.Left)pieceFits(t.bag[0],t,i.pieceX-1,i.pieceY,i.pieceRotation)&&(i.pieceX-=1,i.submoves.push(Direction.Left),i.lastMoveSuccessful=!0);else if(e===Direction.Right)pieceFits(t.bag[0],t,i.pieceX+1,i.pieceY,i.pieceRotation)&&(i.pieceX+=1,i.submoves.push(Direction.Right),i.lastMoveSuccessful=!0);else if(e===Direction.Down)pieceFits(t.bag[0],t,i.pieceX,i.pieceY+1,i.pieceRotation)&&(i.pieceY+=1,i.submoves.push(Direction.Down),i.lastMoveSuccessful=!0);else if(e===Direction.Drop){for(i.submoves.push(Direction.Drop),i.lastMoveSuccessful=!0;pieceFits(t.bag[0],t,i.pieceX,i.pieceY+1,i.pieceRotation);)i.pieceY+=1;i.dropLines=i.pieceY-n.pieceY}else if((e===Direction.RotateRight||e===Direction.RotateLeft||e===Direction.Rotate180)&&t.bag[0]!==Piece.O){const n=e===Direction.RotateRight?1:e===Direction.RotateLeft?-1:2,o=t.bag[0]==Piece.I?WALL_KICK_I:WALL_KICK,c=i.pieceRotation,a=mod(i.pieceRotation+n,4);for(let n=0;n<5;n++){const l=o[c][a][n];if(pieceFits(t.bag[0],t,i.pieceX+l[0],i.pieceY-l[1],a)){i.pieceX=i.pieceX+l[0],i.pieceY=i.pieceY-l[1],i.pieceRotation=a,i.submoves.push(e),i.lastMoveSuccessful=!0;break}}}return i}function getJuiceLevel(e){return Math.log(e/2e3+1)/Math.log(2)}function getLevelJuice(e){return 2e3*(Math.pow(2,e)-1)}function getCombos(e){let t=[],n=0;for(let i=0;i<e.length/2;i+=1){if("0"===e[2*i])continue;let o;const c=e.substring(0,2*i+2).replace(/0/g,"");for(let e=0;e<=c.length/2;e+=1){const t=COMBOS[c.substring(2*e,2*i+2)];if(t){o={name:t.name,lines:{type:t.lines.type,count:t.lines.count},juice:{type:t.juice.type,count:t.juice.count}};break}}o&&(o.original=e.substring(2*i,2*i+2),"add"===o.lines.type?o.lines.count=o.lines.count+Math.max(0,Math.floor(n/2)):o.lines.count=o.lines.count*Math.max(1,Math.floor(n/2)),"add"===o.juice.type&&(o.juice.count=o.juice.count*Math.max(1,n-1)),t.push(o),n+=1)}return t}function makeMove(e,t,n,i,o=!1){if(t.lost)return t;let c=deepCopyBoard(t),a=Piece.Empty,l=defaultSubmoveState();switch(e.type){case MoveType.Move:for(const t of e.submoves||[])l=makeSubmove(t,c,l);const i=getRotatedPiece(c.bag[0],l.pieceRotation);let o=!0;for(let e=0;e<i.length;e++)for(let t=0;t<i[e].length;t++)if(1===i[e][t]){const n=10*(l.pieceY+e)+l.pieceX+t;c.tiles[n]=c.bag[0],n>=200&&(o=!1)}a=c.bag.shift()||Piece.Empty,c.canHold=!0,o&&(c.lost=!0),c.finishingMoves>=0&&(c.finishingMoves-=1);break;case MoveType.Hold:if(c.canHold){const e=c.hold;c.hold=c.bag[0],c.canHold=!1,e!==Piece.Empty?c.bag[0]=e:c.bag.shift()}break;case MoveType.AddGarbage:let u=e.garbage||0;(highestTile(c)-u<=0||highestGarbageTile(c)-u<=20)&&(t.lost=!0,u=highestTile(c));const d=n(`${c.srng}-garbage-${u}-${c.garbagePool}`);c.garbagePool+=u;const p=Math.floor(10*d()),s=c.tiles.slice(10*u),r=new Array(10*u).fill(Piece.Empty).map(((e,t)=>t%10===p?Piece.Empty:Piece.Garbage));c.tiles=[...s,...r]}c.bag.length<7&&(c.bag=c.bag.concat(createNewBag(c.srng,c.bagPool,n)),c.bagPool++);const u=[];let d=0;for(let e=0;e<40;e++){const t=c.tiles.slice(10*e,10*(e+1));t.every((e=>e!==Piece.Empty))?(i.resendGarbage||t.every((e=>e!==Piece.Garbage)))&&(d+=1):u.push(t)}c.clears=d;let p=!1;if(c.lines+=c.clears,c.clears>0){t.finishingMoves>=0&&(c.finishingMoves+=c.clears);let n=0;for(let e=0;e<c.clears&&!(c.garbageQueue.length<=0);e++){n+=1;const e=c.garbageQueue.shift();e.amount-=1,e.amount>0&&c.garbageQueue.unshift(e)}if(c.clears-=n,i.garbageDefense)for(let e of c.garbageQueue)e.turns+=1;if(c.clears>0&&a===Piece.T&&0===l.dropLines){const t=[...e.submoves||[]].reverse().find((e=>e!==Direction.Down&&e!==Direction.Drop));if(t===Direction.RotateLeft||t===Direction.RotateRight){const e=rotateArray(T_CHECK,l.pieceRotation);let t=0;for(let n=0;n<e.length;n++)for(let i=0;i<e[n].length;i++)1===e[n][i]&&(s=l.pieceX+i,r=l.pieceY+n,(s<0||s>=10||r<0||r>=40||c.tiles[10*r+s]!==Piece.Empty)&&(t+=1));t>=3&&(p=!0)}}}var s,r;const y=new Array(400).fill(Piece.Empty);for(let e=0;e<u.length;e++)y.splice(10*(e+(40-u.length)),10,...u[e]);if(c.tiles=y,!o&&e.type===MoveType.Move){for(let e=0;e<c.garbageQueue.length;e++){const t=c.garbageQueue[e];t.turns-=1,t.turns<=0&&(c.lastDamager=t.player,c=makeMove({type:MoveType.AddGarbage,garbage:t.amount},c,n,i,!0))}c.garbageQueue=c.garbageQueue.filter((e=>e.turns>0))}const g=PIECES[c.bag[0]].layout;for(let e=0;e<g.length;e++)for(let t=0;t<g[e].length;t++)if(1===g[e][t]){const n=10*(e+16)+(t+3);c.tiles[n]!==Piece.Empty&&(c.lost=!0)}if(e.type===MoveType.Move)if(c.clears<=0)c.combo.length>=2&&(i.forgivingCombos&&"00"!==c.combo.substring(c.combo.length-2)?c.combo+="00":c.finishingMoves<0&&(c.combo=""));else{c.combo+=c.clears+(p?"t":"l"),y.every((e=>e===Piece.Empty))&&(c.combo+="fc");const e=getCombos(c.combo),t=e[e.length-1];if("multiply"===t.juice.type){let t=0;for(let n of e)"multiply"!==n.juice.type&&(t+=n.juice.count);c.juice+=t}else c.juice+=t.juice.count}return c.finishingMoves<0&&t.finishingMoves>=0&&(c.lost=!0),c}function mod(e,t){return(e%t+t)%t}
//# sourceMappingURL=index.2b27d19d.js.map
