{"mappings":"AAAA,MAAM,SAAS;IACX,IAAI;IACJ,WAAW;IACX,YAAY;AAChB;AAEA,MAAM,QAAQ;IAAE,MAAM,CAAC;IAAG,OAAO,CAAC;AAAE;AAEpC,MAAM,OAAO;IACT,SAAS;IACT,aAAa;IAEb,UAAU;IACV,aAAa;IACb,iBAAiB;IAEjB,OAAO;IACP,WAAW;IAEX,QAAQ;IACR,UAAU,CAAC;IACX,WAAW,CAAC;IACZ,YAAY,CAAC;IAEb,cAAc;IAEd,MAAM,MAAM,IAAI;IAChB,iBAAiB,EAAE;IACnB,UAAU;IACV,QAAQ;IAER,WAAW;IACX,aAAa;QAAC;QAAG;KAAE;IACnB,kBAAkB;QAAC;QAAG;KAAE;IACxB,eAAe;IACf,YAAY;IAEZ,oBAAoB,EAAE;IAEtB,kBAAkB;IAClB,gBAAgB;IAChB,aAAa;IACb,kBAAkB;IAElB,eAAe;IAEf,UAAU;IAEV,aAAa,CAAC;IACd,YAAY;IACZ,iBAAiB;AACrB;AAEA,MAAM,cAAc;IAChB;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAChM;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IAAG;IA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","sources":["public/sketch.js"],"sourcesContent":["const socket = {\n    io: null,\n    connected: false,\n    registered: false,\n};\n\nconst input = { keys: {}, mouse: {} };\n\nconst game = {\n    loading: true,\n    loadMessage: \"Starting...\",\n\n    isTyping: false,\n    typedString: \"\",\n    typeLengthLimit: 0,\n\n    error: \"\",\n    errorAnim: -1,\n\n    inGame: false,\n    gameData: {},\n    localData: {},\n    playerData: {},\n\n    mainMenuAnim: 0,\n\n    menu: menus.main,\n    menuButtonAnims: [],\n    menuAnim: 0,\n    online: 0,\n\n    matchAnim: 0,\n    boardOrigin: [0, 0],\n    boardTranslation: [0, 0],\n    boardRotation: 0,\n    boardScale: 0,\n\n    boardNotifications: [],\n\n    awaitingKeypress: false,\n    settingsPieceX: 0,\n    settingsRot: 0,\n    keypressToChange: \"\",\n\n    cosmeticsPage: \"palette\",\n\n    hocoAnim: -1,\n\n    leaderboard: {},\n    normalRank: 0,\n    competitiveRank: 0,\n};\n\nconst HOCO_SECRET = [\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,\n    0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,\n    0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0,\n    0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,\n    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n];\n\nconst state = {\n    creatingNewAccount: false,\n    loadingData: false,\n    joiningMatch: false,\n    inSubMenu: false,\n    subMenu: null,\n};\n\nconst images = {\n    nathan: null,\n    small: null,\n    banners: {},\n};\n\nlet SQUARE_SIZE = 0;\n\nconst controls = {\n    left: 37,\n    right: 39,\n    down: 40,\n    drop: \" \".charCodeAt(0),\n    rotateRight: 38,\n    rotateLeft: \"Z\".charCodeAt(0),\n    rotate180: \"X\".charCodeAt(0),\n    hold: \"C\".charCodeAt(0),\n};\n\nlet settings = null;\n\nconst defaultSettings = {\n    moveSpeed: 2,\n    moveDelayFactor: 2,\n    screenShakeFactor: 1,\n    \"controls.left\": 37,\n    \"controls.right\": 39,\n    \"controls.down\": 40,\n    \"controls.drop\": \" \".charCodeAt(0),\n    \"controls.rotateRight\": 38,\n    \"controls.rotateLeft\": \"Z\".charCodeAt(0),\n    \"controls.rotate180\": \"A\".charCodeAt(0),\n    \"controls.hold\": \"C\".charCodeAt(0),\n};\n\nconst ON_OR_OFF = [\n    { key: \"on\", value: true },\n    { key: \"off\", value: false },\n];\n\nconst MOVE_SPEED_SETTINGS = [\n    { key: \"fast\", value: 2 },\n    { key: \"very fast\", value: 1 },\n    { key: \"very slow\", value: 20 },\n    { key: \"slow\", value: 10 },\n    { key: \"reasonable\", value: 5 },\n    { key: \"normal\", value: 4 },\n    { key: \"slightly faster\", value: 3 },\n];\nconst MOVE_DELAY_FACTOR_SETTINGS = [\n    { key: \"normal\", value: 2 },\n    { key: \"extended\", value: 4 },\n    { key: \"none\", value: 1 },\n];\nconst SCREEN_SHAKE_SETTINGS = [\n    { key: \"normal\", value: 1 },\n    { key: \"lots\", value: 2 },\n    { key: \"nauseating\", value: 4 },\n    { key: \"i wouldn't\", value: 100 },\n    { key: \"off\", value: 0 },\n    { key: \"reduced\", value: 0.5 },\n];\n\nfunction resetState() {\n    for (let val in state) {\n        state[val] = false;\n    }\n\n    game.inGame = false;\n    game.loading = false;\n    game.loadMessage = \"\";\n\n    game.isTyping = false;\n    game.typedString = \"\";\n    game.typeLengthLimit = 0;\n\n    game.error = \"\";\n    game.errorAnim = -1;\n\n    game.inGame = false;\n    game.gameData = {};\n    game.localData = {};\n    game.playerData = {};\n\n    game.mainMenuAnim = 0;\n\n    game.menu = menus.main;\n    game.menuButtonAnims = [];\n    game.menuAnim = 0;\n\n    game.matchAnim = 0;\n\n    game.boardOrigin = [width / 2, -height / 2];\n    game.boardTranslation = [0, 0];\n    game.boardRotation = 0;\n    game.boardScale = 1;\n\n    game.boardNotifications = [];\n\n    game.awaitingKeypress = false;\n    game.settingsPieceX = 0;\n    game.settingsRot = 0;\n    game.keypressToChange = \"\";\n\n    game.cosmeticsPage = \"palette\";\n\n    game.hocoAnim = -1;\n\n    game.leaderboard = {};\n    game.normalRank = 0;\n    game.competitiveRank = 0;\n}\n\nfunction preload() {\n    images.nathan = loadImage(\"./assets/nathan.png\");\n    images.small = loadImage(\"./assets/nathan32.png\");\n\n    for (const bannerName in COSM_BANNERS) {\n        const imageName = COSM_BANNERS[bannerName].data;\n        images.banners[bannerName] = loadImage(`./assets/cosmetics/${imageName}`);\n    }\n}\n\nfunction setup() {\n    createCanvas();\n    windowResized();\n\n    loadRankIcons();\n\n    reset();\n    connect();\n}\n\nfunction reset() {\n    background(250);\n\n    game.loading = true;\n    game.loadMessage = \"Starting...\";\n\n    socket.io = null;\n    socket.connected = false;\n    socket.registered = false;\n\n    loadSettings();\n\n    resetState();\n}\n\nfunction resetSettings() {\n    settings = null;\n    localStorage.removeItem(\"chentris_2_settings\");\n    loadSettings();\n}\n\nfunction getSetting(key) {\n    if (settings[key]) {\n        return settings[key];\n    } else {\n        settings[key] = defaultSettings[key];\n        saveSettings();\n        return defaultSettings[key];\n    }\n}\n\nfunction setSetting(key, value) {\n    settings[key] = value;\n    saveSettings();\n}\n\nfunction loadSettings() {\n    if (localStorage.getItem(\"chentris_2_settings\")) {\n        settings = {\n            ...defaultSettings,\n            ...JSON.parse(localStorage.getItem(\"chentris_2_settings\")),\n        };\n    } else {\n        saveSettings();\n        loadSettings();\n    }\n}\n\nfunction saveSettings() {\n    localStorage.setItem(\"chentris_2_settings\", JSON.stringify(settings || defaultSettings));\n}\n\nfunction getId() {\n    return localStorage.getItem(\"chentris_2_id\");\n}\n\nfunction setId(id) {\n    return localStorage.setItem(\"chentris_2_id\", id || \"null\");\n}\n\nfunction loadData() {\n    resetState();\n\n    game.loading = true;\n    game.loadMessage = \"Loading player...\";\n\n    state.loadingData = true;\n\n    socket.io.emit(\"player_data\");\n}\n\nfunction connect() {\n    socket.io = io({ query: { id: getId(), forceNew: true } });\n    socket.connected = true;\n\n    game.loading = true;\n    game.loadMessage = \"Connecting...\";\n\n    socket.io.on(\"connect\", () => {\n        game.loading = true;\n        game.loadMessage = \"Registering...\";\n    });\n\n    socket.io.on(\"register\", (data) => {\n        if (data.registered) {\n            socket.registered = true;\n\n            loadData();\n        } else {\n            if (data.error === \"INVALID_ID\") {\n                game.error = \"The id is invalid. If the issue persists, clear your local storage.\";\n                game.errorAnim = 99999;\n            } else if (data.error === \"NULL_ID\" || data.error === \"INVALID_USERNAME\") {\n                game.loading = false;\n                game.loadMessage = \"\";\n\n                game.isTyping = true;\n                game.typedString = \"\";\n                game.typeLengthLimit = 16;\n\n                state.creatingNewAccount = true;\n\n                if (data.error === \"INVALID_USERNAME\") {\n                    game.error = \"Your username is invalid.\";\n                    game.errorAnim = 5;\n                }\n            }\n        }\n    });\n\n    socket.io.on(\"set_id\", (data) => {\n        setId(data.id);\n    });\n\n    socket.io.on(\"player_data\", (data) => {\n        game.loading = false;\n        game.loadMessage = \"\";\n\n        game.playerData = data.user;\n        console.log(data);\n        if (data.leaderboard) {\n            game.leaderboard = data.leaderboard;\n            game.online = data.online;\n            game.normalRank = data.normalRank;\n            game.competitiveRank = data.competitiveRank;\n        }\n\n        if (!data.inGame) {\n            game.mainMenuAnim = 1;\n\n            switchMenu(\"main\");\n\n            if (window.location.hash.length >= 1) {\n                if (window.location.hash.length === 5) {\n                    joinMatch(window.location.hash.substring(1));\n                } else {\n                    game.error = \"Invalid match link.\";\n                    game.errorAnim = 5;\n                }\n            }\n        }\n    });\n\n    socket.io.on(\"player_data_quiet\", (data) => {\n        console.log(\"quiet\", data);\n        game.playerData = data.user;\n    });\n\n    socket.io.on(\"error\", (data) => {\n        game.errorAnim = 5;\n        game.error = `Fatal packet error type <${data.type}>: ${data.error}. Reloading in 5 seconds.`;\n        setTimeout(() => {\n            reset();\n            connect();\n        }, 5000);\n    });\n\n    socket.io.on(\"match_found\", (data) => {\n        game.loading = false;\n        game.loadMessage = \"\";\n\n        window.location.hash = \"\";\n        if (data.error) {\n            game.error = data.message;\n            game.errorAnim = 5;\n            return;\n        }\n\n        game.inGame = true;\n\n        const board = deepCopyBoard(data.match.boards[game.playerData._id]);\n\n        game.gameData = {\n            match: data.match,\n            moves: [],\n        };\n\n        game.matchAnim = 1;\n        game.boardOrigin = [width / 2, -height / 2];\n        game.boardTranslation = [0, 0];\n        game.boardRotation = 0;\n        game.boardScale = 1;\n\n        game.boardNotifications = [];\n\n        game.localData = {\n            board,\n            state: defaultSubmoveState(),\n            stateAcc: 0,\n            speed: game.gameData.match.rules.initialSpeed,\n            timers: {\n                fall: 0,\n                dropping: false,\n                shortDrop: 0,\n                longDrop: 0,\n            },\n            deadAnim: 0,\n            boardAnims: {},\n            boardSizes: {},\n            ready: false,\n            attackOption: 0,\n        };\n    });\n\n    socket.io.on(\"board_reset\", () => {\n        const board = deepCopyBoard(game.gameData.match.boards[game.playerData._id]);\n\n        game.boardOrigin = [width / 2, -height / 2];\n        game.boardTranslation = [0, 0];\n        game.boardRotation = 0;\n        game.boardScale = 1;\n\n        game.gameData = {\n            match: game.gameData.match,\n            moves: [],\n        };\n\n        game.localData = {\n            board,\n            state: defaultSubmoveState(),\n            stateAcc: 0,\n            speed: game.gameData.match.rules.initialSpeed,\n            timers: {\n                fall: 0,\n                dropping: false,\n                shortDrop: 0,\n                longDrop: 0,\n            },\n            deadAnim: 0,\n            boardAnims: {},\n            boardSizes: {},\n            ready: false,\n            attackOption: 0,\n        };\n\n        game.localData.board.move = 0;\n    });\n\n    socket.io.on(\"match_state\", (data) => {\n        if (!game.inGame) {\n            return;\n        }\n\n        const board = data.match.boards[game.playerData._id];\n        const moveNumber = game.localData.board.move;\n\n        game.gameData = {\n            match: data.match,\n            moves: game.gameData.moves.filter((move) => move.num >= board.move),\n        };\n\n        game.localData.board = board;\n\n        for (let move of game.gameData.moves) {\n            game.localData.board = makeMove(move.move, game.localData.board, Math.seedrandom, game.gameData.match.rules);\n        }\n\n        game.localData.board.move = moveNumber;\n\n        if (game.gameData.match.newNotification) {\n            game.boardNotifications.push({\n                text: game.gameData.match.notification,\n                time: 0,\n            });\n        }\n    });\n}\n\nfunction joinMatch(code) {\n    socket.io.emit(\"join_match\", { code });\n    game.loading = true;\n    game.loadMessage = \"Joining...\";\n}\n\nfunction windowResized() {\n    resizeCanvas(windowWidth, windowHeight);\n    SQUARE_SIZE = (height - 200) / 20;\n}\n\nfunction keyTyped() {\n    if (game.isTyping) {\n        if (game.typedString.length < game.typeLengthLimit && key !== \"Enter\") {\n            game.typedString += key;\n        }\n    }\n}\n\nfunction keyPressed() {\n    if (game.awaitingKeypress) {\n        if (keyCode !== ESCAPE) {\n            setSetting(game.keypressToChange, keyCode);\n        }\n        game.awaitingKeypress = false;\n        game.keypressToChange = \"\";\n    }\n\n    if (keyCode === BACKSPACE && game.isTyping) {\n        if (game.typedString.length > 0) {\n            game.typedString = game.typedString.substring(0, game.typedString.length - 1);\n        }\n    }\n    input.keys[keyCode] = 0;\n}\n\nfunction keyReleased() {\n    input.keys[keyCode] = -1;\n}\n\nfunction mousePressed() {\n    input.mouse[mouseButton] = 0;\n}\n\nfunction mouseReleased() {\n    input.mouse[mouseButton] = -1;\n}\n\nfunction updateInput() {\n    for (let key in input.keys) {\n        if (input.keys[key] >= 0) {\n            input.keys[key] += 1;\n        }\n    }\n    for (let button in input.mouse) {\n        if (input.mouse[button] >= 0) {\n            input.mouse[button] += 1;\n        }\n    }\n}\n\nfunction clamp(a, mi, ma) {\n    return min(max(a, mi), ma);\n}\n\nfunction update() {\n    const deltaTime = frameRate() > 0 ? 1 / frameRate() : 0;\n\n    if (game.errorAnim > 0) {\n        game.errorAnim -= deltaTime;\n    }\n\n    if (state.creatingNewAccount) {\n        if (input.keys[\"\\r\".charCodeAt(0)] === 0) {\n            const username = game.typedString.trim().substring(0, 32);\n\n            if (username.length > 0) {\n                socket.io.emit(\"create_account\", { username });\n                game.loading = true;\n                game.loadMessage = \"Registering...\";\n                game.creatingNewAccount = false;\n            }\n        }\n    }\n\n    if (socket.registered) {\n        game.mainMenuAnim = lerp(game.mainMenuAnim, 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.menuAnim = lerp(game.menuAnim, 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.matchAnim = lerp(game.matchAnim, 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n\n        if (!game.inGame) {\n            if (state.joiningMatch) {\n                const match = /[^0-9]/g;\n                game.typedString = game.typedString.replace(match, \"\");\n\n                const stopJoiningMatch = () => {\n                    state.joiningMatch = false;\n                    game.isTyping = false;\n                    game.typedString = \"\";\n                    game.typeLengthLimit = 0;\n                };\n\n                buttonState(width / 2 + 160, height / 2 - 50, 40, 20, () => {}, stopJoiningMatch);\n\n                if (input.keys[ESCAPE] === 0) {\n                    stopJoiningMatch();\n                }\n\n                if (game.typedString.length === 4) {\n                    joinMatch(game.typedString);\n\n                    game.isTyping = false;\n                    game.typedString = \"\";\n                    game.typeLengthLimit = -1;\n                    state.joiningMatch = false;\n                }\n            } else if (state.inSubMenu) {\n                const leave = () => {\n                    state.inSubMenu = false;\n                };\n\n                buttonState(width / 2 + 460, height / 2 - 300, 40, 20, () => {}, leave);\n\n                if (input.keys[ESCAPE] === 0) {\n                    leave();\n                }\n\n                if (state.subMenu === submenus.Settings) {\n                    function awaitKeypress(name) {\n                        game.awaitingKeypress = true;\n                        game.keypressToChange = name;\n                    }\n\n                    buttonState(\n                        width / 2 + 140,\n                        height / 2 - 250,\n                        100,\n                        20,\n                        () => {},\n                        () => awaitKeypress(\"controls.left\")\n                    );\n                    buttonState(\n                        width / 2 + 140,\n                        height / 2 - 220,\n                        100,\n                        20,\n                        () => {},\n                        () => awaitKeypress(\"controls.right\")\n                    );\n                    buttonState(\n                        width / 2 + 140,\n                        height / 2 - 190,\n                        100,\n                        20,\n                        () => {},\n                        () => awaitKeypress(\"controls.down\")\n                    );\n                    buttonState(\n                        width / 2 + 140,\n                        height / 2 - 160,\n                        100,\n                        20,\n                        () => {},\n                        () => awaitKeypress(\"controls.drop\")\n                    );\n                    buttonState(\n                        width / 2 + 140,\n                        height / 2 - 130,\n                        100,\n                        20,\n                        () => {},\n                        () => awaitKeypress(\"controls.rotateLeft\")\n                    );\n                    buttonState(\n                        width / 2 + 140,\n                        height / 2 - 100,\n                        100,\n                        20,\n                        () => {},\n                        () => awaitKeypress(\"controls.rotateRight\")\n                    );\n                    buttonState(\n                        width / 2 + 140,\n                        height / 2 - 70,\n                        100,\n                        20,\n                        () => {},\n                        () => awaitKeypress(\"controls.rotate180\")\n                    );\n                    buttonState(\n                        width / 2 + 140,\n                        height / 2 - 40,\n                        100,\n                        20,\n                        () => {},\n                        () => awaitKeypress(\"controls.hold\")\n                    );\n\n                    buttonState(\n                        width / 2 + 340,\n                        height / 2 + 260,\n                        150,\n                        30,\n                        () => {},\n                        () => resetSettings()\n                    );\n\n                    selectState(\n                        width / 2 - 245,\n                        height / 2 - 100,\n                        100,\n                        20,\n                        MOVE_SPEED_SETTINGS,\n                        () => settings[\"moveSpeed\"],\n                        (val) => {\n                            settings[\"moveSpeed\"] = val;\n                            saveSettings();\n                        }\n                    );\n                    selectState(\n                        width / 2 - 245,\n                        height / 2 - 50,\n                        100,\n                        20,\n                        MOVE_DELAY_FACTOR_SETTINGS,\n                        () => settings[\"moveDelayFactor\"],\n                        (val) => {\n                            settings[\"moveDelayFactor\"] = val;\n                            saveSettings();\n                        }\n                    );\n                    selectState(\n                        width / 2 - 245,\n                        height / 2,\n                        100,\n                        20,\n                        SCREEN_SHAKE_SETTINGS,\n                        () => settings[\"screenShakeFactor\"],\n                        (val) => {\n                            settings[\"screenShakeFactor\"] = val;\n                            saveSettings();\n                        }\n                    );\n\n                    if (\n                        input.keys[settings[\"controls.left\"]] % settings[\"moveSpeed\"] === 0 &&\n                        (input.keys[settings[\"controls.left\"]] === 0 || input.keys[settings[\"controls.left\"]] > settings[\"moveSpeed\"] * settings[\"moveDelayFactor\"])\n                    ) {\n                        game.settingsPieceX -= 1;\n                    }\n\n                    if (\n                        input.keys[settings[\"controls.right\"]] % settings[\"moveSpeed\"] === 0 &&\n                        (input.keys[settings[\"controls.right\"]] === 0 || input.keys[settings[\"controls.right\"]] > settings[\"moveSpeed\"] * settings[\"moveDelayFactor\"])\n                    ) {\n                        game.settingsPieceX += 1;\n                    }\n\n                    game.settingsPieceX = constrain(game.settingsPieceX, -5, 5);\n                } else if (state.subMenu === submenus.Cosmetics) {\n                    buttonState(\n                        width / 2 - 490,\n                        height / 2 - 290,\n                        100,\n                        30,\n                        () => {},\n                        () => {\n                            game.cosmeticsPage = \"palette\";\n                        }\n                    );\n                    buttonState(\n                        width / 2 - 380,\n                        height / 2 - 290,\n                        100,\n                        30,\n                        () => {},\n                        () => {\n                            game.cosmeticsPage = \"banner\";\n                        }\n                    );\n                    buttonState(\n                        width / 2 - 270,\n                        height / 2 - 290,\n                        100,\n                        30,\n                        () => {},\n                        () => {\n                            game.cosmeticsPage = \"nameColor\";\n                        }\n                    );\n\n                    let i = 0;\n                    if (game.cosmeticsPage === \"palette\") {\n                        for (const paletteName in COSM_PALETTES) {\n                            const x = width / 2 - 490 + floor(i / 6) * 310;\n                            const y = height / 2 - 240 + (i % 6) * 80;\n\n                            if ((game.playerData.palettesUnlocked || [\"Default\"]).includes(paletteName)) {\n                                if (game.playerData.currentPalette !== paletteName) {\n                                    buttonState(\n                                        x,\n                                        y + 50,\n                                        300,\n                                        20,\n                                        () => {},\n                                        () => {\n                                            socket.io.emit(\"equip\", { type: \"palette\", which: paletteName });\n                                        }\n                                    );\n                                }\n                            } else {\n                                const data = COSM_PALETTES[paletteName];\n                                if (getLevel(game.playerData.xp) >= data.levelRequirement && game.playerData.juice >= data.juiceCost) {\n                                    buttonState(\n                                        x,\n                                        y + 50,\n                                        300,\n                                        20,\n                                        () => {},\n                                        () => {\n                                            socket.io.emit(\"purchase\", { type: \"palette\", which: paletteName });\n                                        }\n                                    );\n                                }\n                            }\n\n                            i += 1;\n                        }\n                    } else if (game.cosmeticsPage === \"banner\") {\n                        for (const bannerName in COSM_BANNERS) {\n                            const x = width / 2 - 490 + floor(i / 6) * 310;\n                            const y = height / 2 - 240 + (i % 6) * 80;\n\n                            if ((game.playerData.bannersUnlocked || [\"Default\"]).includes(bannerName)) {\n                                if (game.playerData.currentBanner !== bannerName) {\n                                    buttonState(\n                                        x,\n                                        y + 50,\n                                        300,\n                                        20,\n                                        () => {},\n                                        () => {\n                                            socket.io.emit(\"equip\", { type: \"banner\", which: bannerName });\n                                        }\n                                    );\n                                }\n                            } else {\n                                const data = COSM_BANNERS[bannerName];\n                                if (getLevel(game.playerData.xp) >= data.levelRequirement && game.playerData.juice >= data.juiceCost) {\n                                    buttonState(\n                                        x,\n                                        y + 50,\n                                        300,\n                                        20,\n                                        () => {},\n                                        () => {\n                                            socket.io.emit(\"purchase\", { type: \"banner\", which: bannerName });\n                                        }\n                                    );\n                                }\n                            }\n\n                            i += 1;\n                        }\n                    } else if (game.cosmeticsPage === \"nameColor\") {\n                        for (const nameColor in COSM_NAME_COLORS) {\n                            const x = width / 2 - 490 + floor(i / 6) * 310;\n                            const y = height / 2 - 240 + (i % 6) * 80;\n\n                            if ((game.playerData.nameColorsUnlocked || [\"Default\"]).includes(nameColor)) {\n                                if (game.playerData.currentNameColor !== nameColor) {\n                                    buttonState(\n                                        x,\n                                        y + 50,\n                                        300,\n                                        20,\n                                        () => {},\n                                        () => {\n                                            socket.io.emit(\"equip\", { type: \"nameColor\", which: nameColor });\n                                        }\n                                    );\n                                }\n                            } else {\n                                const data = COSM_NAME_COLORS[nameColor];\n                                if (getLevel(game.playerData.xp) >= data.levelRequirement && game.playerData.juice >= data.juiceCost) {\n                                    buttonState(\n                                        x,\n                                        y + 50,\n                                        300,\n                                        20,\n                                        () => {},\n                                        () => {\n                                            socket.io.emit(\"purchase\", { type: \"nameColor\", which: nameColor });\n                                        }\n                                    );\n                                }\n                            }\n\n                            i += 1;\n                        }\n                    }\n                }\n            } else {\n                for (let i = 0; i < game.menu.length; i++) {\n                    const mouseOver = mouseX < 300 && mouseY > 100 + i * 50 && mouseY < 140 + i * 50;\n\n                    game.menuButtonAnims[i] = lerp(game.menuButtonAnims[i], mouseOver ? 1 : 0, clamp(0.5 * 60 * deltaTime, 0, 1));\n\n                    if (input.mouse[LEFT] === 0 && mouseOver) {\n                        game.menu[i].onClick();\n                    }\n                }\n            }\n        }\n    }\n\n    if (game.inGame) {\n        if (input.keys[\"\\r\".charCodeAt(0)] === 0) {\n            if (!game.gameData.match.playing) {\n                game.localData.ready = !game.localData.ready;\n                socket.io.emit(\"ready\", { ready: game.localData.ready });\n            }\n        }\n\n        buttonState(\n            20,\n            95,\n            180,\n            30,\n            () => {},\n            () => navigator.clipboard.writeText(`https://chentris2.hked.live/#${game.gameData.match.joinCode}`),\n            !game.gameData.match.options.allowJoining\n        );\n        buttonState(\n            20,\n            130,\n            180,\n            30,\n            () => {},\n            () => {\n                socket.io.emit(\"leave_match\");\n                reset();\n                connect();\n            },\n            false\n        );\n\n        if (!game.inGame) {\n            return;\n        }\n\n        function changeOption(name, newValue) {\n            const newOptions = { ...game.gameData.match.options };\n            newOptions[name] = newValue;\n            socket.io.emit(\"match_options\", { options: newOptions });\n        }\n\n        function changeRule(name, newValue) {\n            const newRules = { ...game.gameData.match.rules };\n            newRules[name] = newValue;\n            socket.io.emit(\"match_options\", { rules: newRules });\n        }\n\n        selectState(\n            150,\n            200,\n            40,\n            20,\n            ON_OR_OFF,\n            () => game.gameData.match.options.allowJoining,\n            (v) => changeOption(\"allowJoining\", v),\n            false\n        );\n        selectState(\n            150,\n            225,\n            40,\n            20,\n            ON_OR_OFF,\n            () => game.gameData.match.options.public,\n            (v) => changeOption(\"public\", v),\n            false\n        );\n        selectState(\n            150,\n            250,\n            40,\n            20,\n            ON_OR_OFF,\n            () => game.gameData.match.options.ranked,\n            (v) => changeOption(\"ranked\", v),\n            false\n        );\n\n        const comp = game.gameData.match.rules.competitive;\n        selectState(\n            150,\n            325,\n            40,\n            20,\n            ON_OR_OFF,\n            () => comp,\n            (v) => changeRule(\"competitive\", v),\n            false\n        );\n        selectState(\n            150,\n            350,\n            40,\n            20,\n            [\n                { key: \"slow\", value: 80 },\n                { key: \"medium\", value: 320 },\n                { key: \"fast\", value: 640 },\n                { key: \"very fast\", value: 1280 },\n                { key: \"good luck\", value: 5120 },\n                { key: \"why\", value: 40960 },\n                { key: \"snail\", value: 20 },\n            ],\n            () => game.gameData.match.rules.initialSpeed,\n            (v) => changeRule(\"initialSpeed\", v),\n            comp\n        );\n        selectState(\n            150,\n            375,\n            40,\n            20,\n            ON_OR_OFF,\n            () => game.gameData.match.rules.resendGarbage,\n            (v) => changeRule(\"resendGarbage\", v),\n            comp\n        );\n        selectState(\n            150,\n            400,\n            40,\n            20,\n            ON_OR_OFF,\n            () => game.gameData.match.rules.forgivingCombos,\n            (v) => changeRule(\"forgivingCombos\", v),\n            comp\n        );\n        selectState(\n            150,\n            425,\n            40,\n            20,\n            [\n                { key: \"one\", value: 1 },\n                { key: \"two\", value: 2 },\n                { key: \"three\", value: 3 },\n            ],\n            () => game.gameData.match.rules.garbageTurns,\n            (v) => changeRule(\"garbageTurns\", v),\n            comp\n        );\n        selectState(\n            150,\n            450,\n            40,\n            20,\n            ON_OR_OFF,\n            () => game.gameData.match.rules.garbageDefense,\n            (v) => changeRule(\"garbageDefense\", v),\n            comp\n        );\n        selectState(\n            150,\n            475,\n            50,\n            20,\n            ON_OR_OFF,\n            () => game.gameData.match.rules.comboIgnoresIncoming,\n            (v) => changeRule(\"comboIgnoresIncoming\", v),\n            comp\n        );\n        selectState(\n            150,\n            500,\n            50,\n            20,\n            [\n                { key: \"off\", value: 0 },\n                { key: \"20 lines\", value: 20 },\n                { key: \"40 lines\", value: 40 },\n                { key: \"100 lines\", value: 100 },\n                { key: \"1000 lines\", value: 1000 },\n                { key: \"1000000 lines\", value: 1_000_000 },\n            ],\n            () => game.gameData.match.rules.sprint,\n            (v) => changeRule(\"sprint\", v),\n            comp\n        );\n\n        if (!game.inGame) {\n            return;\n        }\n\n        for (let notif of game.boardNotifications) {\n            notif.time += deltaTime;\n        }\n        game.boardNotifications = game.boardNotifications.filter((notif) => notif.time <= 1);\n\n        if (game.hocoAnim >= 0 && game.hocoAnim <= 100) {\n            game.hocoAnim += deltaTime * 10;\n        } else if (game.hocoAnim > 100) {\n            game.hocoAnim = -1;\n        }\n\n        if (input.keys[\"J\".charCodeAt(0)] === 0) {\n            game.hocoAnim = 0;\n        }\n\n        let origin = { x: 0, y: 0 };\n\n        if (!game.gameData.match.playing || game.gameData.match.players.filter((id) => !game.gameData.match.boards[id].lost).length <= 1) {\n            origin = { x: width / 2, y: height / 2 };\n        } else {\n            origin = { x: SQUARE_SIZE * 13, y: height / 2 };\n        }\n\n        game.boardOrigin[0] = lerp(game.boardOrigin[0], origin.x, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.boardOrigin[1] = lerp(game.boardOrigin[1], origin.y, clamp(0.1 * 60 * deltaTime, 0, 1));\n\n        game.boardTranslation[0] = lerp(game.boardTranslation[0], 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.boardTranslation[1] = lerp(game.boardTranslation[1], 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n\n        game.boardRotation = lerp(game.boardRotation, 0, clamp(0.1 * 60 * deltaTime, 0, 1));\n        game.boardScale = lerp(game.boardScale, 1, clamp(0.1 * 60 * deltaTime, 0, 1));\n\n        game.localData.timers.fall += deltaTime;\n\n        game.localData.stateAcc += deltaTime;\n\n        if (!game.localData.board) {\n            return;\n        }\n\n        if (game.localData.board.lost) {\n            game.localData.deadAnim += deltaTime;\n        } else {\n            game.localData.deadAnim = lerp(game.localData.deadAnim, 0, clamp(0.5 * 60 * deltaTime, 0, 1));\n        }\n\n        if (game.localData.stateAcc > 1 / 20) {\n            game.localData.stateAcc = 0;\n            socket.io.emit(\"submove_state\", {\n                state: game.localData.state,\n                timers: game.localData.timers,\n                attackOption: game.localData.attackOption,\n            });\n        }\n\n        if (game.localData.timers.dropping) {\n            game.localData.timers.shortDrop += deltaTime * (input.keys[settings[\"controls.down\"]] >= 0 ? 4 : 1);\n            game.localData.timers.longDrop += deltaTime;\n        }\n\n        let move = null;\n\n        if (input.keys[settings[\"controls.hold\"]] === 0) {\n            move = { type: \"hold\" };\n            if (game.localData.board.canHold) {\n                game.localData.state = defaultSubmoveState();\n            }\n        }\n\n        const fallPerMinute = 60 / game.localData.speed;\n        if (input.keys[settings[\"controls.down\"]] % settings[\"moveSpeed\"] === 0 || game.localData.timers.fall >= fallPerMinute) {\n            game.localData.state = makeSubmove(\"down\", game.localData.board, game.localData.state);\n\n            let first = true;\n            while (game.localData.timers.fall >= fallPerMinute) {\n                if (!first) {\n                    game.localData.state = makeSubmove(\"down\", game.localData.board, game.localData.state);\n                }\n                first = false;\n                game.localData.timers.fall -= fallPerMinute;\n            }\n        }\n\n        if (\n            input.keys[settings[\"controls.left\"]] % settings[\"moveSpeed\"] === 0 &&\n            (input.keys[settings[\"controls.left\"]] === 0 || input.keys[settings[\"controls.left\"]] > settings[\"moveSpeed\"] * settings[\"moveDelayFactor\"])\n        ) {\n            game.localData.state = makeSubmove(\"left\", game.localData.board, game.localData.state);\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardTranslation[0] -= 2 * settings[\"screenShakeFactor\"];\n                game.boardRotation -= 0.002 * settings[\"screenShakeFactor\"];\n            }\n        }\n\n        if (\n            input.keys[settings[\"controls.right\"]] % settings[\"moveSpeed\"] === 0 &&\n            (input.keys[settings[\"controls.right\"]] === 0 || input.keys[settings[\"controls.right\"]] > settings[\"moveSpeed\"] * settings[\"moveDelayFactor\"])\n        ) {\n            game.localData.state = makeSubmove(\"right\", game.localData.board, game.localData.state);\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardTranslation[0] += 2 * settings[\"screenShakeFactor\"];\n                game.boardRotation += 0.002 * settings[\"screenShakeFactor\"];\n            }\n        }\n\n        if (input.keys[settings[\"controls.rotateRight\"]] === 0) {\n            game.localData.state = makeSubmove(\"rotateRight\", game.localData.board, game.localData.state);\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardRotation += 0.001 * settings[\"screenShakeFactor\"];\n            }\n        }\n\n        if (input.keys[settings[\"controls.rotateLeft\"]] === 0) {\n            game.localData.state = makeSubmove(\"rotateLeft\", game.localData.board, game.localData.state);\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardRotation -= 0.001 * settings[\"screenShakeFactor\"];\n            }\n        }\n\n        if (input.keys[settings[\"controls.rotate180\"]] === 0) {\n            game.localData.state = makeSubmove(\"rotate180\", game.localData.board, game.localData.state);\n\n            if (game.localData.state.lastMoveSuccessful) {\n                game.localData.timers.shortDrop = 0;\n\n                game.boardRotation -= 0.002 * settings[\"screenShakeFactor\"];\n            }\n        }\n\n        for (let i = 0; i < 5; i += 1) {\n            if (input.keys[(i + 1).toString().charCodeAt(0)] === 0) {\n                game.localData.attackOption = i;\n            }\n        }\n\n        game.localData.timers.dropping = game.localData.state.pieceY === makeSubmove(\"drop\", game.localData.board, game.localData.state).pieceY;\n\n        if (\n            input.keys[settings[\"controls.drop\"]] === 0 ||\n            game.localData.timers.shortDrop >= max(0.5, 120 / game.localData.speed) ||\n            game.localData.timers.longDrop >= max(2, 640 / game.localData.speed)\n        ) {\n            if (input.keys[settings[\"controls.drop\"]] === 0) {\n                game.localData.state = makeSubmove(\"drop\", game.localData.board, game.localData.state);\n                game.boardTranslation[1] += 10 * settings[\"screenShakeFactor\"];\n            }\n            move = { type: \"move\", submoves: game.localData.state.submoves };\n            game.localData.timers = {\n                fall: 0,\n                dropping: false,\n                shortDrop: 0,\n                longDrop: 0,\n            };\n            game.localData.state = defaultSubmoveState();\n        }\n\n        if (move) {\n            game.localData.board = makeMove(move, game.localData.board, Math.seedrandom, game.gameData.match.rules);\n            socket.io.emit(\"move\", { move, time: Date.now() });\n\n            if (game.localData.board.clears > 0) {\n                const clears = game.localData.board.clears;\n                const squareClears = clears ** 2;\n\n                game.boardRotation += clears * 0.1 * settings[\"screenShakeFactor\"];\n                game.boardScale += squareClears * 0.02 * settings[\"screenShakeFactor\"];\n            }\n\n            game.gameData.moves.push({ move, num: game.localData.board.move });\n            game.localData.board.move += 1;\n        }\n\n        if (game.gameData.match.playing) {\n            let i = 0;\n            const count = game.gameData.match.players.filter((id) => !game.gameData.match.boards[id].lost).length;\n            const size = count <= 2 ? SQUARE_SIZE : (height - 150) / ceil(sqrt(count - 1)) / 24;\n\n            let spectating = game.gameData.match.boards[game.playerData._id].lost;\n            for (let id of game.gameData.match.players.filter((id) => id !== game.playerData._id)) {\n                const idealPos = getIdealPos(i, count - 1, width - 200 - SQUARE_SIZE * 17, height - 200);\n                idealPos[0] += SQUARE_SIZE * 17 + 100;\n                idealPos[1] += 100;\n\n                const isSpectator = spectating && !game.gameData.match.boards[id].lost;\n                if (isSpectator) {\n                    idealPos[0] = game.boardOrigin[0];\n                    idealPos[1] = game.boardOrigin[1];\n                }\n\n                if (!game.localData.boardAnims[id]) {\n                    game.localData.boardAnims[id] = [];\n                    game.localData.boardAnims[id][0] = idealPos[0];\n                    game.localData.boardAnims[id][1] = idealPos[1];\n                    game.localData.boardAnims[id][2] = 0;\n                    game.localData.boardSizes[id] = 0;\n                }\n\n                game.localData.boardAnims[id][0] = lerp(game.localData.boardAnims[id][0], idealPos[0], clamp(0.1 * 60 * deltaTime, 0, 1));\n                game.localData.boardAnims[id][1] = lerp(game.localData.boardAnims[id][1], idealPos[1], clamp(0.1 * 60 * deltaTime, 0, 1));\n\n                game.localData.boardSizes[id] = lerp(game.localData.boardSizes[id], isSpectator ? SQUARE_SIZE : size, clamp(0.05 * 60 * deltaTime, 0, 1));\n\n                if (!game.gameData.match.boards[id].lost) {\n                    if (!isSpectator) {\n                        i += 1;\n                    }\n                } else {\n                    const anim = game.localData.boardAnims[id][2] * 50;\n                    const deadAnimY = anim ** 2 - 20 * anim;\n                    const deadAnimX = -(anim * log(anim + 1));\n                    game.localData.boardAnims[id][0] = idealPos[0] + deadAnimX;\n                    game.localData.boardAnims[id][1] = idealPos[1] + deadAnimY;\n\n                    game.localData.boardAnims[id][2] += deltaTime;\n                }\n\n                if (isSpectator) {\n                    spectating = false;\n                }\n            }\n        }\n    }\n}\n\nfunction buttonState(x, y, w, h, onHover, onClick, disabled = false) {\n    if (disabled) {\n        return;\n    }\n    if (mouseX > x && mouseY > y && mouseX < x + w && mouseY < y + h) {\n        onHover();\n        if (input.mouse[LEFT] === 0) {\n            onClick();\n        }\n    }\n}\n\nfunction drawButton(x, y, w, h, tx, onHover, onClick, disabled = false) {\n    if (mouseX > x && mouseY > y && mouseX < x + w && mouseY < y + h) {\n        onHover();\n        if (input.mouse[LEFT] === 0) {\n            onClick();\n        }\n    }\n\n    if (disabled) {\n        fill(200);\n    }\n\n    stroke(0);\n    rect(x, y, w, h);\n\n    textSize(16);\n    textAlign(CENTER, CENTER);\n    textStyle(NORMAL);\n\n    fill(0);\n    noStroke();\n    text(tx, x + w / 2, y + h / 2);\n}\n\nfunction selectState(x, y, w, h, options, getValue, setValue, disabled = false) {\n    if (!options) {\n        return;\n    }\n    const value = getValue();\n    const nextValue = options[mod(options.findIndex((option) => option.value === value) + 1, options.length)].value;\n    buttonState(\n        x,\n        y,\n        w,\n        h,\n        () => {},\n        () => setValue(nextValue),\n        disabled\n    );\n}\n\nfunction drawSelect(x, y, w, h, options, getValue, disabled = false) {\n    const value = getValue();\n    const tx = options.find((option) => option.value === value).key;\n\n    fill(250);\n    drawButton(\n        x,\n        y,\n        w,\n        h,\n        tx,\n        () => fill(240),\n        () => fill(230),\n        disabled\n    );\n}\n\nfunction drawError() {\n    if (game.errorAnim > 0) {\n        fill(250, 150, 150);\n        stroke(0);\n        rect(width / 2 - 300, 200, 600, 50);\n\n        noStroke();\n        fill(0);\n        textAlign(CENTER, CENTER);\n        textSize(16);\n        text(game.error, width / 2, 225);\n    }\n}\n\nfunction drawLoading() {\n    fill(250);\n    strokeWeight(1);\n    stroke(0);\n\n    rect(width / 2 - 100, height / 2 - 60, 200, 120);\n    noStroke();\n    fill(0);\n    textAlign(CENTER, CENTER);\n    textStyle(NORMAL);\n    textSize(16);\n    text(\"Loading...\", width / 2, height / 2 - 40);\n\n    tint(255);\n    push();\n\n    translate(width / 2, height / 2);\n    rotate(millis() * 0.01);\n    image(images.small, -16, -16);\n\n    stroke(0);\n    noFill();\n    rect(-16, -16, 32, 32);\n    pop();\n\n    textSize(10);\n    text(game.loadMessage, width / 2, height / 2 + 40);\n}\n\nfunction drawCreateAccount() {\n    fill(250);\n    strokeWeight(1);\n    stroke(0);\n\n    rect(width / 2 - 250, height / 2 - 125, 500, 200);\n\n    fill(0);\n    noStroke();\n\n    textAlign(CENTER, CENTER);\n    textStyle(BOLD);\n    textSize(16);\n    text(\"Chentris 2\", width / 2, height / 2 - 90);\n\n    textStyle(NORMAL);\n    text(\"Welcome! Before continuing, please create a username.\", width / 2, height / 2 - 50);\n    text(\"Press enter to continue.\", width / 2, height / 2 + 40);\n\n    textSize(32);\n    textWrap(CHAR);\n    text(game.typedString + \"_\", width / 2 - 250, height / 2, 500);\n}\n\nfunction drawPiece(x, y, rot, size, piece, palette = \"Default\", trans = 255, strokeless = false) {\n    const layout = getRotatedPiece(piece, rot);\n    const color = COSM_PALETTES[palette].data[piece];\n    strokeless ? noStroke() : stroke(0);\n    fill(...color, trans);\n    for (let i = 0; i < layout.length; i++) {\n        for (let j = 0; j < layout[i].length; j++) {\n            if (layout[i][j] === 1) {\n                rect(x + j * size, y + i * size, size, size);\n            }\n        }\n    }\n}\n\nfunction getIdealPos(index, size, wi, hi) {\n    if (size <= 0) {\n        return [0.5 * wi, 0.5 * hi];\n    }\n    const minSqrt = ceil(sqrt(size));\n    const y = floor(index / minSqrt);\n    const x = index % minSqrt;\n\n    return [((x + 0.5) / minSqrt) * wi, ((y + 0.5) / minSqrt) * hi];\n}\n\nfunction drawBoard(board, state, timers, squareSize, detail, palette = \"Default\") {\n    if (detail >= 0) {\n        fill(250);\n        stroke(0);\n        rect(-5 * squareSize, -10 * squareSize, 10 * squareSize, 20 * squareSize);\n\n        stroke(200);\n        for (let i = 0; i < 19; i++) {\n            line(-5 * squareSize + 1, (-9 + i) * squareSize, 5 * squareSize - 1, (-9 + i) * squareSize);\n        }\n\n        for (let i = 0; i < 9; i++) {\n            line((-4 + i) * squareSize, -10 * squareSize + 1, (-4 + i) * squareSize, 10 * squareSize - 1);\n        }\n    }\n\n    if (detail >= 2) {\n        fill(250);\n        stroke(0);\n        rect(5 * squareSize, -10 * squareSize, 0.5 * squareSize, 20 * squareSize);\n        rect(-5.5 * squareSize, -10 * squareSize, 0.5 * squareSize, 20 * squareSize);\n\n        let sum = 0;\n        for (let i = 0; i < board.garbageQueue.length; i++) {\n            const garbage = board.garbageQueue[i];\n            const amount = garbage.amount;\n            sum += amount;\n            if (garbage.turns === 1) {\n                fill(250, 100 + 150 * sin(millis() * 0.04), 100);\n            } else {\n                fill(200);\n            }\n            rect(5 * squareSize, (10 - sum) * squareSize, 0.5 * squareSize, amount * squareSize);\n        }\n        const currentLevel = Math.floor(getJuiceLevel(board.juice));\n        const nextLevel = currentLevel + 1;\n        const progress = map(board.juice, getLevelJuice(currentLevel), getLevelJuice(nextLevel), 0, 1);\n        stroke(0);\n        fill(50 + random(0, 50), 100 + random(0, 50), 200 + random(0, 50));\n        rect(-5.5 * squareSize, (10 - progress * 20) * squareSize, 0.5 * squareSize, progress * 20 * squareSize);\n        for (let i = 0; i < currentLevel; i += 1) {\n            fill(50 + random(0, 50), 100 + random(0, 50), 200 + random(0, 50));\n            rect(-6 * squareSize, (9.5 - i * 0.5) * squareSize, 0.5 * squareSize, 0.5 * squareSize);\n        }\n\n        for (let i = 0; i < 5; i++) {\n            drawPiece(6.5 * squareSize, (-10 + 4 * i) * squareSize, 0, squareSize, board.bag[i + 1], palette);\n        }\n\n        if (board.hold !== -1) {\n            drawPiece((-6 - PIECES[board.hold].layout.length) * squareSize, -10 * squareSize, 0, squareSize, board.hold, palette, board.canHold ? 255 : 100);\n        }\n    }\n\n    if (detail >= 1) {\n        textAlign(TOP, CENTER);\n        fill(0);\n        noStroke();\n        textSize(16);\n        textStyle(NORMAL);\n\n        drawPiece(\n            (state.pieceX - 5) * squareSize,\n            (state.pieceY - 30) * squareSize,\n            state.pieceRotation,\n            squareSize,\n            board.bag[0],\n            palette,\n            timers.dropping ? (sin(millis() * 0.02) + 1) * 100 + 50 : 255\n        );\n    }\n\n    if (detail >= 3) {\n        const dropSubmove = makeSubmove(\"drop\", board, state);\n\n        drawPiece((dropSubmove.pieceX - 5) * squareSize, (dropSubmove.pieceY - 30) * squareSize, state.pieceRotation, squareSize, board.bag[0], palette, 100, true);\n    }\n\n    if (detail >= 1) {\n        for (let i = 0; i < 40; i++) {\n            for (let j = 0; j < 10; j++) {\n                const index = i * 10 + j;\n                const tile = board.tiles[index];\n                if (tile >= 0) {\n                    const color = COSM_PALETTES[palette].data[tile];\n                    stroke(0);\n                    fill(color[0], color[1], color[2]);\n                    rect((-5 + j) * squareSize, (-30 + i) * squareSize, squareSize, squareSize);\n                }\n            }\n        }\n    }\n\n    if (detail >= 5 && game.hocoAnim >= 0) {\n        const anim = floor(game.hocoAnim);\n        for (let y = 0; y < 20; y += 1) {\n            const indexY = (y + anim) * 10;\n            for (let x = 0; x < 10; x += 1) {\n                const index = indexY + x;\n                if (index >= 0 && index < HOCO_SECRET.length) {\n                    const tile = HOCO_SECRET[index];\n\n                    if (tile > 0) {\n                        const color = PIECES[floor(random(0, 7))].color;\n                        stroke(0);\n                        fill(color[0], color[1], color[2]);\n                        rect((-5 + x) * squareSize, (-30 + (y + 20)) * squareSize, squareSize, squareSize);\n                    }\n                }\n            }\n        }\n    }\n\n    if (detail >= 4) {\n        const combos = getCombos(board.combo);\n        const count = combos.length;\n        if (count > 0) {\n            noStroke();\n\n            textAlign(RIGHT, CENTER);\n            textStyle(NORMAL);\n            textSize(16);\n            let i = 0;\n            let sumLines = 0;\n            let juice = 0;\n            for (let combo of combos) {\n                sumLines += combo.lines.count;\n\n                if (sumLines <= 1) {\n                    fill(30, 50, 150);\n                } else if (sumLines <= 2) {\n                    fill(140, 60, 10);\n                } else if (sumLines <= 3) {\n                    fill(80, 30, 140);\n                } else if (sumLines <= 4) {\n                    fill(30, 150, 130);\n                } else if (sumLines <= 5) {\n                    fill(140, 130, 10);\n                } else if (sumLines <= 6) {\n                    fill(30, 140, 20);\n                } else if (sumLines <= 7) {\n                    fill(140, 30, 50);\n                } else {\n                    let r = random(0, 1) < 0.5;\n                    let g = random(0, 1) < 0.5;\n                    let b = random(0, 1) < 0.5 && !r && !g;\n\n                    fill(r ? 250 : 50, g ? 250 : 50, b ? 250 : 50);\n                }\n\n                text(combo.name, -7 * squareSize, (-3.5 + i) * squareSize);\n                rect(-6.75 * squareSize, (-3.9 + i) * squareSize, 0.8 * squareSize, 0.8 * squareSize, 5);\n\n                let lines = parseInt(combo.original.substring(0, 1));\n                if (lines) {\n                    fill(250);\n                    if (lines >= 1) {\n                        rect(-6.65 * squareSize, (-3.8 + i) * squareSize, 0.25 * squareSize, 0.25 * squareSize, 2);\n                    }\n                    if (lines >= 2) {\n                        rect(-6.3 * squareSize, (-3.8 + i) * squareSize, 0.25 * squareSize, 0.25 * squareSize, 2);\n                    }\n                    if (lines >= 3) {\n                        rect(-6.65 * squareSize, (-3.45 + i) * squareSize, 0.25 * squareSize, 0.25 * squareSize, 2);\n                    }\n                    if (lines >= 4) {\n                        rect(-6.3 * squareSize, (-3.45 + i) * squareSize, 0.25 * squareSize, 0.25 * squareSize, 2);\n                    }\n                }\n\n                i += 1;\n            }\n\n            textStyle(BOLD);\n            textSize(12 + 4 * count);\n            if (sumLines <= 1) {\n                fill(30, 50, 150);\n            } else if (sumLines <= 2) {\n                fill(140, 60, 10);\n            } else if (sumLines <= 3) {\n                fill(80, 30, 140);\n            } else if (sumLines <= 4) {\n                fill(30, 150, 130);\n            } else if (sumLines <= 5) {\n                fill(140, 130, 10);\n            } else if (sumLines <= 6) {\n                fill(30, 140, 20);\n            } else if (sumLines <= 7) {\n                fill(140, 30, 50);\n            } else {\n                let r = random(0, 1) < 0.5;\n                let g = random(0, 1) < 0.5;\n                let b = random(0, 1) < 0.5 && !r && !g;\n\n                fill(r ? 250 : 50, g ? 250 : 50, b ? 250 : 50);\n            }\n            textAlign(RIGHT, BOTTOM);\n            text(`x${count}`, -6 * squareSize, -5 * squareSize);\n\n            textSize(16);\n            textAlign(RIGHT, TOP);\n            text(`${sumLines} ${sumLines === 1 ? \"line\" : \"lines\"}`, -6 * squareSize, -5 * squareSize);\n        }\n        textSize(16);\n        textStyle(BOLD);\n        textAlign(RIGHT, BOTTOM);\n        noStroke();\n        fill(0);\n        text(`${board.lines} line${board.lines === 1 ? \"\" : \"s\"}`, -6 * squareSize, 8 * squareSize);\n        text(`${board.juice} juice`, -6 * squareSize, 9 * squareSize);\n        text(`Level ${Math.floor(getJuiceLevel(board.juice))} (x${1 + Math.floor(getJuiceLevel(board.juice)) * 0.2})`, -6 * squareSize, 10 * squareSize);\n\n        console.log(game.gameData.match.rules);\n        if (game.gameData.match.playing && game.gameData.match.rules.sprint > 0) {\n            const sprint = game.gameData.match.rules.sprint;\n            const myLines = game.localData.board.lines;\n            const remaining = sprint - myLines;\n            if (remaining > 0) {\n                textSize(16);\n                fill(0);\n                textAlign(RIGHT, BOTTOM);\n                text(\"remaining\", -6 * squareSize, -0.1 * squareSize);\n                textSize(32);\n                textAlign(RIGHT, TOP);\n                text(remaining.toLocaleString(), -6 * squareSize, 0);\n\n                if (!game.gameData.match.solo && detail >= 5) {\n                    let otherMax = 0;\n                    for (const id of game.gameData.match.players.filter((id) => id !== game.playerData._id)) {\n                        otherMax = Math.max(otherMax, game.gameData.match.boards[id].lines);\n                    }\n\n                    const ahead = myLines - otherMax;\n                    textSize(16);\n                    fill(sin(millis() / 200) * 100);\n                    if (ahead < 0) {\n                        text(`${-ahead} behind!`, -6 * squareSize, 2 * squareSize);\n                    } else if (ahead > 0) {\n                        text(`${ahead} ahead!`, -6 * squareSize, 2 * squareSize);\n                    }\n                }\n            }\n        }\n\n        textSize(300);\n        textStyle(BOLD);\n        textAlign(CENTER, CENTER);\n        noStroke();\n        fill(0, 100);\n        if (board.finishingMoves >= 0) {\n            text(board.finishingMoves, 0, 0);\n        }\n    }\n}\n\nfunction getKeyName(k) {\n    if (k === 37) {\n        return \"left\";\n    }\n    if (k === 39) {\n        return \"right\";\n    }\n    if (k === 40) {\n        return \"down\";\n    }\n    if (k === 38) {\n        return \"up\";\n    }\n    if (k === \" \".charCodeAt(0)) {\n        return \"space\";\n    }\n    return String.fromCharCode(k);\n}\n\nfunction drawState() {\n    if (state.creatingNewAccount) {\n        drawCreateAccount();\n        return;\n    }\n\n    if (!socket.registered) {\n        image(images.nathan, 0, 0, width, height);\n\n        textSize(64);\n        fill(255);\n        text(\"Something went wrong!\", 100, 100);\n\n        return;\n    }\n\n    if (!game.inGame) {\n        stroke(0);\n\n        fill(100, 100, 250);\n        beginShape();\n        vertex(-100, 10);\n        vertex(420 + 3000 * game.mainMenuAnim, 10);\n        vertex(400 + 3000 * game.mainMenuAnim, 85);\n        vertex(-100, 85);\n        endShape();\n\n        fill(250, 100, 120);\n        beginShape();\n        vertex(-100, 10);\n        vertex(400 + 1000 * game.mainMenuAnim, 10);\n        vertex(380 + 1000 * game.mainMenuAnim, 85);\n        vertex(-100, 85);\n        endShape();\n\n        fill(250);\n        beginShape();\n        vertex(-100, 10);\n        vertex(380 + 500 * game.mainMenuAnim, 10);\n        vertex(360 + 500 * game.mainMenuAnim, 85);\n        vertex(-100, 85);\n        endShape();\n\n        fill(0);\n        noStroke();\n        textSize(64);\n        textStyle(BOLD);\n        textAlign(LEFT, TOP);\n        text(\"Chentris 2\", 20 - 400 * game.mainMenuAnim, 20);\n\n        push();\n\n        translate(0, -600 * game.mainMenuAnim);\n\n        fill(0);\n        noStroke();\n\n        textSize(16);\n        textAlign(CENTER, TOP);\n        textStyle(ITALIC);\n\n        text(`online: ${game.online}`, width / 2, 10);\n\n        fill(250);\n        stroke(0);\n        textStyle(BOLDITALIC);\n\n        textSize(32);\n\n        beginShape();\n        vertex(width - 10, 15);\n        vertex(width - 50 - textWidth(game.playerData.username), 15);\n        vertex(width - 40 - textWidth(game.playerData.username), 70);\n        vertex(width - 10, 70);\n        endShape(CLOSE);\n\n        noStroke();\n        fill(0);\n\n        textAlign(RIGHT, TOP);\n        fill(...COSM_NAME_COLORS[game.playerData.currentNameColor || \"Default\"].data);\n        text(game.playerData.username, width - 20, 20);\n\n        textStyle(NORMAL);\n        textSize(16);\n        fill(200);\n        text(`(#${game.playerData._id.substring(32)})`, width - 20, 50);\n\n        stroke(0);\n        fill(250);\n        rect(width - 100, 80, 90, 95);\n        rect(width - 200, 80, 90, 95);\n\n        noStroke();\n        fill(0);\n        textStyle(BOLD);\n        textAlign(CENTER, TOP);\n\n        textSize(10);\n        text(\"Normal\", width - 155, 88);\n        text(\"Competitive\", width - 55, 88);\n\n        textSize(16);\n        text(game.playerData.normalElo + \" (#\" + game.normalRank + \")\", width - 155, 100);\n        text(game.playerData.compElo + \" (#\" + game.competitiveRank + \")\", width - 55, 100);\n\n        const normalRank = getRank(game.playerData.normalElo);\n        const compRank = getRank(game.playerData.compElo);\n\n        image(normalRank.icon, width - 170, 120);\n        image(compRank.icon, width - 70, 120);\n\n        textSize(12);\n        textStyle(NORMAL);\n        text(normalRank.name, width - 154, 156);\n        text(compRank.name, width - 54, 156);\n\n        stroke(0);\n        fill(250);\n        rect(width - 200, 185, 190, 60);\n        rect(width - 200, 255, 190, 30);\n\n        fill(0);\n        noStroke();\n        textStyle(BOLD);\n        textAlign(LEFT, TOP);\n        textSize(16);\n        const level = floor(getLevel(game.playerData.xp));\n        text(`Level ${level}`, width - 190, 190);\n\n        const baseLevelXp = getXp(level);\n        const nextLevelXp = getXp(level + 1);\n        const deltaXp = nextLevelXp - baseLevelXp;\n        const progress = game.playerData.xp - baseLevelXp;\n\n        textSize(12);\n        textStyle(NORMAL);\n        text(`${progress.toLocaleString()} / ${deltaXp.toLocaleString()}`, width - 190, 205);\n\n        textAlign(LEFT, TOP);\n        text(baseLevelXp.toLocaleString(), width - 190, 230);\n\n        textAlign(RIGHT, TOP);\n        text(nextLevelXp.toLocaleString(), width - 20, 230);\n\n        stroke(200);\n        fill(250);\n        rect(width - 190, 217, 170, 10);\n        stroke(0);\n        fill(50 + sqrt(progress / deltaXp) * 250, 50, 50 + sqrt(1 - progress / deltaXp) * 250);\n        rect(width - 190, 217, 170 * (progress / deltaXp), 10);\n\n        stroke(0);\n        fill(50 + random(0, 50), 100 + random(0, 50), 200 + random(0, 50));\n        rect(width - 30, 265, 10, 10);\n\n        textAlign(RIGHT, CENTER);\n        textSize(16);\n        noStroke();\n        fill(0);\n        text(game.playerData.juice.toLocaleString(), width - 35, 271);\n\n        pop();\n\n        textAlign(LEFT, CENTER);\n        textSize(24);\n        textStyle(BOLD);\n\n        for (let i = 0; i < game.menu.length; i++) {\n            const menu = game.menu[i];\n            const anim = 1000 * pow(2, i) * game.menuAnim;\n            const backAnim = 2000 * pow(2, i) * game.menuAnim;\n\n            stroke(0);\n            fill(230);\n\n            beginShape();\n            vertex(-100, 100 + i * 50);\n            vertex(310 - backAnim - i * 10 + game.menuButtonAnims[i] * 20, 100 + i * 50);\n            vertex(300 - backAnim - i * 10 + game.menuButtonAnims[i] * 20, 140 + i * 50);\n            vertex(-100, 140 + i * 50);\n            endShape();\n\n            fill(255);\n\n            beginShape();\n            vertex(-100, 100 + i * 50);\n            vertex(300 - anim - i * 10 + game.menuButtonAnims[i] * 10, 100 + i * 50);\n            vertex(290 - anim - i * 10 + game.menuButtonAnims[i] * 10, 140 + i * 50);\n            vertex(-100, 140 + i * 50);\n            endShape();\n\n            noStroke();\n            fill(0);\n\n            text(menu.name, 20 - anim, 122 + i * 50);\n        }\n\n        if (state.joiningMatch) {\n            stroke(0);\n            fill(250);\n            rect(width / 2 - 200, height / 2 - 50, 400, 100);\n            fill(0);\n            noStroke();\n            textSize(16);\n            textStyle(BOLD);\n            textAlign(CENTER, TOP);\n            text(\"Enter Join Code\", width / 2, height / 2 - 40);\n\n            textSize(32);\n            for (let i = 0; i < 4; i++) {\n                const x = (i - 1.5) * (380 / 9);\n                rect(width / 2 - x - 10, height / 2 + 40, 20, 2);\n\n                const char = game.typedString.charAt(i);\n\n                if (char) {\n                    text(char, width / 2 + x, height / 2);\n                }\n            }\n\n            fill(250, 120, 100);\n            drawButton(\n                width / 2 + 160,\n                height / 2 - 50,\n                40,\n                20,\n                \"x\",\n                () => fill(230, 100, 80),\n                () => fill(220, 90, 70)\n            );\n        }\n\n        if (state.inSubMenu) {\n            stroke(0);\n            fill(250);\n            rect(width / 2 - 500, height / 2 - 300, 1000, 600);\n\n            fill(250, 120, 100);\n            drawButton(\n                width / 2 + 460,\n                height / 2 - 300,\n                40,\n                20,\n                \"x\",\n                () => fill(230, 100, 80),\n                () => fill(220, 90, 70)\n            );\n\n            if (state.subMenu === submenus.Settings) {\n                line(width / 2, height / 2 - 300, width / 2, height / 2 + 300);\n\n                textSize(24);\n                textStyle(BOLD);\n                textAlign(LEFT, TOP);\n                text(\"Settings\", width / 2 - 490, height / 2 - 290);\n                text(\"Controls\", width / 2 + 10, height / 2 - 290);\n\n                textStyle(NORMAL);\n                textAlign(LEFT, TOP);\n                textSize(16);\n                text(\"Move Left\", width / 2 + 10, height / 2 - 250);\n                text(\"Move Right\", width / 2 + 10, height / 2 - 220);\n                text(\"Soft Drop\", width / 2 + 10, height / 2 - 190);\n                text(\"Hard Drop\", width / 2 + 10, height / 2 - 160);\n                text(\"Rotate Left\", width / 2 + 10, height / 2 - 130);\n                text(\"Rotate Right\", width / 2 + 10, height / 2 - 100);\n                text(\"Rotate 180\", width / 2 + 10, height / 2 - 70);\n                text(\"Hold\", width / 2 + 10, height / 2 - 40);\n\n                fill(250);\n                drawButton(\n                    width / 2 + 140,\n                    height / 2 - 250,\n                    100,\n                    20,\n                    getKeyName(settings[\"controls.left\"]),\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 + 140,\n                    height / 2 - 220,\n                    100,\n                    20,\n                    getKeyName(settings[\"controls.right\"]),\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 + 140,\n                    height / 2 - 190,\n                    100,\n                    20,\n                    getKeyName(settings[\"controls.down\"]),\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 + 140,\n                    height / 2 - 160,\n                    100,\n                    20,\n                    getKeyName(settings[\"controls.drop\"]),\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 + 140,\n                    height / 2 - 130,\n                    100,\n                    20,\n                    getKeyName(settings[\"controls.rotateLeft\"]),\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 + 140,\n                    height / 2 - 100,\n                    100,\n                    20,\n                    getKeyName(settings[\"controls.rotateRight\"]),\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 + 140,\n                    height / 2 - 70,\n                    100,\n                    20,\n                    getKeyName(settings[\"controls.rotate180\"]),\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 + 140,\n                    height / 2 - 40,\n                    100,\n                    20,\n                    getKeyName(settings[\"controls.hold\"]),\n                    () => fill(230),\n                    () => fill(210)\n                );\n\n                fill(250);\n                drawButton(\n                    width / 2 + 340,\n                    height / 2 + 260,\n                    150,\n                    30,\n                    \"Reset Settings\",\n                    () => fill(230),\n                    () => fill(210)\n                );\n\n                if (game.awaitingKeypress) {\n                    fill(0);\n                    textSize(16);\n                    noStroke();\n                    textAlign(LEFT, TOP);\n                    textStyle(BOLD);\n                    text(\"Press any key to set keybind. Press ESC to cancel.\", width / 2 + 10, height / 2); // text for when you are setting a control\n                }\n\n                fill(0);\n                noStroke();\n                textAlign(CENTER, TOP);\n                text(\"you can move this piece\", width / 2 - 250, height / 2 - 250);\n                drawPiece(width / 2 - 250 - SQUARE_SIZE * 1.5 + game.settingsPieceX * SQUARE_SIZE, height / 2 - 200, 0, SQUARE_SIZE, 4, game.playerData.currentPalette);\n\n                fill(250);\n                drawSelect(width / 2 - 245, height / 2 - 100, 100, 20, MOVE_SPEED_SETTINGS, () => settings[\"moveSpeed\"]);\n                drawSelect(width / 2 - 245, height / 2 - 50, 100, 20, MOVE_DELAY_FACTOR_SETTINGS, () => settings[\"moveDelayFactor\"]);\n                drawSelect(width / 2 - 245, height / 2, 100, 20, SCREEN_SHAKE_SETTINGS, () => settings[\"screenShakeFactor\"]);\n\n                textAlign(RIGHT, TOP);\n                fill(0);\n                noStroke();\n                text(\"move sensitivity\", width / 2 - 255, height / 2 - 100);\n                text(\"move delay factor\", width / 2 - 255, height / 2 - 50);\n                text(\"screen shake\", width / 2 - 255, height / 2);\n            } else if (state.subMenu === submenus.Leaderboard) {\n                textAlign(LEFT, TOP);\n                textStyle(BOLD);\n                textSize(16);\n                noStroke();\n                fill(0);\n                text(\"TOP NORMAL\", width / 2 - 470, height / 2 - 290);\n                text(\"TOP COMPETITIVE\", width / 2 - 270, height / 2 - 290);\n                text(\"HIGHEST LEVEL\", width / 2 - 70, height / 2 - 290);\n                text(\"RICHEST\", width / 2 + 130, height / 2 - 290);\n\n                for (let i = 0; i < 25; i += 1) {\n                    noStroke();\n                    fill(0);\n                    textAlign(RIGHT, TOP);\n                    textStyle(BOLD);\n                    text(`${i + 1}.`, width / 2 - 470, height / 2 - 270 + 20 * i);\n                    text(`${i + 1}.`, width / 2 - 270, height / 2 - 270 + 20 * i);\n                    text(`${i + 1}.`, width / 2 - 70, height / 2 - 270 + 20 * i);\n                    text(`${i + 1}.`, width / 2 + 130, height / 2 - 270 + 20 * i);\n\n                    textAlign(LEFT, TOP);\n                    if (game.leaderboard.normal[i] && game.leaderboard.normal[i].id === game.playerData._id) {\n                        textStyle(BOLD);\n                    } else {\n                        textStyle(NORMAL);\n                    }\n                    text(game.leaderboard.normal[i] ? game.leaderboard.normal[i].username : \"-\", width / 2 - 465, height / 2 - 270 + 20 * i);\n\n                    if (game.leaderboard.competitive[i] && game.leaderboard.competitive[i].id === game.playerData._id) {\n                        textStyle(BOLD);\n                    } else {\n                        textStyle(NORMAL);\n                    }\n                    text(game.leaderboard.competitive[i] ? game.leaderboard.competitive[i].username : \"-\", width / 2 - 265, height / 2 - 270 + 20 * i);\n\n                    if (game.leaderboard.level[i] && game.leaderboard.level[i].id === game.playerData._id) {\n                        textStyle(BOLD);\n                    } else {\n                        textStyle(NORMAL);\n                    }\n                    text(game.leaderboard.level[i] ? game.leaderboard.level[i].username : \"-\", width / 2 - 65, height / 2 - 270 + 20 * i);\n\n                    if (game.leaderboard.juice[i] && game.leaderboard.juice[i].id === game.playerData._id) {\n                        textStyle(BOLD);\n                    } else {\n                        textStyle(NORMAL);\n                    }\n                    text(game.leaderboard.juice[i] ? game.leaderboard.juice[i].username : \"-\", width / 2 + 135, height / 2 - 270 + 20 * i);\n\n                    textStyle(ITALIC);\n                    textAlign(RIGHT, TOP);\n                    text(game.leaderboard.normal[i] ? game.leaderboard.normal[i].elo : \"-\", width / 2 - 320, height / 2 - 270 + 20 * i);\n                    text(game.leaderboard.competitive[i] ? game.leaderboard.competitive[i].elo : \"-\", width / 2 - 120, height / 2 - 270 + 20 * i);\n                    text(game.leaderboard.level[i] ? getLevel(game.leaderboard.level[i].xp) : \"-\", width / 2 + 100, height / 2 - 270 + 20 * i);\n                    text(game.leaderboard.juice[i] ? game.leaderboard.juice[i].juice.toLocaleString() : \"-\", width / 2 + 360, height / 2 - 270 + 20 * i);\n\n                    noFill();\n                    stroke(0);\n\n                    image(getRank(game.leaderboard.normal[i] ? game.leaderboard.normal[i].elo : 0).icon, width / 2 - 315, height / 2 - 263 + 20 * i - 8, 16, 16);\n                    image(getRank(game.leaderboard.competitive[i] ? game.leaderboard.competitive[i].elo : 0).icon, width / 2 - 115, height / 2 - 263 + 20 * i - 8, 16, 16);\n\n                    rect(width / 2 - 315, height / 2 - 263 + 20 * i - 8, 16, 16);\n                    rect(width / 2 - 115, height / 2 - 263 + 20 * i - 8, 16, 16);\n                }\n\n                noStroke();\n                fill(0);\n\n                textAlign(RIGHT, TOP);\n                textSize(16);\n                let prevElo = 0;\n                for (let i = 0; i < RANKS.length; i++) {\n                    let rank = RANKS[i];\n                    image(rank.icon, width / 2 + 460, height / 2 + 300 - 40 - 40 * i);\n                    textStyle(BOLD);\n                    text(rank.name, width / 2 + 455, height / 2 + 300 - 40 - 40 * i);\n                    textStyle(NORMAL);\n                    if (rank.elo < 1000000000) {\n                        text(prevElo + \" - \" + (rank.elo - 1), width / 2 + 455, height / 2 + 300 - 20 - 40 * i);\n                    } else {\n                        text(prevElo + \"+\", width / 2 + 455, height / 2 + 300 - 20 - 40 * i);\n                    }\n                    prevElo = rank.elo;\n                }\n            } else if (state.subMenu === submenus.Cosmetics) {\n                fill(250);\n                drawButton(\n                    width / 2 - 490,\n                    height / 2 - 290,\n                    100,\n                    30,\n                    \"Palettes\",\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 - 380,\n                    height / 2 - 290,\n                    100,\n                    30,\n                    \"Banners\",\n                    () => fill(230),\n                    () => fill(210)\n                );\n                fill(250);\n                drawButton(\n                    width / 2 - 270,\n                    height / 2 - 290,\n                    100,\n                    30,\n                    \"Name Colors\",\n                    () => fill(230),\n                    () => fill(210)\n                );\n\n                let i = 0;\n                if (game.cosmeticsPage === \"palette\") {\n                    for (const paletteName in COSM_PALETTES) {\n                        const x = width / 2 - 490 + floor(i / 6) * 310;\n                        const y = height / 2 - 240 + (i % 6) * 80;\n                        textAlign(LEFT, TOP);\n                        textStyle(BOLD);\n                        fill(0);\n                        noStroke();\n                        text(paletteName, x, y);\n\n                        let wSum = 0;\n                        for (let j = 0; j < 8; j += 1) {\n                            drawPiece(x + 5 + wSum * 10, y + 20, 0, 10, j, paletteName);\n                            wSum += PIECES[j].width + 1;\n                        }\n\n                        if ((game.playerData.palettesUnlocked || [\"Default\"]).includes(paletteName)) {\n                            if (game.playerData.currentPalette === paletteName) {\n                                fill(200, 200, 250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    \"equipped\",\n                                    () => fill(230),\n                                    () => fill(210),\n                                    true\n                                );\n                            } else {\n                                fill(250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    \"equip\",\n                                    () => fill(230),\n                                    () => fill(210),\n                                    false\n                                );\n                            }\n                        } else {\n                            const data = COSM_PALETTES[paletteName];\n                            if (getLevel(game.playerData.xp) < data.levelRequirement) {\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `unlocks at level ${data.levelRequirement}`,\n                                    () => fill(230),\n                                    () => fill(210),\n                                    true\n                                );\n                            } else if (game.playerData.juice < data.juiceCost) {\n                                fill(250, 200, 200);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `purchase - ${data.juiceCost.toLocaleString()}`,\n                                    () => fill(230, 200, 200),\n                                    () => fill(210),\n                                    false\n                                );\n                            } else {\n                                fill(250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `purchase - ${data.juiceCost}`,\n                                    () => fill(230),\n                                    () => fill(210),\n                                    false\n                                );\n                            }\n                        }\n\n                        i += 1;\n                    }\n                } else if (game.cosmeticsPage === \"banner\") {\n                    for (const bannerName in COSM_BANNERS) {\n                        const x = width / 2 - 490 + floor(i / 6) * 310;\n                        const y = height / 2 - 240 + (i % 6) * 80;\n                        textAlign(LEFT, TOP);\n                        textStyle(BOLD);\n                        fill(0);\n                        noStroke();\n                        text(bannerName, x, y);\n\n                        image(images.banners[bannerName], x, y + 15, 200, 40);\n                        stroke(0);\n                        noFill();\n                        rect(x, y + 15, 200, 40);\n                        noStroke();\n\n                        if ((game.playerData.bannersUnlocked || [\"Default\"]).includes(bannerName)) {\n                            if (game.playerData.currentBanner === bannerName) {\n                                fill(200, 200, 250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    \"equipped\",\n                                    () => fill(230),\n                                    () => fill(210),\n                                    true\n                                );\n                            } else {\n                                fill(250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    \"equip\",\n                                    () => fill(230),\n                                    () => fill(210),\n                                    false\n                                );\n                            }\n                        } else {\n                            const data = COSM_BANNERS[bannerName];\n                            if (getLevel(game.playerData.xp) < data.levelRequirement) {\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `unlocks at level ${data.levelRequirement}`,\n                                    () => fill(230),\n                                    () => fill(210),\n                                    true\n                                );\n                            } else if (game.playerData.juice < data.juiceCost) {\n                                fill(250, 200, 200);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `purchase - ${data.juiceCost.toLocaleString()}`,\n                                    () => fill(230, 200, 200),\n                                    () => fill(210),\n                                    false\n                                );\n                            } else {\n                                fill(250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `purchase - ${data.juiceCost}`,\n                                    () => fill(230),\n                                    () => fill(210),\n                                    false\n                                );\n                            }\n                        }\n\n                        i += 1;\n                    }\n                } else if (game.cosmeticsPage === \"nameColor\") {\n                    for (const nameColor in COSM_NAME_COLORS) {\n                        const x = width / 2 - 490 + floor(i / 6) * 310;\n                        const y = height / 2 - 240 + (i % 6) * 80;\n                        textAlign(LEFT, TOP);\n                        textStyle(BOLD);\n                        fill(0);\n                        noStroke();\n                        text(nameColor, x, y);\n\n                        const data = COSM_NAME_COLORS[nameColor];\n                        console.log(data.data);\n                        fill(...data.data);\n                        text(game.playerData.username, x, y + 30);\n\n                        if ((game.playerData.nameColorsUnlocked || [\"Default\"]).includes(nameColor)) {\n                            if (game.playerData.currentNameColor === nameColor) {\n                                fill(200, 200, 250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    \"equipped\",\n                                    () => fill(230),\n                                    () => fill(210),\n                                    true\n                                );\n                            } else {\n                                fill(250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    \"equip\",\n                                    () => fill(230),\n                                    () => fill(210),\n                                    false\n                                );\n                            }\n                        } else {\n                            if (getLevel(game.playerData.xp) < data.levelRequirement) {\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `unlocks at level ${data.levelRequirement}`,\n                                    () => fill(230),\n                                    () => fill(210),\n                                    true\n                                );\n                            } else if (game.playerData.juice < data.juiceCost) {\n                                fill(250, 200, 200);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `purchase - ${data.juiceCost.toLocaleString()}`,\n                                    () => fill(230, 200, 200),\n                                    () => fill(210),\n                                    false\n                                );\n                            } else {\n                                fill(250);\n                                drawButton(\n                                    x,\n                                    y + 50,\n                                    300,\n                                    20,\n                                    `purchase - ${data.juiceCost}`,\n                                    () => fill(230),\n                                    () => fill(210),\n                                    false\n                                );\n                            }\n                        }\n\n                        i += 1;\n                    }\n                }\n            }\n        }\n\n        textAlign(LEFT, TOP);\n        textSize(16);\n        textStyle(BOLD);\n        text(\"Update 3\", 20 - 400 * game.mainMenuAnim, height - 200);\n        textStyle(NORMAL);\n        fill(0);\n        text(\"- Added sensitivity control\", 20 - 400 * game.mainMenuAnim, height - 180);\n        text(\"- Added screen shake setting\", 20 - 400 * game.mainMenuAnim, height - 160);\n        text(\"- New leaderboards for level and juice\", 20 - 400 * game.mainMenuAnim, height - 140);\n        text(\"- Cosmetics available\", 20 - 400 * game.mainMenuAnim, height - 120);\n\n        return;\n    }\n\n    // In game\n    if (game.gameData.match.over && game.gameData.match.matchOverDelay >= 20) {\n        fill(0);\n        noStroke();\n        textStyle(BOLD);\n        textAlign(LEFT, TOP);\n        textSize(32);\n        text(\"Match Results\", 20, 20);\n        textSize(24);\n        const winner = game.gameData.match.data[game.gameData.match.results.winner];\n        text(\"Winner: \" + (winner ? winner.username : \"Nobody\"), 20, 60);\n        text(`Returning to lobby in ${floor((200 - game.gameData.match.matchOverDelay) / 20)}...`, 20, height - 50);\n\n        const rewards = game.gameData.match.results.rewards[game.playerData._id];\n        const anim = clamp(game.gameData.match.matchOverDelay - 20, 0, 80) / 80;\n\n        const animXp = floor(game.playerData.xp + anim * rewards.xp);\n        const animElo = floor((game.gameData.match.rules.competitive ? game.playerData.compElo : game.playerData.normalElo) + anim * rewards.elo);\n        const animJuice = floor(game.playerData.juice + anim * rewards.juice);\n\n        text(`XP: +${floor(anim * rewards.xp)}`, 20, height - 200);\n        text(`JUICE: +${floor(anim * rewards.juice)}`, 20, height - 170);\n        text(`ELO: ${rewards.elo > 0 ? \"+\" : \"\"}${round(anim * rewards.elo)}`, 20, height - 140);\n\n        fill(0);\n        textAlign(LEFT, BOTTOM);\n        textSize(24);\n        const level = floor(getLevel(animXp));\n        text(`Level ${level}`, 40, 200);\n\n        const baseLevelXp = getXp(level);\n        const nextLevelXp = getXp(level + 1);\n        const deltaXp = nextLevelXp - baseLevelXp;\n        const progress = animXp - baseLevelXp;\n\n        fill(0);\n        textSize(20);\n        textStyle(NORMAL);\n        text(`${progress.toLocaleString()} / ${deltaXp.toLocaleString()}`, 40, 220);\n\n        textAlign(LEFT, TOP);\n        text(baseLevelXp.toLocaleString(), 40, 245);\n\n        textAlign(RIGHT, TOP);\n        text(nextLevelXp.toLocaleString(), width - 40, 245);\n\n        stroke(200);\n        fill(250);\n        rect(40, 220, width - 80, 20);\n        stroke(0);\n        fill(50 + sqrt(progress / deltaXp) * 250, 50, 50 + sqrt(1 - progress / deltaXp) * 250);\n        rect(40, 220, (width - 80) * (progress / deltaXp), 20);\n\n        fill(50 + random(0, 50), 100 + random(0, 50), 200 + random(0, 50));\n        rect(300, 310, 20, 20);\n\n        noStroke();\n\n        fill(0);\n        textAlign(RIGHT, CENTER);\n        textSize(24);\n        text(animJuice.toLocaleString(), 290, 320);\n\n        const rank = getRank(animElo);\n        text(animElo, 590, 320);\n\n        image(rank.icon, 600, 300, 40, 40);\n        textSize(16);\n        text(rank.name, 590, 340);\n\n        return;\n    }\n\n    push();\n\n    let deadAnimX = 0;\n    let deadAnimY = 0;\n\n    if (!game.localData.board) {\n        return;\n    }\n\n    if (game.localData.board.lost) {\n        const anim = game.localData.deadAnim * 50;\n        deadAnimY = anim ** 2 - 20 * anim;\n        deadAnimX = -(anim * log(anim + 1));\n    }\n\n    translate(game.boardOrigin[0] + deadAnimX, game.boardOrigin[1] + deadAnimY);\n    rotate(game.boardRotation + deadAnimX * 0.002);\n    scale(game.boardScale);\n    translate(game.boardTranslation[0], game.boardTranslation[1]);\n\n    drawBoard(game.localData.board, game.localData.state, game.localData.timers, SQUARE_SIZE, 5, game.playerData.currentPalette);\n\n    if (!game.gameData.match.playing) {\n        textStyle(BOLD);\n        textSize(32);\n        textAlign(CENTER, CENTER);\n        fill(0, 100);\n        noStroke();\n        text(\"Practice\", 0, 0);\n    } else {\n        textSize(16);\n        textAlign(CENTER, TOP);\n        textStyle(BOLD);\n        fill(0);\n        noStroke();\n\n        const end = game.gameData.match.ended || Date.now();\n        const elapsed = max(end - game.gameData.match.started, 0);\n        const time = `${nf(floor(elapsed / 60_000), 2, 0)}:${nf(floor(elapsed / 1000) % 60, 2, 0)}:${nf(elapsed % 1000, 3, 0)}`;\n        const pps = `${nf(game.localData.board.move ? game.localData.board.move / (max(elapsed, 1) / 1000) : 0, 0, 2)} pps`;\n        \n        if (game.gameData.match.solo) {\n            const kos = `${game.gameData.match.kills[game.playerData._id]} KO${game.gameData.match.kills[game.playerData._id] === 1 ? \"\" : \"s\"}`;\n            text(`${time} - ${pps} - ${kos}`, 0, 10.5 * SQUARE_SIZE);\n        } else {\n            text(`${time} - ${pps}`, 0, 10.5 * SQUARE_SIZE);\n        }\n    }\n\n    pop();\n\n    textStyle(BOLD);\n    textAlign(CENTER, CENTER);\n    noStroke();\n\n    for (let notif of game.boardNotifications) {\n        textSize(16 + sqrt(notif.time) * 100);\n        fill(0, 300 * (1 - notif.time));\n        text(notif.text, game.boardOrigin[0], game.boardOrigin[1]);\n    }\n\n    if (!game.gameData.match.playing) {\n        push();\n\n        translate(-game.matchAnim * 400, 0);\n\n        fill(250);\n        stroke(0);\n        rect(10, 30, 200, 250);\n        rect(10, 310, 200, 250);\n\n        fill(0);\n        noStroke();\n        textSize(16);\n\n        textStyle(BOLD);\n\n        textAlign(CENTER, BOTTOM);\n        text(\"Match\", 110, 25);\n        text(\"Rules\", 110, 304);\n\n        textAlign(LEFT, TOP);\n        text(\"Code\", 20, 40);\n\n        textSize(32);\n        for (let i = 0; i < 4; i++) {\n            text(game.gameData.match.joinCode[i], 20 + i * 20, 60);\n        }\n\n        stroke(0);\n        fill(120, 100, 250);\n        drawButton(\n            20,\n            95,\n            180,\n            30,\n            \"Copy Link\",\n            () => fill(100, 80, 230),\n            () => {},\n            !game.gameData.match.options.allowJoining\n        );\n\n        fill(250, 120, 100);\n        drawButton(\n            20,\n            130,\n            180,\n            30,\n            \"Leave Match\",\n            () => fill(230, 100, 80),\n            () => {}\n        );\n\n        textAlign(LEFT, TOP);\n        fill(0);\n        text(\"Allow joining\", 20, 200);\n        text(\"Public\", 20, 225);\n        text(\"Ranked\", 20, 250);\n\n        function getOption(name) {\n            return game.gameData.match.options[name];\n        }\n\n        function getRule(name) {\n            return game.gameData.match.rules[name];\n        }\n\n        drawSelect(150, 200, 50, 20, ON_OR_OFF, () => getOption(\"allowJoining\"), false);\n        drawSelect(150, 225, 50, 20, ON_OR_OFF, () => getOption(\"public\"), false);\n        drawSelect(150, 250, 50, 20, ON_OR_OFF, () => getOption(\"ranked\"), false);\n\n        textAlign(LEFT, TOP);\n        textSize(16);\n        text(\"Competitive\", 20, 325);\n        text(\"Initial Speed\", 20, 350);\n        text(\"Resend Garbage\", 20, 375);\n        text(\"Forgiving Combos\", 20, 400);\n        text(\"Garbage Turns\", 20, 425);\n        text(\"Garbage Defense\", 20, 450);\n        text(\"Combo Not Incoming\", 20, 475);\n        text(\"Sprint\", 20, 500);\n\n        drawSelect(150, 325, 50, 20, ON_OR_OFF, () => getRule(\"competitive\"), false);\n        drawSelect(\n            150,\n            350,\n            50,\n            20,\n            [\n                { key: \"slow\", value: 80 },\n                { key: \"medium\", value: 320 },\n                { key: \"fast\", value: 640 },\n                { key: \"very fast\", value: 1280 },\n                { key: \"good luck\", value: 5120 },\n                { key: \"why\", value: 40960 },\n                { key: \"snail\", value: 20 },\n            ],\n            () => getRule(\"initialSpeed\"),\n            getRule(\"competitive\")\n        );\n        drawSelect(150, 375, 50, 20, ON_OR_OFF, () => getRule(\"resendGarbage\"), getRule(\"competitive\"));\n        drawSelect(150, 400, 50, 20, ON_OR_OFF, () => getRule(\"forgivingCombos\"), getRule(\"competitive\"));\n        drawSelect(\n            150,\n            425,\n            50,\n            20,\n            [\n                { key: \"one\", value: 1 },\n                { key: \"two\", value: 2 },\n                { key: \"three\", value: 3 },\n            ],\n            () => getRule(\"garbageTurns\"),\n            getRule(\"competitive\")\n        );\n        drawSelect(150, 450, 50, 20, ON_OR_OFF, () => getRule(\"garbageDefense\"), getRule(\"competitive\"));\n        drawSelect(150, 475, 50, 20, ON_OR_OFF, () => getRule(\"comboIgnoresIncoming\"), getRule(\"competitive\"));\n        drawSelect(\n            150,\n            500,\n            50,\n            20,\n            [\n                { key: \"off\", value: 0 },\n                { key: \"20 lines\", value: 20 },\n                { key: \"40 lines\", value: 40 },\n                { key: \"100 lines\", value: 100 },\n                { key: \"1000 lines\", value: 1000 },\n                { key: \"1000000 lines\", value: 1_000_000 },\n            ],\n            () => getRule(\"sprint\"),\n            getRule(\"competitive\")\n        );\n\n        pop();\n\n        for (let i = 0; i < game.gameData.match.players.length; i++) {\n            const id = game.gameData.match.players[i];\n            const userData = game.gameData.match.data[id];\n\n            if (!userData) {\n                continue;\n            }\n\n            const y = i * 45;\n\n            fill(250);\n            noStroke();\n            rect(width - 210, 10 + y, 200, 40);\n            image(images.banners[userData.currentBanner], width - 210, 10 + y, 200, 40);\n            stroke(0);\n            noFill();\n            rect(width - 210, 10 + y, 200, 40);\n            fill(250);\n            rect(width - 45, 15 + y, 30, 30);\n\n            fill(...COSM_NAME_COLORS[userData.currentNameColor || \"Default\"].data);\n            noStroke();\n            textAlign(RIGHT, TOP);\n            textStyle(BOLD);\n            textSize(16);\n            text(userData.username, width - 50, 15 + y);\n\n            const elo = game.gameData.match.rules.competitive ? userData.compElo : userData.normalElo;\n            const rank = getRank(elo);\n\n            textStyle(NORMAL);\n            text(elo, width - 70, 33 + y);\n\n            textStyle(BOLDITALIC);\n            textSize(16);\n            textAlign(CENTER, CENTER);\n            text(getLevel(userData.xp), width - 30, 31 + y);\n\n            image(rank.icon, width - 65, 32 + y, 14, 14);\n\n            stroke(0);\n            noFill();\n            rect(width - 65, 32 + y, 14, 14);\n\n            if (userData._id === game.playerData._id) {\n                fill(250);\n                triangle(width - 250, 20 + y, width - 250, 40 + y, width - 230, 30 + y);\n            }\n\n            if (userData._id === game.gameData.match.leader) {\n                fill(220, 160, 100);\n\n                beginShape();\n                vertex(width - 200, 20 + y);\n                vertex(width - 195, 30 + y);\n                vertex(width - 190, 20 + y);\n                vertex(width - 185, 30 + y);\n                vertex(width - 180, 20 + y);\n                vertex(width - 180, 40 + y);\n                vertex(width - 200, 40 + y);\n                endShape(CLOSE);\n            }\n\n            if (game.gameData.match.ready[id]) {\n                fill(100, 250, 120);\n            } else {\n                fill(250, 120, 100);\n            }\n\n            rect(width - 220, 10 + y, 10, 40);\n        }\n\n        if (game.localData.ready) {\n            fill(100, 250, 120);\n        } else {\n            fill(250, 120, 100);\n        }\n\n        textSize(12);\n        textAlign(RIGHT, CENTER);\n        textStyle(BOLD);\n        noStroke();\n        text(`You are ${game.localData.ready ? \"READY\" : \"NOT READY (PRESS ENTER)\"}.`, width - 220, height / 2);\n    } else {\n        fill(0);\n        textAlign(LEFT, TOP);\n        textSize(16);\n        textStyle(BOLD);\n\n        const players = game.gameData.match.players.filter((id) => id !== game.playerData._id);\n        const alivePlayers = game.gameData.match.players.filter((id) => !game.gameData.match.boards[id].lost);\n\n        for (let id of players) {\n            const pos = game.localData.boardAnims[id];\n\n            if (pos[2] > 5) {\n                continue;\n            }\n\n            push();\n            translate(pos[0], pos[1]);\n            rotate(-(pos[2] * 50 * log(pos[2] * 50 + 1)) * 0.002);\n\n            drawBoard(\n                game.gameData.match.boards[id],\n                game.gameData.match.states[id].state || defaultSubmoveState(),\n                game.gameData.match.states[id].timers || {\n                    fall: 0,\n                    dropping: false,\n                    shortDrop: 0,\n                    longDrop: 0,\n                },\n                game.localData.boardSizes[id],\n                alivePlayers.length >= 25 ? 0 : alivePlayers.length >= 17 ? 1 : alivePlayers.length >= 10 ? 2 : alivePlayers.length >= 5 ? 3 : alivePlayers.length <= 2 ? 4 : 3,\n                game.gameData.match.data[id].currentPalette\n            );\n\n            noStroke();\n            textSize(16);\n            textAlign(CENTER, BOTTOM);\n            textStyle(BOLD);\n            fill(...COSM_NAME_COLORS[game.gameData.match.data[id].currentNameColor || \"Default\"].data);\n            text(`${game.gameData.match.data[id].username} (${game.gameData.match.kills[id]} KO${game.gameData.match.kills[id] === 1 ? \"\" : \"s\"})`, 0, -11 * game.localData.boardSizes[id]);\n\n            pop();\n        }\n\n        if (alivePlayers.length > 2) {\n            for (let i = 0; i < 5; i += 1) {\n                stroke(0);\n                fill(game.localData.attackOption === i ? 0 : 250);\n                rect(width / 2 - 250 + i * 100, height - 35, 95, 20);\n                rect(width / 2 - 250 + i * 100, height - 40, 30, 30);\n\n                noStroke();\n                fill(game.localData.attackOption === i ? 250 : 0);\n                textAlign(CENTER, CENTER);\n                textStyle(BOLD);\n                text(i + 1, width / 2 - 235 + i * 100, height - 25);\n\n                textStyle(NORMAL);\n                textAlign(LEFT, CENTER);\n                if (i === 0) {\n                    text(\"random\", width / 2 - 216 + i * 100, height - 24);\n                } else if (i === 1) {\n                    text(\"kills\", width / 2 - 216 + i * 100, height - 24);\n                } else if (i === 2) {\n                    text(\"revenge\", width / 2 - 216 + i * 100, height - 24);\n                } else if (i === 3) {\n                    text(\"winners\", width / 2 - 216 + i * 100, height - 24);\n                } else if (i === 4) {\n                    text(\"losers\", width / 2 - 216 + i * 100, height - 24);\n                }\n            }\n        }\n\n        if (game.localData.board.lost) {\n            textSize(32);\n            textStyle(BOLD);\n            textAlign(CENTER, CENTER);\n            fill(0);\n            noStroke();\n            if (game.gameData.match.results.winner === game.playerData._id) {\n                text(\"You win!\", game.boardOrigin[0], game.boardOrigin[1]);\n            } else {\n                text(\"You are eliminated!\", game.boardOrigin[0], game.boardOrigin[1]);\n            }\n        }\n    }\n}\n\nfunction draw() {\n    update();\n    updateInput();\n    if (game.loading) {\n        drawLoading();\n        drawError();\n        return;\n    }\n    background(250);\n    drawState();\n    drawError();\n}\n"],"names":[],"version":3,"file":"index.a8b85b30.js.map","sourceRoot":"/__parcel_source_root/"}