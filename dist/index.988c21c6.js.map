{"mappings":"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","sources":["client.ts"],"sourcesContent":["const PIECES = [\r\n    {\r\n        layout: [ // I-piece 0\r\n            [0, 0, 0, 0],\r\n            [1, 1, 1, 1],\r\n            [0, 0, 0, 0],\r\n            [0, 0, 0, 0]\r\n        ], \r\n        color: [130, 250, 230]\r\n    },\r\n    {\r\n        layout: [ // J-piece 1\r\n            [1, 0, 0],\r\n            [1, 1, 1],\r\n            [0, 0, 0]\r\n        ], color: [130, 150, 250]\r\n    },\r\n    {\r\n        layout: [ // L-piece 2\r\n            [0, 0, 1],\r\n            [1, 1, 1],\r\n            [0, 0, 0]\r\n        ], \r\n        color: [240, 160, 110]\r\n    },\r\n    {\r\n        layout: [ // O-piece 3\r\n            [1, 1],\r\n            [1, 1]\r\n        ], \r\n        color: [240, 230, 110]\r\n    },\r\n    {\r\n        layout: [ // T-piece 4\r\n            [0, 1, 0],\r\n            [1, 1, 1],\r\n            [0, 0, 0]\r\n        ], \r\n        color: [180, 130, 240]\r\n    },\r\n    {\r\n        layout: [ // Z-piece 5\r\n            [1, 1, 0],\r\n            [0, 1, 1],\r\n            [0, 0, 0]\r\n        ], \r\n        color: [240, 130, 150]\r\n    },\r\n    {\r\n        layout: [ // S-piece 6\r\n            [0, 1, 1],\r\n            [1, 1, 0],\r\n            [0, 0, 0]\r\n        ], \r\n        color: [130, 240, 120]\r\n    },\r\n    {\r\n        layout: [ // Garbage 7 (Not intended to be used)\r\n            [1]\r\n        ],\r\n        color: [200, 200, 200],\r\n    }\r\n];\r\n\r\nconst COMBOS = {\r\n    '00': { name: 'none', lines: { type: 'add', count: 0 }, juice: { type: 'add', count: 0 }},\r\n    // 1 - order\r\n\r\n    '1l': { name: 'single', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 } },\r\n    '2l': { name: 'double', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 } },\r\n    '3l': { name: 'triple', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 } },\r\n    '4l': { name: 'chentris', lines: { type: 'add', count: 4 }, juice: { type: 'add', count: 1600 } },\r\n    '1t': { name: 't-spin single', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 } },\r\n    '2t': { name: 't-spin double', lines: { type: 'add', count: 4 }, juice: { type: 'add', count: 1000 } },\r\n    '3t': { name: 't-spin triple', lines: { type: 'add', count: 6 }, juice: { type: 'add', count: 3200 } },\r\n    'fc': { name: 'full clear', lines: { type: 'add', count: 4 }, juice: { type: 'multiply', count: 2 } },\r\n\r\n    // 2 - order\r\n\r\n    '1l1l': { name: 'snake eyes', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 100 } },\r\n    '1l2l': { name: 'the old one two', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 100 } },\r\n    '1l3l': { name: 'the old one three', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 100 } },\r\n    '1l4l': { name: 'big five', lines: { type: 'add', count: 4 }, juice: { type: 'add', count: 1600 + 200 } },\r\n    '1l1t': { name: 'snake spins', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 100 } },\r\n    '1l2t': { name: 'the old one two spin', lines: { type: 'add', count: 4 }, juice: { type: 'add', count: 1000 + 100 } },\r\n    '1l3t': { name: 'the old one three spin', lines: { type: 'add', count: 6 }, juice: { type: 'add', count: 3200 + 200 } },\r\n    '1lfc': { name: 'one line full clear', lines: { type: 'add', count: 4 }, juice: { type: 'multiply', count: 2 } },\r\n\r\n    '2l1l': { name: 'stepdown', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 200 } },\r\n    '2l2l': { name: 'halftris', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 200 } },\r\n    '2l3l': { name: 'up a notch', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 200 } },\r\n    '2l4l': { name: 'big six', lines: { type: 'add', count: 4 }, juice: { type: 'add', count: 1600 + 400 } },\r\n    '2l1t': { name: 'spindown', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 200 } },\r\n    '2l2t': { name: 'spindle', lines: { type: 'add', count: 4 }, juice: { type: 'add', count: 1000 + 200 } },\r\n    '2l3t': { name: 'up a spin', lines: { type: 'add', count: 6 }, juice: { type: 'add', count: 3200 + 400 } },\r\n    '2lfc': { name: 'double trouble', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'multiply', count: 2 } },\r\n\r\n    '3l1l': { name: 'downtris', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 400 } },\r\n    '3l2l': { name: 'leapdown', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 400 } },\r\n    '3l3l': { name: 'trippy', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 400 } },\r\n    '3l4l': { name: 'lucky guy', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1600 + 800 } },\r\n    '3l1t': { name: 'spinleap', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 400 } },\r\n    '3l2t': { name: 'trippy spin', lines: { type: 'add', count: 4 }, juice: { type: 'add', count: 1000 + 400 } },\r\n    '3l3t': { name: 'linespin equality', lines: { type: 'add', count: 6 + 1 }, juice: { type: 'add', count: 3200 + 800 } },\r\n    '3lfc': { name: 'trippy clear', lines: { type: 'add', count: 4 + 2 }, juice: { type: 'multiply', count: 2 } },\r\n\r\n    '4l1l': { name: 'small five', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 800 } },\r\n    '4l2l': { name: 'small six', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 800 } },\r\n    '4l3l': { name: 'guy lucky', lines: { type: 'add', count: 3 + 1 }, juice: { type: 'add', count: 900 + 800 } },\r\n    '4l4l': { name: 'b2b', lines: { type: 'add', count: 4 + 2 }, juice: { type: 'add', count: 1600 + 1600 } },\r\n    '4l1t': { name: 'chenspin', lines: { type: 'add', count: 2 + 1 }, juice: { type: 'add', count: 400 + 800 } },\r\n    '4l2t': { name: 'halfdown', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1000 + 800 } },\r\n    '4l3t': { name: 'spinlucky', lines: { type: 'add', count: 6 + 2 }, juice: { type: 'add', count: 3200 + 1600 } },\r\n    '4lfc': { name: 'perfect clear', lines: { type: 'add', count: 4 + 4 }, juice: { type: 'multiply', count: 2 } },\r\n\r\n    '1t1l': { name: 'singulari-t', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 200 } },\r\n    '1t2l': { name: 'reverse spindle', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 200 } },\r\n    '1t3l': { name: 'trip from t', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 200 } },\r\n    '1t4l': { name: 'post-t chentris', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1600 + 400 } },\r\n    '1t1t': { name: 'double it', lines: { type: 'add', count: 2 + 1 }, juice: { type: 'add', count: 400 + 200 } },\r\n    '1t2t': { name: 'red-t blue-t', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1000 + 200 } },\r\n    '1t3t': { name: 'chen-t', lines: { type: 'add', count: 6 + 1 }, juice: { type: 'add', count: 3200 + 400 } },\r\n    '1tfc': { name: 't-clear', lines: { type: 'add', count: 4 + 2 }, juice: { type: 'multiply', count: 2 } },\r\n\r\n    '2t1l': { name: 'keep it on the t-l', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 400 } },\r\n    '2t2l': { name: '2 spin 2 line', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 400 } },\r\n    '2t3l': { name: 'spinny trip', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 400 } },\r\n    '2t4l': { name: '2 spin 4 me', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1600 + 800 } },\r\n    '2t1t': { name: 'stepdown-t', lines: { type: 'add', count: 2 + 1 }, juice: { type: 'add', count: 400 + 400 } },\r\n    '2t2t': { name: 'adds to 40', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1000 + 400 } },\r\n    '2t3t': { name: 'nathan special', lines: { type: 'add', count: 6 + 1 }, juice: { type: 'add', count: 3200 + 800 } },\r\n    '2tfc': { name: 'double t-clear', lines: { type: 'add', count: 4 + 2 }, juice: { type: 'multiply', count: 2 } },\r\n\r\n    '3t1l': { name: 'leapspin', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 200 } },\r\n    '3t2l': { name: 'stepspin', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 200 } },\r\n    '3t3l': { name: 'trippy spinline', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 200 } },\r\n    '3t4l': { name: 'luckyspin', lines: { type: 'add', count: 4 + 2 }, juice: { type: 'add', count: 1600 + 400 } },\r\n    '3t1t': { name: 't-chen', lines: { type: 'add', count: 2 + 2 }, juice: { type: 'add', count: 400 + 200 } },\r\n    '3t2t': { name: 'reverse nathan special', lines: { type: 'add', count: 4 + 2 }, juice: { type: 'add', count: 1000 + 200 } },\r\n    '3t3t': { name: 'trip trip goose', lines: { type: 'add', count: 6 + 2 }, juice: { type: 'add', count: 3200 + 400 } },\r\n    '3tfc': { name: 'nasty triple t-clear', lines: { type: 'add', count: 4 + 4 }, juice: { type: 'multiply', count: 2 } },\r\n\r\n    // 3 - order\r\n\r\n    // 1 line\r\n\r\n    '1l1l1l': { name: 'three eyed snake', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 400 } },\r\n    '1l1l2l': { name: 'fibonacci-3', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 400 } },\r\n    '1l1l3l': { name: '1 + 1 = 3', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 400 } },\r\n    '1l1l4l': { name: 'eeh ?!', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1600 + 800 } },\r\n\r\n    '1l1l1l1l': { name: 'still single?', lines: { type: 'add', count: 1 + 1 }, juice: { type: 'add', count: 100 + 800 } },\r\n    '1l1l1l1l1l': { name: 'leave the house', lines: { type: 'add', count: 1 + 2 }, juice: { type: 'add', count: 100 + 1600 } },\r\n    '1l1l2l3l': { name: 'fibonacci-4', lines: { type: 'add', count: 3 + 2 }, juice: { type: 'add', count: 900 + 1600 } },\r\n\r\n    '1l2l1l': { name: 'up then down', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 400 } },\r\n    '1l2l2l': { name: 'bad at counting', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 400 } },\r\n    '1l2l3l': { name: 'counting up', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 400 } },\r\n    '1l2l4l': { name: 'powers of two', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1600 + 800 } },\r\n\r\n    '1l2l3l4l': { name: 'counting higher', lines: { type: 'add', count: 4 + 2 }, juice: { type: 'add', count: 1600 + 1600 } },\r\n\r\n    '1l3l1l': { name: 'small spark', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 400 } },\r\n    '1l3l2l': { name: 'really bad at counting', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 400 } },\r\n    '1l3l3l': { name: 'two triple post single', lines: { type: 'add', count: 3 }, juice: { type: 'add', count: 900 + 400 } },\r\n    '1l3l4l': { name: 'building chentris', lines: { type: 'add', count: 4 + 1 }, juice: { type: 'add', count: 1600 + 800 } },\r\n\r\n    '1l4l1l': { name: 'big spark', lines: { type: 'add', count: 1 }, juice: { type: 'add', count: 100 + 800 } },\r\n    '1l4l2l': { name: 'single meaning', lines: { type: 'add', count: 2 }, juice: { type: 'add', count: 400 + 800 } },\r\n    '1l4l3l': { name: 'composite', lines: { type: 'add', count: 3 + 1 }, juice: { type: 'add', count: 900 + 800 } },\r\n    '1l4l4l': { name: 'single into b2b', lines: { type: 'add', count: 4 + 2 }, juice: { type: 'add', count: 1600 + 1600 } },\r\n\r\n    // 2 lines\r\n};\r\n\r\nconst T_CHECK = [\r\n    [1, 0, 1],\r\n    [0, 0, 0],\r\n    [1, 0, 1]\r\n];\r\n\r\nconst WALL_KICK = {\r\n    0: {\r\n        3: [\r\n            [0, 0],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, -2],\r\n            [1, -2],\r\n        ],\r\n        1: [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [-1, 1],\r\n            [0, -2],\r\n            [-1, -2],\r\n        ],\r\n        2: [\r\n            [0, 0],\r\n            [1, 0],\r\n            [2, 0],\r\n            [1, 1],\r\n            [2, 1],\r\n            [-1, 0],\r\n            [-2, 0],\r\n            [-1, 1],\r\n            [-2, 1],\r\n            [0, -1],\r\n            [3, 0],\r\n            [-3, 0]\r\n        ]\r\n    },\r\n    1: {\r\n        0: [\r\n            [0, 0],\r\n            [1, 0],\r\n            [1, -1],\r\n            [0, 2],\r\n            [1, 2],\r\n        ],\r\n        2: [\r\n            [0, 0],\r\n            [1, 0],\r\n            [1, -1],\r\n            [0, 2],\r\n            [1, 2],\r\n        ],\r\n        3: [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n            [-1, 1],\r\n            [-1, 2],\r\n            [0, -1],\r\n            [0, -2],\r\n            [-1, -1],\r\n            [-1, -2],\r\n            [1, 0],\r\n            [0, 3],\r\n            [0, -3]\r\n        ]\r\n    },\r\n    2: {\r\n        1: [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [-1, 1],\r\n            [0, -2],\r\n            [-1, -2],\r\n        ],\r\n        3: [\r\n            [0, 0],\r\n            [1, 0],\r\n            [1, 1],\r\n            [0, -2],\r\n            [1, -2],\r\n        ],\r\n        0: [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [-2, 0],\r\n            [-1, -1],\r\n            [-2,-1],\r\n            [1, 0],\r\n            [2, 0],\r\n            [1, -1],\r\n            [2, -1],\r\n            [0, 1],\r\n            [-3, 0],\r\n            [3, 0]\r\n        ]\r\n    },\r\n    3: {\r\n        2: [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [-1, -1],\r\n            [0, 2],\r\n            [-1, 2],\r\n        ],\r\n        0: [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [-1, -1],\r\n            [0, 2],\r\n            [-1, 2],\r\n        ],\r\n        1: [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n            [1, 1],\r\n            [1, 2],\r\n            [0, -1],\r\n            [0, -2],\r\n            [1, -1],\r\n            [1, -2],\r\n            [-1, 0],\r\n            [0, 3],\r\n            [0, -3]\r\n        ]\r\n    }\r\n}\r\n  \r\nconst WALL_KICK_I = {\r\n    0: {\r\n        3: [\r\n            [0, 0],\r\n            [2, 0],\r\n            [-1, 0],\r\n            [-1, 2],\r\n            [2, -1],\r\n        ],\r\n        1: [\r\n            [0, 0],\r\n            [-2, 0],\r\n            [1, 0],\r\n            [1, 2],\r\n            [-2, -1],\r\n        ],\r\n        2: [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [-2, 0],\r\n            [1, 0],\r\n            [2, 0],\r\n            [0, 1]\r\n        ]\r\n    },\r\n    1: {\r\n        0: [\r\n            [0, 0],\r\n            [2, 0],\r\n            [-1, 0],\r\n            [2, 1],\r\n            [-1, -2],\r\n        ],\r\n        2: [\r\n            [0, 0],\r\n            [-1, 0],\r\n            [2, 0],\r\n            [-1, 2],\r\n            [2, -1],\r\n        ],\r\n        3: [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n            [0, -1],\r\n            [0, -2],\r\n            [-1, 0]\r\n        ]\r\n    },\r\n    2: {\r\n        1: [\r\n            [0, 0],\r\n            [-2, 0],\r\n            [1, 0],\r\n            [-2, 1],\r\n            [1, -1],\r\n        ],\r\n        3: [\r\n            [0, 0],\r\n            [2, 0],\r\n            [-1, 0],\r\n            [2, 1],\r\n            [-1, -1],\r\n        ],\r\n        0: [\r\n            [0, 0],\r\n            [1, 0],\r\n            [2, 0],\r\n            [-1, 0],\r\n            [-2, 0],\r\n            [0, -1]\r\n        ]\r\n    },\r\n    3: {\r\n        2: [\r\n            [0, 0],\r\n            [1, 0],\r\n            [-2, 0],\r\n            [1, 2],\r\n            [-2, -1],\r\n        ],\r\n        0: [\r\n            [0, 0],\r\n            [-2, 0],\r\n            [1, 0],\r\n            [-2, 1],\r\n            [1, -2],\r\n        ],\r\n        1: [\r\n            [0, 0],\r\n            [0, 1],\r\n            [0, 2],\r\n            [0, -1],\r\n            [0, -2],\r\n            [1, 0]\r\n        ]\r\n    }\r\n}\r\n\r\ninterface Board {\r\n    srng: string,\r\n\r\n    tiles: Array<number>,\r\n    bag: Array<Piece>,\r\n\r\n    hold: Piece,\r\n    canHold: boolean,\r\n\r\n    lost: boolean,\r\n\r\n    bagPool: number,\r\n    garbagePool: number,\r\n\r\n    move: number,\r\n\r\n    combo: string,\r\n\r\n    lastDamager: string,\r\n    garbageQueue: Array<any>,\r\n\r\n    clears: number,\r\n\r\n    juice: number,\r\n    lines: number,\r\n\r\n    finishingMoves: number,\r\n};\r\n\r\ninterface Move {\r\n    type: MoveType,\r\n    submoves?: Array<Direction>,\r\n    garbage?: number,\r\n};\r\n\r\ninterface SubmoveState {\r\n    pieceX: number,\r\n    pieceY: number,\r\n    pieceRotation: number,\r\n    submoves: Array<Direction>,\r\n    lastMoveSuccessful: boolean,\r\n    dropLines: number,\r\n}\r\n\r\nenum Piece {\r\n    Empty = -1,\r\n    I = 0,\r\n    J = 1,\r\n    L = 2,\r\n    O = 3,\r\n    T = 4,\r\n    Z = 5,\r\n    S = 6,\r\n    Garbage = 7,\r\n};\r\n\r\nenum MoveType {\r\n    Move = \"move\",\r\n    Hold = \"hold\",\r\n    AddGarbage = \"addGarbage\",\r\n};\r\n\r\nenum Direction {\r\n    Left = \"left\",\r\n    Right = \"right\",\r\n\r\n    Down = \"down\",\r\n    Drop = \"drop\",\r\n\r\n    RotateRight = \"rotateRight\",\r\n    RotateLeft = \"rotateLeft\",\r\n    Rotate180 = \"rotate180\",\r\n};\r\n\r\ninterface Rules {\r\n    competitive: boolean,\r\n    initialSpeed: number,\r\n    resendGarbage: boolean,\r\n    forgivingCombos: boolean,\r\n    garbageTurns: number,\r\n    garbageDefense: boolean,\r\n}\r\n\r\nconst COMPETITIVE_DEFAULTS: Rules = {\r\n    competitive: true,\r\n    initialSpeed: 80,\r\n    resendGarbage: true,\r\n    forgivingCombos: false,\r\n    garbageTurns: 1,\r\n    garbageDefense: false,\r\n};\r\n\r\nconst NORMAL_DEFAULTS: Rules = {\r\n    competitive: false,\r\n    initialSpeed: 80,\r\n    resendGarbage: true,\r\n    forgivingCombos: true,\r\n    garbageTurns: 2,\r\n    garbageDefense: true,\r\n};\r\n\r\nfunction createNewBag(srng: string, bagIndex: number, generator: Function): Array<Piece> {\r\n    let pieces = [Piece.I, Piece.J, Piece.L, Piece.O, Piece.T, Piece.Z, Piece.S];\r\n\r\n    const bag: Array<Piece> = [];\r\n    const rng = generator(`${srng}-bag-${bagIndex}`);\r\n\r\n    for (let i = 0; i < 7; i++) {\r\n        const index = Math.floor(rng() * pieces.length);\r\n\r\n        bag.push(pieces[index]);\r\n        pieces.splice(index, 1);\r\n    };\r\n\r\n    return bag;\r\n}\r\n\r\nfunction createNewBoard(playerId: string, matchId: string, gameId: string, generator: Function): Board {\r\n    const srng = `${playerId}-${matchId}-${gameId}`;\r\n    return {\r\n        srng,\r\n\r\n        tiles: new Array(400).fill(Piece.Empty),\r\n        bag: createNewBag(srng, 0, generator),\r\n\r\n        hold: Piece.Empty,\r\n        canHold: true,\r\n\r\n        lost: false,\r\n\r\n        bagPool: 0,\r\n        garbagePool: 0,\r\n\r\n        move: 0,\r\n\r\n        combo: '',\r\n\r\n        lastDamager: playerId,\r\n        garbageQueue: [],\r\n\r\n        clears: 0,\r\n\r\n        juice: 0,\r\n        lines: 0,\r\n\r\n        finishingMoves: -1,\r\n    };\r\n}\r\n\r\nfunction deepCopyBoard(board: Board): Board {\r\n    return {\r\n        srng: board.srng,\r\n\r\n        tiles: [...board.tiles],\r\n        bag: [...board.bag],\r\n\r\n        hold: board.hold,\r\n        canHold: board.canHold,\r\n\r\n        lost: board.lost,\r\n\r\n        bagPool: board.bagPool,\r\n        garbagePool: board.garbagePool,\r\n\r\n        move: board.move,\r\n\r\n        combo: board.combo,\r\n\r\n        lastDamager: board.lastDamager,\r\n        garbageQueue: [...board.garbageQueue],\r\n\r\n        clears: board.clears,\r\n\r\n        juice: board.juice,\r\n        lines: board.lines,\r\n\r\n        finishingMoves: board.finishingMoves,\r\n    };\r\n}\r\n\r\nfunction highestTile(board: Board): number {\r\n    for (let i = 0; i < 400; i++) {\r\n        if (board.tiles[i] !== Piece.Empty) {\r\n            return Math.floor(i / 10);\r\n        }\r\n    }\r\n    return 40;\r\n}\r\n\r\nfunction highestGarbageTile(board: Board): number {\r\n    for (let i = 0; i < 400; i++) {\r\n        if (board.tiles[i] === Piece.Garbage) {\r\n            return Math.floor(i / 10);\r\n        }\r\n    }\r\n    return 40;\r\n}\r\n\r\nfunction rotateArray(array: Array<Array<number>>, rotation: number): Array<Array<number>> {\r\n    const rot = mod(rotation, 4);\r\n\r\n    if (rot <= 0) {\r\n        return array.map(row => [...row]);\r\n    } else if (rot === 1) {\r\n        return array.map((row, i) => row.map((_, j) => array[array.length - j - 1][i]));\r\n    } else if (rot === 2) {\r\n        return array.map((row, i) => row.map((_, j) => array[array.length - i - 1][array.length - j - 1]));\r\n    } else {\r\n        return array.map((row, i) => row.map((_, j) => array[j][array.length - i - 1]));\r\n    } \r\n\r\n}\r\n\r\nfunction getRotatedPiece(piece: Piece, rotation: number): Array<Array<number>> {\r\n    const layout = PIECES[piece].layout;\r\n    return rotateArray(layout, rotation);\r\n}\r\n\r\nfunction pieceFits(piece: Piece, board: Board, x: number, y: number, rotation: number): boolean {\r\n    const layout = getRotatedPiece(piece, rotation);\r\n\r\n    for (let i = 0; i < layout.length; i++) {\r\n        for (let j = 0; j < layout[i].length; j++) {\r\n\r\n            if (layout[i][j] === 1) {\r\n                const nx = x + j, ny = y + i;\r\n                const index = (ny) * 10 + nx;\r\n\r\n                if (nx < 0 || nx >= 10 || ny < 0 || ny >= 40) {\r\n                    return false;\r\n                }\r\n                if (index > board.tiles.length || index < 0 || board.tiles[index] !== Piece.Empty) {\r\n                    return false;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nfunction defaultSubmoveState(): SubmoveState {\r\n    return {\r\n        pieceX: 3,\r\n        pieceY: 16,\r\n        pieceRotation: 0,\r\n        submoves: [],\r\n        lastMoveSuccessful: true,\r\n        dropLines: 0,\r\n    };\r\n}\r\n\r\nfunction makeSubmove(submove: Direction, board: Board, submoveState: SubmoveState): SubmoveState {\r\n\r\n    if (submoveState.submoves.includes(Direction.Drop)) {\r\n        return submoveState;\r\n    }\r\n    \r\n    const state: SubmoveState = {\r\n        pieceX: submoveState.pieceX,\r\n        pieceY: submoveState.pieceY,\r\n        pieceRotation: submoveState.pieceRotation,\r\n        submoves: [...submoveState.submoves],\r\n        lastMoveSuccessful: false,\r\n        dropLines: 0,\r\n    };\r\n\r\n    if (submove === Direction.Left) {\r\n        if (pieceFits(board.bag[0], board, state.pieceX - 1, state.pieceY, state.pieceRotation)) {\r\n            state.pieceX -= 1;\r\n            state.submoves.push(Direction.Left);\r\n            state.lastMoveSuccessful = true;\r\n        }\r\n    } else if (submove === Direction.Right) {\r\n        if (pieceFits(board.bag[0], board, state.pieceX + 1, state.pieceY, state.pieceRotation)) {\r\n            state.pieceX += 1;\r\n            state.submoves.push(Direction.Right);\r\n            state.lastMoveSuccessful = true;\r\n        }\r\n    } else if (submove === Direction.Down) {\r\n        if (pieceFits(board.bag[0], board, state.pieceX, state.pieceY + 1, state.pieceRotation)) {\r\n            state.pieceY += 1;\r\n            state.submoves.push(Direction.Down);\r\n            state.lastMoveSuccessful = true;\r\n        }\r\n    } else if (submove === Direction.Drop) {\r\n        state.submoves.push(Direction.Drop);\r\n        state.lastMoveSuccessful = true;\r\n        while (pieceFits(board.bag[0], board, state.pieceX, state.pieceY + 1, state.pieceRotation)) {\r\n            state.pieceY += 1;\r\n        }\r\n        state.dropLines = state.pieceY - submoveState.pieceY;\r\n    } else if (submove === Direction.RotateRight || submove === Direction.RotateLeft || submove === Direction.Rotate180) {\r\n        if (board.bag[0] !== Piece.O) {\r\n\r\n            const rotate = submove === Direction.RotateRight ? 1 : (submove === Direction.RotateLeft ? -1 : 2);\r\n            const wallKickArray = board.bag[0] == Piece.I ? WALL_KICK_I : WALL_KICK;\r\n\r\n            const oldRotation = state.pieceRotation;\r\n            const newRotation = mod((state.pieceRotation + rotate), 4);\r\n\r\n            for (let i = 0; i < 5; i++) {\r\n                const wallKick = wallKickArray[oldRotation][newRotation][i];\r\n                if (pieceFits(board.bag[0], board, state.pieceX + wallKick[0], state.pieceY - wallKick[1], newRotation)) {\r\n                    state.pieceX = state.pieceX + wallKick[0];\r\n                    state.pieceY = state.pieceY - wallKick[1];\r\n                    state.pieceRotation = newRotation;\r\n                    state.submoves.push(submove);\r\n                    state.lastMoveSuccessful = true;\r\n                    break;\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    return state;\r\n}\r\n\r\nfunction getJuiceLevel(juice: number) {\r\n    return Math.log((juice / 2000) + 1) / Math.log(2);\r\n}\r\n\r\nfunction getLevelJuice(level: number) {\r\n    return 2000 * (Math.pow(2, level) - 1);\r\n}\r\n\r\nfunction getCombos(combo: string): Array<any> {\r\n    let combos: Array<any> = [];\r\n    let valid = 0;\r\n\r\n    for (let i = 0; i < combo.length / 2; i += 1) {\r\n        if (combo[i * 2] === \"0\") {\r\n            continue;\r\n        }\r\n\r\n        let addCombo;\r\n        const longCombo = combo.substring(0, i * 2 + 2).replace(/0/g, '');\r\n        for (let j = 0; j <= longCombo.length / 2; j += 1) { \r\n            const newCombo = COMBOS[longCombo.substring(j * 2, i * 2 + 2)];\r\n            if (newCombo) {\r\n                addCombo = { name: newCombo.name, lines: { type: newCombo.lines.type, count: newCombo.lines.count }, juice: { type: newCombo.juice.type, count: newCombo.juice.count } };\r\n                break;\r\n            }\r\n        } \r\n\r\n        if (addCombo) {\r\n            addCombo.original = combo.substring(i * 2, i * 2 + 2);\r\n            if (addCombo.lines.type === 'add') {\r\n                addCombo.lines.count = addCombo.lines.count + Math.max(0, Math.floor(valid / 2));\r\n            } else {\r\n                addCombo.lines.count = addCombo.lines.count * Math.max(1, Math.floor(valid / 2));\r\n            }\r\n            if (addCombo.juice.type === 'add') {\r\n                addCombo.juice.count = addCombo.juice.count * Math.max(1, valid - 1);\r\n            }\r\n            combos.push(addCombo);\r\n            valid += 1;\r\n        }\r\n    }\r\n    return combos;\r\n}\r\n\r\nfunction makeMove(move: Move, board: Board, generator: Function, rules: Rules, ignoreGarbage = false): Board {\r\n\r\n    if (board.lost) {\r\n        return board;\r\n    }\r\n    \r\n    let newBoard = deepCopyBoard(board);\r\n\r\n    let usedPiece = Piece.Empty;\r\n    let submoveState = defaultSubmoveState();\r\n\r\n    switch (move.type) {\r\n        case MoveType.Move:\r\n\r\n            for (const submove of move.submoves || []) {\r\n                submoveState = makeSubmove(submove, newBoard, submoveState);\r\n            }\r\n\r\n            const piece = getRotatedPiece(newBoard.bag[0], submoveState.pieceRotation);\r\n            let over = true;\r\n\r\n            for (let i = 0; i < piece.length; i++) {\r\n                for (let j = 0; j < piece[i].length; j++) {\r\n                    if (piece[i][j] === 1) {\r\n                        const index = (submoveState.pieceY + i) * 10 + submoveState.pieceX + j;\r\n                        newBoard.tiles[index] = newBoard.bag[0];\r\n                        if (index >= 200) {\r\n                            over = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            usedPiece = newBoard.bag.shift() || Piece.Empty;\r\n            newBoard.canHold = true;\r\n\r\n            if (over) {\r\n                newBoard.lost = true;\r\n            }\r\n\r\n            if (newBoard.finishingMoves >= 0) {\r\n                newBoard.finishingMoves -= 1;\r\n            }\r\n\r\n            break;\r\n        case MoveType.Hold:\r\n            if (newBoard.canHold) {\r\n                const hold = newBoard.hold;\r\n                newBoard.hold = newBoard.bag[0];\r\n                newBoard.canHold = false;\r\n                if (hold !== Piece.Empty) {\r\n                    newBoard.bag[0] = hold;\r\n                } else {\r\n                    newBoard.bag.shift();\r\n                }\r\n            }\r\n            break;\r\n        case MoveType.AddGarbage:\r\n            let garbage = move.garbage || 0;\r\n            if (highestTile(newBoard) - garbage <= 0 || highestGarbageTile(newBoard) - garbage <= 20) {\r\n                board.lost = true;\r\n                garbage = highestTile(newBoard);\r\n            }\r\n\r\n            const rng = generator(`${newBoard.srng}-garbage-${garbage}-${newBoard.garbagePool}`);\r\n            newBoard.garbagePool += garbage;\r\n\r\n            const noGarbageIndex = Math.floor(rng() * 10);\r\n\r\n            const preTiles = newBoard.tiles.slice(10 * (garbage));\r\n            const postTiles = new Array(garbage * 10)\r\n                .fill(Piece.Empty)\r\n                .map((_, i) => i % 10 === noGarbageIndex ? Piece.Empty : Piece.Garbage);\r\n\r\n            newBoard.tiles = [...preTiles, ...postTiles];\r\n\r\n            break;\r\n    }\r\n\r\n    if (newBoard.bag.length < 7) {\r\n        newBoard.bag = newBoard.bag.concat(createNewBag(newBoard.srng, newBoard.bagPool, generator));\r\n        newBoard.bagPool++;\r\n    }\r\n\r\n    const lines: Array<Array<number>> = [];\r\n    let clears = 0;\r\n\r\n    for (let i = 0; i < 40; i++) {\r\n        const line = newBoard.tiles.slice(i * 10, (i + 1) * 10);\r\n        const cleared = line.every(tile => tile !== Piece.Empty);\r\n            \r\n        if (cleared) {\r\n\r\n            if (rules.resendGarbage) {\r\n                clears += 1;\r\n            } else if (line.every(tile => tile !== Piece.Garbage)) {\r\n                clears += 1;\r\n            }\r\n            \r\n        } else {\r\n            lines.push(line);\r\n        }\r\n    }\r\n\r\n    newBoard.clears = clears;\r\n    let tSpin = false;\r\n\r\n    newBoard.lines += newBoard.clears;\r\n\r\n    if (newBoard.clears > 0) {\r\n        if (board.finishingMoves >= 0) {\r\n            newBoard.finishingMoves += newBoard.clears;\r\n        }\r\n        let j = 0;\r\n        for (let i = 0; i < newBoard.clears; i++) {\r\n            \r\n            if (newBoard.garbageQueue.length <= 0) {\r\n                break;\r\n            }\r\n\r\n            j += 1;\r\n            const garbage = newBoard.garbageQueue.shift();\r\n\r\n            garbage.amount -= 1;\r\n            if (garbage.amount > 0) {\r\n                newBoard.garbageQueue.unshift(garbage);\r\n            }\r\n        }\r\n        newBoard.clears -= j;\r\n\r\n        if (rules.garbageDefense) {\r\n            for (let garbage of newBoard.garbageQueue) {\r\n                garbage.turns += 1;\r\n            }\r\n        }\r\n\r\n        if (newBoard.clears > 0 && usedPiece === Piece.T && submoveState.dropLines === 0) {\r\n            const submoves = move.submoves || [];\r\n            const lastMove = [...submoves].reverse().find(submove => submove !== Direction.Down && submove !== Direction.Drop);\r\n            if (lastMove === Direction.RotateLeft || lastMove === Direction.RotateRight) {\r\n                \r\n                function check(x, y) {\r\n                    return x < 0 || x >= 10 || y < 0 || y >= 40 || newBoard.tiles[y * 10 + x] !== Piece.Empty;\r\n                }\r\n\r\n                const piece = rotateArray(T_CHECK, submoveState.pieceRotation);\r\n\r\n                let corners = 0;\r\n\r\n                for (let i = 0; i < piece.length; i++) {\r\n                    for (let j = 0; j < piece[i].length; j++) {\r\n                        if (piece[i][j] === 1) {\r\n                            if (check(submoveState.pieceX + j, submoveState.pieceY + i)) {\r\n                                corners += 1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                if (corners >= 3) {\r\n                    tSpin = true;\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    const newTiles = new Array(400).fill(Piece.Empty);\r\n\r\n    for (let i = 0; i < lines.length; i++) {\r\n        newTiles.splice((i + (40 - lines.length)) * 10, 10, ...lines[i]);\r\n    }\r\n\r\n    newBoard.tiles = newTiles;\r\n\r\n    if (!ignoreGarbage && move.type === MoveType.Move) {\r\n\r\n        for (let i = 0; i < newBoard.garbageQueue.length; i++) {\r\n            const garbage = newBoard.garbageQueue[i];\r\n            garbage.turns -= 1;\r\n\r\n            if (garbage.turns <= 0) {\r\n                newBoard.lastDamager = garbage.player;\r\n                newBoard = makeMove({ type: MoveType.AddGarbage, garbage: garbage.amount}, newBoard, generator, rules, true);\r\n            }\r\n        }\r\n            \r\n        newBoard.garbageQueue = newBoard.garbageQueue.filter(garbage => garbage.turns > 0);\r\n    }\r\n\r\n    const newLayout = PIECES[newBoard.bag[0]].layout;\r\n\r\n    for (let i = 0; i < newLayout.length; i++) {\r\n        for (let j = 0; j < newLayout[i].length; j++) {\r\n            if (newLayout[i][j] === 1) {\r\n                const index = (i + 16) * 10 + (j + 3);\r\n                if (newBoard.tiles[index] !== Piece.Empty) {\r\n                    newBoard.lost = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (move.type === MoveType.Move) {\r\n        if (newBoard.clears <= 0) {\r\n            if (newBoard.combo.length >= 2) {\r\n                if (!rules.forgivingCombos || newBoard.combo.substring(newBoard.combo.length - 2) === '00') {\r\n                    if (newBoard.finishingMoves < 0) { \r\n                        newBoard.combo = '';\r\n                    }\r\n                } else {\r\n                    newBoard.combo += '00';\r\n                }\r\n            }\r\n        } else {\r\n            newBoard.combo += newBoard.clears + (tSpin ? 't' : 'l');\r\n    \r\n            if (newTiles.every(tile => tile === Piece.Empty)) {\r\n                newBoard.combo += 'fc';\r\n            }\r\n\r\n            const combos = getCombos(newBoard.combo);\r\n            const lastCombo = combos[combos.length - 1];\r\n\r\n            if (lastCombo.juice.type === 'multiply') {\r\n                let totalJuice = 0;\r\n                for (let combo of combos) {\r\n                    if (combo.juice.type === 'multiply') {\r\n                        continue;\r\n                    }\r\n                    totalJuice += combo.juice.count;\r\n                }\r\n                newBoard.juice += totalJuice;\r\n            } else {\r\n                newBoard.juice += lastCombo.juice.count;\r\n            }\r\n        }\r\n    }\r\n\r\n    if (newBoard.finishingMoves < 0 && board.finishingMoves >= 0) {\r\n        newBoard.lost = true;\r\n    }\r\n\r\n    return newBoard;\r\n\r\n}\r\n\r\nfunction mod(n, m) {\r\n    return ((n % m) + m) % m;\r\n}"],"names":[],"version":3,"file":"index.988c21c6.js.map","sourceRoot":"/__parcel_source_root/"}